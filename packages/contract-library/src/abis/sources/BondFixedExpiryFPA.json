{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "teller_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auctioneer_AmountLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_BadExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MarketNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MaxPayoutExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NewMarketsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotEnoughCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OnlyMarketOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "MarketClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fixedPrice",
          "type": "uint256"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowNewMarkets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callbackAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "closeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "params_",
          "type": "bytes"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAggregator",
      "outputs": [
        {
          "internalType": "contract IBondAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoForPurchase",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "capacityInQuote",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "scale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "maxPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositInterval",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minMarketDuration",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "pullOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchaseBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setAllowNewMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setCallbackAuthStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[6]",
          "name": "defaults_",
          "type": "uint32[6]"
        }
      ],
      "name": "setDefaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint32[3]",
          "name": "intervals_",
          "type": "uint32[3]"
        }
      ],
      "name": "setIntervals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "depositInterval_",
          "type": "uint48"
        }
      ],
      "name": "setMinDepositInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "duration_",
          "type": "uint48"
        }
      ],
      "name": "setMinMarketDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "terms",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "conclusion",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162002d9d38038062002d9d833981016040819052620000349162000125565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600580546001600160681b03191669015180000000000e1001179055506200018d9050565b6001600160a01b03811681146200012257600080fd5b50565b600080600080608085870312156200013c57600080fd5b845162000149816200010c565b60208601519094506200015c816200010c565b60408601519093506200016f816200010c565b606086015190925062000182816200010c565b939692955090935050565b60805160a051612bc7620001d66000396000818161046e01528181610c2c015281816114260152818161169f01526117520152600081816102ae01526120d30152612bc76000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063946824cd1161012a578063bd1f3a5e116100bd578063c7bf8ca01161008c578063d2bee32311610071578063d2bee3231461073f578063e007fa971461075c578063f61338f61461076f57600080fd5b8063c7bf8ca0146106fe578063d20406871461071157600080fd5b8063bd1f3a5e14610647578063bf48582b14610658578063bf7e214f1461066b578063c0aa0e8a1461068b57600080fd5b8063afa9d3b0116100f9578063afa9d3b01461050e578063b1283e771461051b578063bbbdd95a14610621578063bcf6cde81461063457600080fd5b8063946824cd146104495780639787d1071461046c578063acc5570c14610492578063ae418095146104fb57600080fd5b806357e333ba116101bd5780636729a41e1161018c5780637a9e5e4b116101715780637a9e5e4b146104035780638b098db3146104165780638da5cb5b1461042957600080fd5b80636729a41e146103bb578063699e17d9146103f157600080fd5b806357e333ba1461033c5780635dc4d16b1461034f5780635f77274e146103725780636352211e1461038557600080fd5b80633ad59dbc116101f95780633ad59dbc146102ac5780633adec5a7146102f357806344ee01721461031657806353c7f8e01461032957600080fd5b806310b053171461022b57806313af4035146102405780631c063a6c146102535780632750745814610289575b600080fd5b61023e6102393660046125f2565b610782565b005b61023e61024e36600461263d565b61083d565b6102766102613660046125f2565b60009081526002602052604090206004015490565b6040519081526020015b60405180910390f35b61029c6102973660046125f2565b610946565b6040519015158152602001610280565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610280565b6102766103013660046125f2565b60009081526002602052604090206006015490565b61023e610324366004612679565b6109b3565b610276610337366004612696565b610aed565b61027661034a3660046125f2565b610cd7565b61029c61035d36600461263d565b60066020526000908152604090205460ff1681565b61023e610380366004612721565b610de5565b6102ce6103933660046125f2565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6102ce6103c93660046125f2565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023e6103ff36600461273e565b5050565b61023e61041136600461263d565b610eaa565b61029c6104243660046125f2565b611007565b6000546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6102766104573660046125f2565b60009081526002602052604090206007015490565b7f00000000000000000000000000000000000000000000000000000000000000006102ce565b6104a56104a03660046125f2565b61104d565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c001610280565b61023e6105093660046125f2565b611160565b60055461029c9060ff1681565b6105ad6105293660046125f2565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460068601546007870154600888015460099098015473ffffffffffffffffffffffffffffffffffffffff97881699881698968816978616967401000000000000000000000000000000000000000090960460ff1695908b565b6040805173ffffffffffffffffffffffffffffffffffffffff9c8d1681529a8c1660208c0152988b16988a0198909852989095166060880152921515608087015260a086019190915260c085015260e084015261010083015261012082019290925261014081019190915261016001610280565b61023e61062f366004612771565b61123e565b61023e6106423660046127aa565b611328565b61023e610655366004612828565b50565b6102766106663660046128b9565b6113d8565b6001546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6106d56106993660046125f2565b60036020526000908152604090205465ffffffffffff80821691660100000000000081048216916c010000000000000000000000009091041683565b6040805165ffffffffffff94851681529284166020840152921691810191909152606001610280565b61027661070c3660046127aa565b611527565b60055461072890610100900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610280565b60055461072890670100000000000000900465ffffffffffff1681565b61027661076a3660046128f2565b611738565b61023e61077d366004612679565b6119fe565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146107df576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260046020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61086b336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b6108d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610988575060008281526003602052604090205465ffffffffffff428116660100000000000090920416115b80156109ad575060008281526003602052604090205465ffffffffffff428116911611155b92915050565b6109e1336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b610a47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b60055465ffffffffffff61010090910481169082161080610a725750620151808165ffffffffffff16105b15610aa9576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216670100000000000000027fffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffff909216919091179055565b600080610afc83850185612930565b9050620151808160e00151610b119190612a2b565b610b1e9062015180612a77565b65ffffffffffff90811660e08301526101008201516000911615610b4757816101000151610b49565b425b9050600082610120015182610b5e9190612aa5565b90508260e0015165ffffffffffff16600014158015610b9057508065ffffffffffff168360e0015165ffffffffffff16105b15610bc7576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610bd284611c48565b90508360e0015165ffffffffffff16600014610ccd57835160e08501516040517fc6e38a4b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263c6e38a4b92610c889260040173ffffffffffffffffffffffffffffffffffffffff92909216825265ffffffffffff16602082015260400190565b6020604051808303816000875af1158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb9190612acf565b505b9695505050505050565b60008181526002602081815260408084206006810154825161016081018452825473ffffffffffffffffffffffffffffffffffffffff9081168252600184015481169582019590955294820154841692850192909252600381015492831660608501527401000000000000000000000000000000000000000090920460ff16151560808401819052600483015460a0850152600583015460c085015260e084018290526007830154610100850152600883015461012085015260099092015461014084015291908390610dae578160a00151610dc3565b61010082015160a0830151610dc39185612526565b9050808260c0015111610dda578160c00151610ddc565b805b95945050505050565b610e13336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b610e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331480610f8d57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8d9190612aec565b610f9657600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000818152600360205260408120546c01000000000000000000000000900465ffffffffffff16635dba24008111156110435742811115611046565b80155b9392505050565b6000818152600260208181526040808420815161016081018352815473ffffffffffffffffffffffffffffffffffffffff90811680835260018401548216838701819052968401548216838601819052600380860154938416606086018190527401000000000000000000000000000000000000000090940460ff1615156080860152600486015460a0860152600586015460c0860152600686015460e08601526007860154610100860152600886015461012086015260099095015461014085015289895293909552928620548695869586958695869594929391926c01000000000000000000000000900465ffffffffffff1661114b8d610cd7565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146111bd576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff1666010000000000004265ffffffffffff160217905560029091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b61126c336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b6112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314611385576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526004602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182916114a6917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa15801561146f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114939190612b09565b869065ffffffffffff16620186a0612526565b6000858152600260205260408120600781015460069091015492935090916114da91906114d3858a612b26565b9190612526565b90506114e585610cd7565b81111561151e576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b91506110469050565b6000828152600260208181526040808420815161016081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481168286015282860154811693820193909352600382015492831660608201527401000000000000000000000000000000000000000090920460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e08301819052600782015461010084015260088201546101208401526009909101546101408301528685529290915290600082608001516116155761010083015160a0840151611610918490612526565b61161b565b8260a001515b9050600061163d838561010001518660c001516125269092919063ffffffff16565b9050600081831061164e5781611650565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925060009161171f917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa1580156116e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170c9190612b09565b839065ffffffffffff16620186a0612526565b905061172b8183612b3d565b9998505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146117a9576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260205260409020600381015473ffffffffffffffffffffffffffffffffffffffff16158015906118075750805473ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205460ff16155b1561183e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61184785610946565b61187d576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60078101546006820154611892918691612526565b9150828210156118ce576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806005015482111561190c576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600381015474010000000000000000000000000000000000000000900460ff1661193c5780600401548211611944565b806004015484115b1561197b576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600381015474010000000000000000000000000000000000000000900460ff166119a557816119a7565b835b8160040160008282546119ba9190612b26565b92505081905550838160090160008282546119d59190612b3d565b92505081905550818160080160008282546119f09190612b3d565b909155509195945050505050565b611a2c336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b60055465ffffffffffff67010000000000000090910481169082161180611ac25750610e108165ffffffffffff16105b15611af9576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590611c1b57506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1b9190612aec565b80611c40575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b60055460009060ff16611c87576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfc9190612b55565b90506000836020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d739190612b55565b905060068260ff161080611d8a575060128260ff16115b15611dc1576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff161080611dd6575060128160ff16115b15611e0d576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe884610140015160000b1280611e4b5750601884610140015160000b135b15611e82576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526006602052604090205460ff16158015611ebb5750604084015173ffffffffffffffffffffffffffffffffffffffff1615155b15611ef2576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084610100015165ffffffffffff16118015611f1b57504284610100015165ffffffffffff16105b15611f52576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600082610140015160240160ff16600a0a90508260a00151600003611fa5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055461012084015165ffffffffffff670100000000000000909204821691161080611fe7575060055460c084015165ffffffffffff61010090920482169116105b8061200a575082610120015165ffffffffffff168360c0015165ffffffffffff16115b15612041576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006120898460c0015165ffffffffffff1685610120015165ffffffffffff1686606001516120745786608001516114d3565b60a087015160808801516114d3918790612526565b845160208601516040517fb435914300000000000000000000000000000000000000000000000000000000815292935060009273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263b4359143926121289260040173ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6020604051808303816000875af1158015612147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216b9190612b78565b90506040518061016001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001866000015173ffffffffffffffffffffffffffffffffffffffff168152602001866020015173ffffffffffffffffffffffffffffffffffffffff168152602001866040015173ffffffffffffffffffffffffffffffffffffffff168152602001866060015115158152602001866080015181526020018381526020018660a0015181526020018481526020016000815260200160008152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090155905050600085610100015165ffffffffffff166000146123e0578561010001516123e2565b425b905060405180606001604052808265ffffffffffff1681526020018761012001518361240e9190612aa5565b65ffffffffffff908116825260e089018051821660209384015260008681526003845260409081902085518154878701519784015186166c01000000000000000000000000027fffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffff9887166601000000000000027fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090921692871692909217179690961695909517909455828a01518a51915160a08c015186519190941681529384019290925273ffffffffffffffffffffffffffffffffffffffff9182169391169185917f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d910160405180910390a450949350505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361257d576000841161257257600080fd5b508290049050611046565b80841161258957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006020828403121561260457600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461065557600080fd5b80356126388161260b565b919050565b60006020828403121561264f57600080fd5b81356110468161260b565b65ffffffffffff8116811461065557600080fd5b80356126388161265a565b60006020828403121561268b57600080fd5b81356110468161265a565b600080602083850312156126a957600080fd5b823567ffffffffffffffff808211156126c157600080fd5b818501915085601f8301126126d557600080fd5b8135818111156126e457600080fd5b8660208285010111156126f657600080fd5b60209290920196919550909350505050565b801515811461065557600080fd5b803561263881612708565b60006020828403121561273357600080fd5b813561104681612708565b6000806080838503121561275157600080fd5b823591508360808401111561276557600080fd5b50926020919091019150565b6000806040838503121561278457600080fd5b823561278f8161260b565b9150602083013561279f81612708565b809150509250929050565b600080604083850312156127bd57600080fd5b82359150602083013561279f8161260b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715612822576128226127cf565b60405290565b600060c0828403121561283a57600080fd5b82601f83011261284957600080fd5b60405160c0810181811067ffffffffffffffff8211171561286c5761286c6127cf565b6040528060c084018581111561288157600080fd5b845b818110156128ae57803563ffffffff811681146128a05760008081fd5b835260209283019201612883565b509195945050505050565b6000806000606084860312156128ce57600080fd5b833592506020840135915060408401356128e78161260b565b809150509250925092565b60008060006060848603121561290757600080fd5b505081359360208301359350604090920135919050565b8035600081900b811461263857600080fd5b6000610160828403121561294357600080fd5b61294b6127fe565b6129548361262d565b81526129626020840161262d565b60208201526129736040840161262d565b604082015261298460608401612716565b60608201526080830135608082015260a083013560a08201526129a960c0840161266e565b60c08201526129ba60e0840161266e565b60e08201526101006129cd81850161266e565b908201526101206129df84820161266e565b908201526101406129f184820161291e565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600065ffffffffffff80841680612a6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600065ffffffffffff80831681851681830481118215151615612a9c57612a9c6129fc565b02949350505050565b600065ffffffffffff808316818516808303821115612ac657612ac66129fc565b01949350505050565b600060208284031215612ae157600080fd5b81516110468161260b565b600060208284031215612afe57600080fd5b815161104681612708565b600060208284031215612b1b57600080fd5b81516110468161265a565b600082821015612b3857612b386129fc565b500390565b60008219821115612b5057612b506129fc565b500190565b600060208284031215612b6757600080fd5b815160ff8116811461104657600080fd5b600060208284031215612b8a57600080fd5b505191905056fea2646970667358221220dbd43284e3a22d72216cad22531404d99e6311480c642d7c589399661c55e9cc64736f6c634300080f0033",
    "sourceMap": "1664:1621:30:-:0;;;1757:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;1910:7:30;;1919:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;;4242:25:41;;::::1;;::::0;4277:17:::1;;::::0;-1:-1:-1;;4305:18:41::1;:28:::0;;-1:-1:-1;;;;;;4380:22:41;;;;;-1:-1:-1;1664:1621:30;;-1:-1:-1;1664:1621:30;14:144:124;-1:-1:-1;;;;;102:31:124;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:771::-;325:6;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;451:9;445:16;470:44;508:5;470:44;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:46:124;562:25;596:46;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;726:46:124;692:25;726:46;:::i;:::-;843:2;828:18;;822:25;791:7;;-1:-1:-1;856:46:124;822:25;856:46;:::i;:::-;163:771;;;;-1:-1:-1;163:771:124;;-1:-1:-1;;163:771:124:o;:::-;1664:1621:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102265760003560e01c8063946824cd1161012a578063bd1f3a5e116100bd578063c7bf8ca01161008c578063d2bee32311610071578063d2bee3231461073f578063e007fa971461075c578063f61338f61461076f57600080fd5b8063c7bf8ca0146106fe578063d20406871461071157600080fd5b8063bd1f3a5e14610647578063bf48582b14610658578063bf7e214f1461066b578063c0aa0e8a1461068b57600080fd5b8063afa9d3b0116100f9578063afa9d3b01461050e578063b1283e771461051b578063bbbdd95a14610621578063bcf6cde81461063457600080fd5b8063946824cd146104495780639787d1071461046c578063acc5570c14610492578063ae418095146104fb57600080fd5b806357e333ba116101bd5780636729a41e1161018c5780637a9e5e4b116101715780637a9e5e4b146104035780638b098db3146104165780638da5cb5b1461042957600080fd5b80636729a41e146103bb578063699e17d9146103f157600080fd5b806357e333ba1461033c5780635dc4d16b1461034f5780635f77274e146103725780636352211e1461038557600080fd5b80633ad59dbc116101f95780633ad59dbc146102ac5780633adec5a7146102f357806344ee01721461031657806353c7f8e01461032957600080fd5b806310b053171461022b57806313af4035146102405780631c063a6c146102535780632750745814610289575b600080fd5b61023e6102393660046125f2565b610782565b005b61023e61024e36600461263d565b61083d565b6102766102613660046125f2565b60009081526002602052604090206004015490565b6040519081526020015b60405180910390f35b61029c6102973660046125f2565b610946565b6040519015158152602001610280565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610280565b6102766103013660046125f2565b60009081526002602052604090206006015490565b61023e610324366004612679565b6109b3565b610276610337366004612696565b610aed565b61027661034a3660046125f2565b610cd7565b61029c61035d36600461263d565b60066020526000908152604090205460ff1681565b61023e610380366004612721565b610de5565b6102ce6103933660046125f2565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6102ce6103c93660046125f2565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023e6103ff36600461273e565b5050565b61023e61041136600461263d565b610eaa565b61029c6104243660046125f2565b611007565b6000546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6102766104573660046125f2565b60009081526002602052604090206007015490565b7f00000000000000000000000000000000000000000000000000000000000000006102ce565b6104a56104a03660046125f2565b61104d565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c001610280565b61023e6105093660046125f2565b611160565b60055461029c9060ff1681565b6105ad6105293660046125f2565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460068601546007870154600888015460099098015473ffffffffffffffffffffffffffffffffffffffff97881699881698968816978616967401000000000000000000000000000000000000000090960460ff1695908b565b6040805173ffffffffffffffffffffffffffffffffffffffff9c8d1681529a8c1660208c0152988b16988a0198909852989095166060880152921515608087015260a086019190915260c085015260e084015261010083015261012082019290925261014081019190915261016001610280565b61023e61062f366004612771565b61123e565b61023e6106423660046127aa565b611328565b61023e610655366004612828565b50565b6102766106663660046128b9565b6113d8565b6001546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6106d56106993660046125f2565b60036020526000908152604090205465ffffffffffff80821691660100000000000081048216916c010000000000000000000000009091041683565b6040805165ffffffffffff94851681529284166020840152921691810191909152606001610280565b61027661070c3660046127aa565b611527565b60055461072890610100900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610280565b60055461072890670100000000000000900465ffffffffffff1681565b61027661076a3660046128f2565b611738565b61023e61077d366004612679565b6119fe565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146107df576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260046020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61086b336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b6108d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610988575060008281526003602052604090205465ffffffffffff428116660100000000000090920416115b80156109ad575060008281526003602052604090205465ffffffffffff428116911611155b92915050565b6109e1336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b610a47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b60055465ffffffffffff61010090910481169082161080610a725750620151808165ffffffffffff16105b15610aa9576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216670100000000000000027fffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffff909216919091179055565b600080610afc83850185612930565b9050620151808160e00151610b119190612a2b565b610b1e9062015180612a77565b65ffffffffffff90811660e08301526101008201516000911615610b4757816101000151610b49565b425b9050600082610120015182610b5e9190612aa5565b90508260e0015165ffffffffffff16600014158015610b9057508065ffffffffffff168360e0015165ffffffffffff16105b15610bc7576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610bd284611c48565b90508360e0015165ffffffffffff16600014610ccd57835160e08501516040517fc6e38a4b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263c6e38a4b92610c889260040173ffffffffffffffffffffffffffffffffffffffff92909216825265ffffffffffff16602082015260400190565b6020604051808303816000875af1158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb9190612acf565b505b9695505050505050565b60008181526002602081815260408084206006810154825161016081018452825473ffffffffffffffffffffffffffffffffffffffff9081168252600184015481169582019590955294820154841692850192909252600381015492831660608501527401000000000000000000000000000000000000000090920460ff16151560808401819052600483015460a0850152600583015460c085015260e084018290526007830154610100850152600883015461012085015260099092015461014084015291908390610dae578160a00151610dc3565b61010082015160a0830151610dc39185612526565b9050808260c0015111610dda578160c00151610ddc565b805b95945050505050565b610e13336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b610e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331480610f8d57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8d9190612aec565b610f9657600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000818152600360205260408120546c01000000000000000000000000900465ffffffffffff16635dba24008111156110435742811115611046565b80155b9392505050565b6000818152600260208181526040808420815161016081018352815473ffffffffffffffffffffffffffffffffffffffff90811680835260018401548216838701819052968401548216838601819052600380860154938416606086018190527401000000000000000000000000000000000000000090940460ff1615156080860152600486015460a0860152600586015460c0860152600686015460e08601526007860154610100860152600886015461012086015260099095015461014085015289895293909552928620548695869586958695869594929391926c01000000000000000000000000900465ffffffffffff1661114b8d610cd7565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146111bd576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff1666010000000000004265ffffffffffff160217905560029091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b61126c336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b6112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314611385576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526004602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182916114a6917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa15801561146f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114939190612b09565b869065ffffffffffff16620186a0612526565b6000858152600260205260408120600781015460069091015492935090916114da91906114d3858a612b26565b9190612526565b90506114e585610cd7565b81111561151e576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b91506110469050565b6000828152600260208181526040808420815161016081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481168286015282860154811693820193909352600382015492831660608201527401000000000000000000000000000000000000000090920460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e08301819052600782015461010084015260088201546101208401526009909101546101408301528685529290915290600082608001516116155761010083015160a0840151611610918490612526565b61161b565b8260a001515b9050600061163d838561010001518660c001516125269092919063ffffffff16565b9050600081831061164e5781611650565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925060009161171f917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa1580156116e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170c9190612b09565b839065ffffffffffff16620186a0612526565b905061172b8183612b3d565b9998505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146117a9576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260205260409020600381015473ffffffffffffffffffffffffffffffffffffffff16158015906118075750805473ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205460ff16155b1561183e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61184785610946565b61187d576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60078101546006820154611892918691612526565b9150828210156118ce576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806005015482111561190c576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600381015474010000000000000000000000000000000000000000900460ff1661193c5780600401548211611944565b806004015484115b1561197b576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600381015474010000000000000000000000000000000000000000900460ff166119a557816119a7565b835b8160040160008282546119ba9190612b26565b92505081905550838160090160008282546119d59190612b3d565b92505081905550818160080160008282546119f09190612b3d565b909155509195945050505050565b611a2c336000357fffffffff0000000000000000000000000000000000000000000000000000000016611b37565b611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016108cd565b60055465ffffffffffff67010000000000000090910481169082161180611ac25750610e108165ffffffffffff16105b15611af9576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590611c1b57506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1b9190612aec565b80611c40575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b60055460009060ff16611c87576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfc9190612b55565b90506000836020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d739190612b55565b905060068260ff161080611d8a575060128260ff16115b15611dc1576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff161080611dd6575060128160ff16115b15611e0d576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe884610140015160000b1280611e4b5750601884610140015160000b135b15611e82576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526006602052604090205460ff16158015611ebb5750604084015173ffffffffffffffffffffffffffffffffffffffff1615155b15611ef2576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084610100015165ffffffffffff16118015611f1b57504284610100015165ffffffffffff16105b15611f52576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600082610140015160240160ff16600a0a90508260a00151600003611fa5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055461012084015165ffffffffffff670100000000000000909204821691161080611fe7575060055460c084015165ffffffffffff61010090920482169116105b8061200a575082610120015165ffffffffffff168360c0015165ffffffffffff16115b15612041576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006120898460c0015165ffffffffffff1685610120015165ffffffffffff1686606001516120745786608001516114d3565b60a087015160808801516114d3918790612526565b845160208601516040517fb435914300000000000000000000000000000000000000000000000000000000815292935060009273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263b4359143926121289260040173ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6020604051808303816000875af1158015612147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216b9190612b78565b90506040518061016001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001866000015173ffffffffffffffffffffffffffffffffffffffff168152602001866020015173ffffffffffffffffffffffffffffffffffffffff168152602001866040015173ffffffffffffffffffffffffffffffffffffffff168152602001866060015115158152602001866080015181526020018381526020018660a0015181526020018481526020016000815260200160008152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090155905050600085610100015165ffffffffffff166000146123e0578561010001516123e2565b425b905060405180606001604052808265ffffffffffff1681526020018761012001518361240e9190612aa5565b65ffffffffffff908116825260e089018051821660209384015260008681526003845260409081902085518154878701519784015186166c01000000000000000000000000027fffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffff9887166601000000000000027fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090921692871692909217179690961695909517909455828a01518a51915160a08c015186519190941681529384019290925273ffffffffffffffffffffffffffffffffffffffff9182169391169185917f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d910160405180910390a450949350505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361257d576000841161257257600080fd5b508290049050611046565b80841161258957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006020828403121561260457600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461065557600080fd5b80356126388161260b565b919050565b60006020828403121561264f57600080fd5b81356110468161260b565b65ffffffffffff8116811461065557600080fd5b80356126388161265a565b60006020828403121561268b57600080fd5b81356110468161265a565b600080602083850312156126a957600080fd5b823567ffffffffffffffff808211156126c157600080fd5b818501915085601f8301126126d557600080fd5b8135818111156126e457600080fd5b8660208285010111156126f657600080fd5b60209290920196919550909350505050565b801515811461065557600080fd5b803561263881612708565b60006020828403121561273357600080fd5b813561104681612708565b6000806080838503121561275157600080fd5b823591508360808401111561276557600080fd5b50926020919091019150565b6000806040838503121561278457600080fd5b823561278f8161260b565b9150602083013561279f81612708565b809150509250929050565b600080604083850312156127bd57600080fd5b82359150602083013561279f8161260b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715612822576128226127cf565b60405290565b600060c0828403121561283a57600080fd5b82601f83011261284957600080fd5b60405160c0810181811067ffffffffffffffff8211171561286c5761286c6127cf565b6040528060c084018581111561288157600080fd5b845b818110156128ae57803563ffffffff811681146128a05760008081fd5b835260209283019201612883565b509195945050505050565b6000806000606084860312156128ce57600080fd5b833592506020840135915060408401356128e78161260b565b809150509250925092565b60008060006060848603121561290757600080fd5b505081359360208301359350604090920135919050565b8035600081900b811461263857600080fd5b6000610160828403121561294357600080fd5b61294b6127fe565b6129548361262d565b81526129626020840161262d565b60208201526129736040840161262d565b604082015261298460608401612716565b60608201526080830135608082015260a083013560a08201526129a960c0840161266e565b60c08201526129ba60e0840161266e565b60e08201526101006129cd81850161266e565b908201526101206129df84820161266e565b908201526101406129f184820161291e565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600065ffffffffffff80841680612a6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600065ffffffffffff80831681851681830481118215151615612a9c57612a9c6129fc565b02949350505050565b600065ffffffffffff808316818516808303821115612ac657612ac66129fc565b01949350505050565b600060208284031215612ae157600080fd5b81516110468161260b565b600060208284031215612afe57600080fd5b815161104681612708565b600060208284031215612b1b57600080fd5b81516110468161265a565b600082821015612b3857612b386129fc565b500390565b60008219821115612b5057612b506129fc565b500190565b600060208284031215612b6757600080fd5b815160ff8116811461104657600080fd5b600060208284031215612b8a57600080fd5b505191905056fea2646970667358221220dbd43284e3a22d72216cad22531404d99e6311480c642d7c589399661c55e9cc64736f6c634300080f0033",
    "sourceMap": "1664:1621:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8383:183:41;;;;;;:::i;:::-;;:::i;:::-;;1936:147:22;;;;;;:::i;:::-;;:::i;16900:124:41:-;;;;;;:::i;:::-;16970:7;16996:12;;;:7;:12;;;;;:21;;;;16900:124;;;;895:25:124;;;883:2;868:18;16900:124:41;;;;;;;;16174:239;;;;;;:::i;:::-;;:::i;:::-;;;1096:14:124;;1089:22;1071:41;;1059:2;1044:18;16174:239:41;931:187:124;16749:109:41;16840:11;16749:109;;;1324:42:124;1312:55;;;1294:74;;1282:2;1267:18;16749:109:41;1123:251:124;13081:115:41;;;;;;:::i;:::-;13145:7;13171:12;;;:7;:12;;;;;:18;;;;13081:115;8601:365;;;;;;:::i;:::-;;:::i;1995:1288:30:-;;;;;;:::i;:::-;;:::i;15339:547:41:-;;;;;;:::i;:::-;;:::i;3536:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9708:161;;;;;;:::i;:::-;;:::i;16455:113::-;;;;;;:::i;:::-;16517:7;16543:12;;;:7;:12;;;;;:18;;;;16455:113;2947:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9464:86;;;;;;:::i;:::-;;;;1496:434:22;;;;;;:::i;:::-;;:::i;15928:204:41:-;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;;;;;13238:117:41;;;;;;:::i;:::-;13304:7;13330:12;;;:7;:12;;;;;:18;;;;13238:117;16610:97;16693:7;16610:97;;12484:555;;;;;;:::i;:::-;;:::i;:::-;;;;4398:42:124;4467:15;;;4449:34;;4519:15;;;4514:2;4499:18;;4492:43;4571:15;;;4551:18;;;4544:43;;;;4623:15;;4618:2;4603:18;;4596:43;4688:14;4676:27;;;4670:3;4655:19;;4648:56;4735:3;4720:19;;4713:35;;;;4375:3;4360:19;12484:555:41;4073:681:124;10148:267:41;;;;;;:::i;:::-;;:::i;3167:27::-;;;;;;;;;2666:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5221:42:124;5290:15;;;5272:34;;5342:15;;;5337:2;5322:18;;5315:43;5394:15;;;5374:18;;;5367:43;;;;5446:15;;;;5441:2;5426:18;;5419:43;5506:14;;5499:22;5493:3;5478:19;;5471:51;5553:3;5538:19;;5531:35;;;;5597:3;5582:19;;5575:35;5641:3;5626:19;;5619:35;5685:3;5670:19;;5663:35;5729:3;5714:19;;5707:35;;;;5773:3;5758:19;;5751:36;;;;5198:3;5183:19;2666:45:41;4759:1034:124;9911:195:41;;;;;;:::i;:::-;;:::i;8142:199::-;;;;;;:::i;:::-;;:::i;9597:69::-;;;;;;:::i;:::-;;;13397:657;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;;;;;2788:42:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8730:14:124;8771:15;;;8753:34;;8823:15;;;8818:2;8803:18;;8796:43;8875:15;;8855:18;;;8848:43;;;;8708:2;8693:18;2788:42:41;8524:373:124;14096:1208:41;;;;;;:::i;:::-;;:::i;3318:32::-;;;;;;;;;;;;;;;9076:14:124;9064:27;;;9046:46;;9034:2;9019:18;3318:32:41;8902:196:124;3408:31:41;;;;;;;;;;;;10507:1830;;;;;;:::i;:::-;;:::i;9001:416::-;;;;;;:::i;:::-;;:::i;8383:183::-;8465:14;;;;:9;:14;;;;;;;;8451:10;:28;8447:67;;8488:26;;;;;;;;;;;;;;8447:67;8545:14;;;;:9;:14;;;;;;;;;8524:7;:12;;;;;;:35;;;;8545:14;;;;8524:35;;;;;;8383:183::o;1936:147:22:-;875:33;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9626:2:124;867:58:22;;;9608:21:124;9665:2;9645:18;;;9638:30;9704:14;9684:18;;;9677:42;9736:18;;867:58:22;;;;;;;;;2010:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;16174:239:41:-;16233:4;16257:12;;;:7;:12;;;;;:21;;;:26;;;;:89;;-1:-1:-1;16299:10:41;;;;:5;:10;;;;;:21;:47;16330:15;16299:47;;:21;;;;;:47;16257:89;:148;;;;-1:-1:-1;16362:10:41;;;;:5;:10;;;;;:16;:43;16389:15;16362:43;;:16;;:43;;16257:148;16249:157;16174:239;-1:-1:-1;;16174:239:41:o;8601:365::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9626:2:124;867:58:22;;;9608:21:124;9665:2;9645:18;;;9638:30;9704:14;9684:18;;;9677:42;9736:18;;867:58:22;9424:336:124;867:58:22;8844:18:41::1;::::0;::::1;;::::0;;::::1;::::0;::::1;8832:30:::0;;::::1;;::::0;:52:::1;;;8878:6;8866:9;:18;;;8832:52;8828:91;;;8893:26;;;;;;;;;;;;;;8828:91;8930:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;8601:365::o;1995:1288:30:-;2068:7;;2190:35;;;;2201:7;2190:35;:::i;:::-;2161:64;;2426:6;2409;:14;;;:23;;;;:::i;:::-;2408:34;;2436:6;2408:34;:::i;:::-;2391:51;;;;:14;;;:51;2630:12;;;;2615;;2630:17;;:58;;2676:6;:12;;;2630:58;;;2657:15;2630:58;2615:73;;2698:17;2726:6;:15;;;2718:5;:23;;;;:::i;:::-;2698:43;;2835:6;:14;;;:19;;2853:1;2835:19;;:50;;;;;2875:10;2858:27;;:6;:14;;;:27;;;2835:50;2831:89;;;2894:26;;;;;;;;;;;;;;2831:89;2977:16;2996:21;3010:6;2996:13;:21::i;:::-;2977:40;;3106:6;:14;;;:19;;3124:1;3106:19;3102:120;;3187:18;;3207:14;;;;3139:83;;;;;:47;3170:7;3139:47;;;;:83;;;;12250:42:124;12238:55;;;;12220:74;;12342:14;12330:27;12325:2;12310:18;;12303:55;12208:2;12193:18;;12033:331;3139:83:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3102:120;3268:8;1995:1288;-1:-1:-1;;;;;;1995:1288:30:o;15339:547:41:-;15401:7;13171:12;;;:7;:12;;;;;;;;:18;;;;15492:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13171:18;15492:39;15401:7;;15642:110;;15737:6;:15;;;15642:110;;;15702:12;;;;15679:15;;;;:43;;15716:5;15679:22;:43::i;:::-;15623:129;;15841:8;15822:6;:16;;;:27;:57;;15863:6;:16;;;15822:57;;;15852:8;15822:57;15815:64;15339:547;-1:-1:-1;;;;;15339:547:41:o;9708:161::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9626:2:124;867:58:22;;;9608:21:124;9665:2;9645:18;;;9638:30;9704:14;9684:18;;;9677:42;9736:18;;867:58:22;9424:336:124;867:58:22;9837:15:41::1;:25:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;9708:161::o;1496:434:22:-;1767:5;;;;1753:10;:19;;:76;;-1:-1:-1;1776:9:22;;:53;;;;;1794:10;1776:53;;;12910:34:124;1814:4:22;12960:18:124;;;12953:43;1776:9:22;1821:7;;;13012:18:124;;;13005:107;1776:9:22;;;;;:17;;12822:18:124;;1776:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;;;;;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:22;1496:434;:::o;15928:204:41:-;15985:4;16019:10;;;:5;:10;;;;;:18;;;;;;3725:13;16055:25;;;16054:71;;16110:15;16099:7;:26;;16054:71;;;16084:12;;16054:71;16047:78;15928:204;-1:-1:-1;;;15928:204:41:o;12484:555::-;12591:13;12811:12;;;:7;:12;;;;;;;;12784:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12976:10;;;;;;;;;;:18;12591:13;;;;;;;;;;12784:39;;;;;12976:18;;;;;13008:14;12811:12;13008:9;:14::i;:::-;12833:199;;;;-1:-1:-1;12833:199:41;;-1:-1:-1;12833:199:41;-1:-1:-1;12833:199:41;-1:-1:-1;12833:199:41;;-1:-1:-1;12484:555:41;-1:-1:-1;;;12484:555:41:o;10148:267::-;10228:12;;;;:7;:12;;;;;:18;;;10214:10;:32;10210:73;;10255:28;;;;;;;;;;;;;;10210:73;10293:10;;;;:5;:10;;;;;;;;:47;;;;;10324:15;10293:47;;;;;;10350:7;:12;;;;;;:21;;:25;;;10391:17;10293:10;;10391:17;;;10148:267;:::o;9911:195::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9626:2:124;867:58:22;;;9608:21:124;9665:2;9645:18;;;9638:30;9704:14;9684:18;;;9677:42;9736:18;;867:58:22;9424:336:124;867:58:22;10061:28:41::1;::::0;;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:38;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;9911:195::o;8142:199::-;8243:12;;;;:7;:12;;;;;:18;;;8229:10;:32;8225:73;;8270:28;;;;;;;;;;;;;;8225:73;8308:14;;;;:9;:14;;;;;;:26;;;;;;;;;;;;;;8142:199::o;13397:657::-;13636:25;;;;;:14;1312:55:124;;;13636:25:41;;;1294:74:124;-1:-1:-1;;;;13621:62:41;;13636:7;:14;;;;;;1267:18:124;;13636:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13621:7;;:62;;3791:3;13621:14;:62::i;:::-;13693:14;13733:12;;;:7;:12;;;;;:18;;;;13171;;;;;13607:76;;-1:-1:-1;13693:14:41;;13710:60;;13733:18;13711:13;13721:3;13711:7;:13;:::i;:::-;13710:22;:60;:22;:60::i;:::-;13693:77;;13926:14;13936:3;13926:9;:14::i;:::-;13917:6;:23;13913:135;;;13963:30;;;;;;;;;;;;;;13913:135;14031:6;-1:-1:-1;14024:13:41;;-1:-1:-1;14024:13:41;14096:1208;14178:7;14398:12;;;:7;:12;;;;;;;;14371:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13171:12;;;;;;;14371:39;14462:21;14486:6;:22;;;:110;;14583:12;;;;14553:15;;;;:43;;14576:5;;14553:22;:43::i;:::-;14486:110;;;14523:6;:15;;;14486:110;14462:134;;14606:16;14625:44;14649:5;14656:6;:12;;;14625:6;:16;;;:23;;:44;;;;;:::i;:::-;14606:63;;14679:22;14720:8;14704:13;:24;:51;;14747:8;14704:51;;;14731:13;14704:51;15182:25;;;;;:14;1312:55:124;;;15182:25:41;;;1294:74:124;14679:76:41;;-1:-1:-1;;;15147:103:41;;15182:7;:14;;;;;;1267:18:124;;15182:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15147:14;;:103;;3791:3;15147:21;:103::i;:::-;15124:126;-1:-1:-1;15268:29:41;15124:126;15268:14;:29;:::i;:::-;15261:36;14096:1208;-1:-1:-1;;;;;;;;;14096:1208:41:o;10507:1830::-;10639:14;10669:10;:30;10691:7;10669:30;;10665:69;;10708:26;;;;;;;;;;;;;;10665:69;10745:25;10773:12;;;:7;:12;;;;;10884:19;;;;:33;:19;:33;;;;:70;;-1:-1:-1;10941:12:41;;;;10922:32;;;;:18;:32;;;;;;;;10921:33;10884:70;10880:121;;;10975:26;;;;;;;;;;;;;;10880:121;11067:11;11074:3;11067:6;:11::i;:::-;11062:53;;11087:28;;;;;;;;;;;;;;11062:53;11202:12;;;;11216;;;;11187:42;;:7;;:14;:42::i;:::-;11178:51;;11314:13;11305:6;:22;11301:69;;;11336:34;;;;;;;;;;;;;;11301:69;11454:6;:16;;;11445:6;:25;11441:68;;;11479:30;;;;;;;;;;;;;;11441:68;11869:22;;;;;;;;;:77;;11931:6;:15;;;11922:6;:24;11869:77;;;11904:6;:15;;;11894:7;:25;11869:77;11865:132;;;11967:30;;;;;;;;;;;;;;11865:132;12091:22;;;;;;;;;:41;;12126:6;12091:41;;;12116:7;12091:41;12072:6;:15;;;:60;;;;;;;:::i;:::-;;;;;;;;12292:7;12272:6;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;12324:6;12309;:11;;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;10507:1830:41;;;-1:-1:-1;;;;;10507:1830:41:o;9001:416::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9626:2:124;867:58:22;;;9608:21:124;9665:2;9645:18;;;9638:30;9704:14;9684:18;;;9677:42;9736:18;;867:58:22;9424:336:124;867:58:22;9268:17:41::1;::::0;::::1;::::0;;;::::1;::::0;::::1;9249:36:::0;;::::1;;::::0;:66:::1;;;9308:7;9289:16;:26;;;9249:66;9245:117;;;9336:26;;;;;;;;;;;;;;9245:117;9373:18;:37:::0;;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;9001:416::o;950:540:22:-;1070:9;;1037:4;;1070:9;;1388:27;;;;;:77;;-1:-1:-1;1419:46:22;;;;;:12;12928:15:124;;;1419:46:22;;;12910:34:124;1446:4:22;12960:18:124;;;12953:43;13044:66;13032:79;;13012:18;;;13005:107;1419:12:22;;;;;12822:18:124;;1419:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:22;;;1470:13;;;1478:5;;1470:13;1387:96;1380:103;950:540;-1:-1:-1;;;;950:540:22:o;4672:3428:41:-;4859:15;;4742:7;;4859:15;;4854:62;;4883:33;;;;;;;;;;;;;;4854:62;4974:25;5002:7;:19;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4974:58;;5046:24;5073:7;:18;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5046:56;;5143:1;5121:19;:23;;;:51;;;;5170:2;5148:19;:24;;;5121:51;5117:106;;;5197:26;;;;;;;;;;;;;;5117:106;5262:1;5241:18;:22;;;:49;;;;5288:2;5267:18;:23;;;5241:49;5237:104;;;5315:26;;;;;;;;;;;;;;5237:104;5385:3;5359:7;:23;;;:29;;;:61;;;;5418:2;5392:7;:23;;;:28;;;5359:61;5355:116;;;5445:26;;;;;;;;;;;;;;5355:116;5579:10;5560:30;;;;:18;:30;;;;;;;;5559:31;:69;;;;-1:-1:-1;5594:20:41;;;;:34;;;;5559:69;5555:124;;;5653:26;;;;;;;;;;;;;;5555:124;5770:1;5754:7;:13;;;:17;;;:52;;;;;5791:15;5775:7;:13;;;:31;;;5754:52;5750:107;;;5831:26;;;;;;;;;;;;;;5750:107;4761:1107;;6146:13;6216:7;:23;;;6211:2;:28;6201:39;;:2;:39;6193:47;;6305:7;:22;;;6331:1;6305:27;6301:66;;6341:26;;;;;;;;;;;;;;6301:66;6443:17;;6424:16;;;;6443:17;;;;;;;6424:36;;;;:96;;-1:-1:-1;6502:18:41;;6476:23;;;;6502:18;;;;;;;6476:44;;;6424:96;:154;;;;6562:7;:16;;;6536:42;;:7;:23;;;:42;;;6424:154;6407:215;;;6596:26;;;;;;;;;;;;;;6407:215;6696:18;6717:223;6888:7;:23;;;6880:32;;6922:7;:16;;;6914:25;;6731:7;:23;;;:131;;6846:7;:16;;;6731:131;;;6804:22;;;;6773:16;;;;:54;;6797:5;;6773:23;:54::i;6717:223::-;7059:19;;7080:18;;;;7032:67;;;;;6696:244;;-1:-1:-1;7013:16:41;;7032:26;:11;:26;;;;:67;;;;14382:42:124;14451:15;;;14433:34;;14503:15;;14498:2;14483:18;;14476:43;14360:2;14345:18;;14168:357;7032:67:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7013:86;;7130:436;;;;;;;;7162:10;7130:436;;;;;;7199:7;:19;;;7130:436;;;;;;7244:7;:18;;;7130:436;;;;;;7290:7;:20;;;7130:436;;;;;;7341:7;:23;;;7130:436;;;;;;7388:7;:16;;;7130:436;;;;7429:10;7130:436;;;;7460:7;:22;;;7130:436;;;;7503:5;7130:436;;;;7554:1;7130:436;;;;7533:1;7130:436;;;7110:7;:17;7118:8;7110:17;;;;;;;;;;;:456;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7619:12;7634:7;:13;;;:18;;7651:1;7634:18;:60;;7681:7;:13;;;7634:60;;;7662:15;7634:60;7619:75;;7723:135;;;;;;;;7754:5;7723:135;;;;;;7793:7;:16;;;7785:5;:24;;;;:::i;:::-;7723:135;;;;;;7832:15;;;;;7723:135;;;;;;;-1:-1:-1;7705:15:41;;;:5;:15;;;;;;;:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7973:18;;;;7931:19;;8006:15;;8035:22;;;;7874:193;;14909:27:124;;;;14891:46;;14953:18;;;14946:34;;;;7874:193:41;;;;;;;;7705:15;;7874:193;;14864:18:124;7874:193:41;;;;;;;-1:-1:-1;8085:8:41;4672:3428;-1:-1:-1;;;;4672:3428:41:o;742:4147:62:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:62;;;;-1:-1:-1;1787:13:62;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;3784:1;2787;2753:31;;:35;;2752:51;;2909:22;;;;3765:1;:15;;3764:21;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;;;2737:12;3321;;;3317:23;;;3313:31;;;2490:20;;;2479:32;;;3380:12;;;;2537:21;;3053:16;;;;3371:21;;;;4834:11;;;-1:-1:-1;;;;742:4147:62:o;14:180:124:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:124;;14:180;-1:-1:-1;14:180:124:o;199:154::-;285:42;278:5;274:54;267:5;264:65;254:93;;343:1;340;333:12;358:134;426:20;;455:31;426:20;455:31;:::i;:::-;358:134;;;:::o;497:247::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;664:9;651:23;683:31;708:5;683:31;:::i;1379:125::-;1464:14;1457:5;1453:26;1446:5;1443:37;1433:65;;1494:1;1491;1484:12;1509:132;1576:20;;1605:30;1576:20;1605:30;:::i;1646:245::-;1704:6;1757:2;1745:9;1736:7;1732:23;1728:32;1725:52;;;1773:1;1770;1763:12;1725:52;1812:9;1799:23;1831:30;1855:5;1831:30;:::i;1896:591::-;1966:6;1974;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2083:9;2070:23;2112:18;2153:2;2145:6;2142:14;2139:34;;;2169:1;2166;2159:12;2139:34;2207:6;2196:9;2192:22;2182:32;;2252:7;2245:4;2241:2;2237:13;2233:27;2223:55;;2274:1;2271;2264:12;2223:55;2314:2;2301:16;2340:2;2332:6;2329:14;2326:34;;;2356:1;2353;2346:12;2326:34;2401:7;2396:2;2387:6;2383:2;2379:15;2375:24;2372:37;2369:57;;;2422:1;2419;2412:12;2369:57;2453:2;2445:11;;;;;2475:6;;-1:-1:-1;1896:591:124;;-1:-1:-1;;;;1896:591:124:o;2492:118::-;2578:5;2571:13;2564:21;2557:5;2554:32;2544:60;;2600:1;2597;2590:12;2615:128;2680:20;;2709:28;2680:20;2709:28;:::i;2748:241::-;2804:6;2857:2;2845:9;2836:7;2832:23;2828:32;2825:52;;;2873:1;2870;2863:12;2825:52;2912:9;2899:23;2931:28;2953:5;2931:28;:::i;3225:320::-;3317:6;3325;3378:3;3366:9;3357:7;3353:23;3349:33;3346:53;;;3395:1;3392;3385:12;3346:53;3431:9;3418:23;3408:33;;3477:7;3471:3;3460:9;3456:19;3453:32;3450:52;;;3498:1;3495;3488:12;3450:52;-1:-1:-1;3225:320:124;3536:2;3521:18;;;;;-1:-1:-1;3225:320:124:o;5798:382::-;5863:6;5871;5924:2;5912:9;5903:7;5899:23;5895:32;5892:52;;;5940:1;5937;5930:12;5892:52;5979:9;5966:23;5998:31;6023:5;5998:31;:::i;:::-;6048:5;-1:-1:-1;6105:2:124;6090:18;;6077:32;6118:30;6077:32;6118:30;:::i;:::-;6167:7;6157:17;;;5798:382;;;;;:::o;6185:315::-;6253:6;6261;6314:2;6302:9;6293:7;6289:23;6285:32;6282:52;;;6330:1;6327;6320:12;6282:52;6366:9;6353:23;6343:33;;6426:2;6415:9;6411:18;6398:32;6439:31;6464:5;6439:31;:::i;6505:184::-;6557:77;6554:1;6547:88;6654:4;6651:1;6644:15;6678:4;6675:1;6668:15;6694:247;6761:2;6755:9;6803:3;6791:16;;6837:18;6822:34;;6858:22;;;6819:62;6816:88;;;6884:18;;:::i;:::-;6920:2;6913:22;6694:247;:::o;6946:935::-;7027:6;7080:3;7068:9;7059:7;7055:23;7051:33;7048:53;;;7097:1;7094;7087:12;7048:53;7146:7;7139:4;7128:9;7124:20;7120:34;7110:62;;7168:1;7165;7158:12;7110:62;7201:2;7195:9;7243:3;7235:6;7231:16;7313:6;7301:10;7298:22;7277:18;7265:10;7262:34;7259:62;7256:88;;;7324:18;;:::i;:::-;7360:2;7353:22;7395:6;7439:3;7424:19;;7455;;;7452:39;;;7487:1;7484;7477:12;7452:39;7511:9;7529:321;7545:6;7540:3;7537:15;7529:321;;;7627:3;7614:17;7675:10;7668:5;7664:22;7657:5;7654:33;7644:131;;7729:1;7758:2;7754;7747:14;7644:131;7788:18;;7835:4;7826:14;;;;7562;7529:321;;;-1:-1:-1;7869:6:124;;6946:935;-1:-1:-1;;;;;6946:935:124:o;7886:383::-;7963:6;7971;7979;8032:2;8020:9;8011:7;8007:23;8003:32;8000:52;;;8048:1;8045;8038:12;8000:52;8084:9;8071:23;8061:33;;8141:2;8130:9;8126:18;8113:32;8103:42;;8195:2;8184:9;8180:18;8167:32;8208:31;8233:5;8208:31;:::i;:::-;8258:5;8248:15;;;7886:383;;;;;:::o;9103:316::-;9180:6;9188;9196;9249:2;9237:9;9228:7;9224:23;9220:32;9217:52;;;9265:1;9262;9255:12;9217:52;-1:-1:-1;;9288:23:124;;;9358:2;9343:18;;9330:32;;-1:-1:-1;9409:2:124;9394:18;;;9381:32;;9103:316;-1:-1:-1;9103:316:124:o;9765:159::-;9830:20;;9801:5;9879:20;;;9869:31;;9859:59;;9914:1;9911;9904:12;9929:1048;10019:6;10072:3;10060:9;10051:7;10047:23;10043:33;10040:53;;;10089:1;10086;10079:12;10040:53;10115:17;;:::i;:::-;10155:29;10174:9;10155:29;:::i;:::-;10148:5;10141:44;10217:38;10251:2;10240:9;10236:18;10217:38;:::i;:::-;10212:2;10205:5;10201:14;10194:62;10288:38;10322:2;10311:9;10307:18;10288:38;:::i;:::-;10283:2;10276:5;10272:14;10265:62;10359:35;10390:2;10379:9;10375:18;10359:35;:::i;:::-;10354:2;10347:5;10343:14;10336:59;10456:3;10445:9;10441:19;10428:33;10422:3;10415:5;10411:15;10404:58;10523:3;10512:9;10508:19;10495:33;10489:3;10482:5;10478:15;10471:58;10562:38;10595:3;10584:9;10580:19;10562:38;:::i;:::-;10556:3;10549:5;10545:15;10538:63;10634:38;10667:3;10656:9;10652:19;10634:38;:::i;:::-;10628:3;10621:5;10617:15;10610:63;10692:3;10727:37;10760:2;10749:9;10745:18;10727:37;:::i;:::-;10711:14;;;10704:61;10784:3;10819:37;10837:18;;;10819:37;:::i;:::-;10803:14;;;10796:61;10876:3;10911:35;10927:18;;;10911:35;:::i;:::-;10895:14;;;10888:59;10899:5;9929:1048;-1:-1:-1;;;9929:1048:124:o;10982:184::-;11034:77;11031:1;11024:88;11131:4;11128:1;11121:15;11155:4;11152:1;11145:15;11171:349;11210:1;11236:14;11277:2;11274:1;11270:10;11299:3;11289:191;;11336:77;11333:1;11326:88;11437:4;11434:1;11427:15;11465:4;11462:1;11455:15;11289:191;11498:10;;11494:20;;;;;11171:349;-1:-1:-1;;11171:349:124:o;11525:266::-;11564:7;11596:14;11637:2;11634:1;11630:10;11667:2;11664:1;11660:10;11723:3;11719:2;11715:12;11710:3;11707:21;11700:3;11693:11;11686:19;11682:47;11679:73;;;11732:18;;:::i;:::-;11772:13;;11525:266;-1:-1:-1;;;;11525:266:124:o;11796:232::-;11835:3;11863:14;11904:2;11901:1;11897:10;11934:2;11931:1;11927:10;11965:3;11961:2;11957:12;11952:3;11949:21;11946:47;;;11973:18;;:::i;:::-;12009:13;;11796:232;-1:-1:-1;;;;11796:232:124:o;12369:275::-;12463:6;12516:2;12504:9;12495:7;12491:23;12487:32;12484:52;;;12532:1;12529;12522:12;12484:52;12564:9;12558:16;12583:31;12608:5;12583:31;:::i;13123:245::-;13190:6;13243:2;13231:9;13222:7;13218:23;13214:32;13211:52;;;13259:1;13256;13249:12;13211:52;13291:9;13285:16;13310:28;13332:5;13310:28;:::i;13373:249::-;13442:6;13495:2;13483:9;13474:7;13470:23;13466:32;13463:52;;;13511:1;13508;13501:12;13463:52;13543:9;13537:16;13562:30;13586:5;13562:30;:::i;13627:125::-;13667:4;13695:1;13692;13689:8;13686:34;;;13700:18;;:::i;:::-;-1:-1:-1;13737:9:124;;13627:125::o;13757:128::-;13797:3;13828:1;13824:6;13821:1;13818:13;13815:39;;;13834:18;;:::i;:::-;-1:-1:-1;13870:9:124;;13757:128::o;13890:273::-;13958:6;14011:2;13999:9;13990:7;13986:23;13982:32;13979:52;;;14027:1;14024;14017:12;13979:52;14059:9;14053:16;14109:4;14102:5;14098:16;14091:5;14088:27;14078:55;;14129:1;14126;14119:12;14530:184;14600:6;14653:2;14641:9;14632:7;14628:23;14624:32;14621:52;;;14669:1;14666;14659:12;14621:52;-1:-1:-1;14692:16:124;;14530:184;-1:-1:-1;14530:184:124:o",
    "linkReferences": {},
    "immutableReferences": {
      "35419": [
        {
          "start": 686,
          "length": 32
        },
        {
          "start": 8403,
          "length": 32
        }
      ],
      "35422": [
        {
          "start": 1134,
          "length": 32
        },
        {
          "start": 3116,
          "length": 32
        },
        {
          "start": 5158,
          "length": 32
        },
        {
          "start": 5791,
          "length": 32
        },
        {
          "start": 5970,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowNewMarkets()": "afa9d3b0",
    "authority()": "bf7e214f",
    "callbackAuthorized(address)": "5dc4d16b",
    "closeMarket(uint256)": "ae418095",
    "createMarket(bytes)": "53c7f8e0",
    "currentCapacity(uint256)": "1c063a6c",
    "getAggregator()": "3ad59dbc",
    "getMarketInfoForPurchase(uint256)": "acc5570c",
    "getTeller()": "9787d107",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "markets(uint256)": "b1283e77",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "maxPayout(uint256)": "57e333ba",
    "minDepositInterval()": "d2040687",
    "minMarketDuration()": "d2bee323",
    "newOwners(uint256)": "6729a41e",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "pullOwnership(uint256)": "10b05317",
    "purchaseBond(uint256,uint256,uint256)": "e007fa97",
    "pushOwnership(uint256,address)": "bcf6cde8",
    "setAllowNewMarkets(bool)": "5f77274e",
    "setAuthority(address)": "7a9e5e4b",
    "setCallbackAuthStatus(address,bool)": "bbbdd95a",
    "setDefaults(uint32[6])": "bd1f3a5e",
    "setIntervals(uint256,uint32[3])": "699e17d9",
    "setMinDepositInterval(uint48)": "f61338f6",
    "setMinMarketDuration(uint48)": "44ee0172",
    "setOwner(address)": "13af4035",
    "terms(uint256)": "c0aa0e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"teller_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auctioneer_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_BadExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MarketNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MaxPayoutExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NewMarketsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotEnoughCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OnlyMarketOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedPrice\",\"type\":\"uint256\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowNewMarkets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callbackAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAggregator\",\"outputs\":[{\"internalType\":\"contract IBondAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getMarketInfoForPurchase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"maxPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInterval\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketDuration\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchaseBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setAllowNewMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setCallbackAuthStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[6]\",\"name\":\"defaults_\",\"type\":\"uint32[6]\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint32[3]\",\"name\":\"intervals_\",\"type\":\"uint32[3]\"}],\"name\":\"setIntervals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"depositInterval_\",\"type\":\"uint48\"}],\"name\":\"setMinDepositInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"}],\"name\":\"setMinMarketDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty\",\"details\":\"Bond Protocol is a permissionless system to create bond markets      for any token pair. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.An Auctioneer contract allows users to create and manage bond markets.      All bond pricing logic and market data is stored in the Auctioneer.      An Auctioneer is dependent on a Teller to serve external users and      an Aggregator to register new markets. Th Fixed Price Auctioneer      lets issuers set a Fixed Price to buy a target amount of quote tokens or sell      a target amount of payout tokens over the duration of a market.      See IBondFPA.sol for price format details.The Fixed-Expiry Fixed Price Auctioneer is an implementation of the      Bond Base Fixed Price Auctioneer contract specific to creating bond markets where      all purchases on that market vest at a certain timestamp.\",\"kind\":\"dev\",\"methods\":{\"closeMarket(uint256)\":{\"params\":{\"id_\":\"ID of market to close\"}},\"createMarket(bytes)\":{\"details\":\"See specific auctioneer implementations for details on encoding the parameters.\",\"params\":{\"params_\":\"Configuration data needed for market creation, encoded in a bytes array\"},\"returns\":{\"_0\":\"id              ID of new bond market\"}},\"getMarketInfoForPurchase(uint256)\":{\"params\":{\"id_\":\"Market ID\"},\"returns\":{\"callbackAddr\":\"   Address of the callback contract to get tokens for payouts\",\"maxPayout_\":\"      Maximum amount of payout tokens you can purchase in one transaction\",\"owner\":\"          Address of the market owner (tokens transferred from this address if no callback)\",\"payoutToken\":\"    Payout Token (token paid out) for the Market\",\"quoteToken\":\"     Quote Token (token received) for the Market\",\"vesting\":\"        Timestamp or duration for vesting, implementation-dependent\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"marketPrice(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market in configured decimals\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"maxPayout(uint256)\":{\"details\":\"Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current max payout for the market in payout tokens\"}},\"ownerOf(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"pullOwnership(uint256)\":{\"details\":\"The existing owner must call pushOwnership prior to the newOwner calling this function\",\"params\":{\"id_\":\"Market ID\"}},\"purchaseBond(uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond (after fee has been deducted)\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\"},\"returns\":{\"payout\":\"         Amount of payout token to be received from the bond\"}},\"pushOwnership(uint256,address)\":{\"details\":\"Doesn't change permissions until newOwner calls pullOwnership\",\"params\":{\"id_\":\"Market ID\",\"newOwner_\":\"New address to give ownership to\"}},\"setAllowNewMarkets(bool)\":{\"details\":\"Setting to false and allowing active markets to end will sunset the auctioneer\",\"params\":{\"status_\":\"Allow market creation (true) : Disallow market creation (false)\"}},\"setCallbackAuthStatus(address,bool)\":{\"details\":\"Callback is believed to be safe, but a whitelist is implemented to prevent abuse\",\"params\":{\"creator_\":\"Address of market creator\",\"status_\":\"Allow callback (true) : Disallow callback (false)\"}},\"setDefaults(uint32[6])\":{\"details\":\"The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change\",\"params\":{\"defaults_\":\"Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown\"}},\"setIntervals(uint256,uint32[3])\":{\"details\":\"Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay\",\"params\":{\"id_\":\"Market ID\",\"intervals_\":\"Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely\"}},\"setMinDepositInterval(uint48)\":{\"params\":{\"depositInterval_\":\"Minimum deposit interval in seconds\"}},\"setMinMarketDuration(uint48)\":{\"params\":{\"duration_\":\"Minimum market duration in seconds\"}}},\"title\":\"Bond Fixed-Expiry Fixed Price Auctioneer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowNewMarkets()\":{\"notice\":\"Whether or not the auctioneer allows new markets to be created\"},\"callbackAuthorized(address)\":{\"notice\":\"Whether or not the market creator is authorized to use a callback address\"},\"closeMarket(uint256)\":{\"notice\":\"Disable existing bond marketMust be market owner\"},\"createMarket(bytes)\":{\"notice\":\"Creates a new bond market\"},\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"getAggregator()\":{\"notice\":\"Returns the Aggregator that services the Auctioneer\"},\"getMarketInfoForPurchase(uint256)\":{\"notice\":\"Provides information for the Teller to execute purchases on a Market\"},\"getTeller()\":{\"notice\":\"Returns the Teller that services the Auctioneer\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"markets(uint256)\":{\"notice\":\"Information pertaining to bond markets\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"maxPayout(uint256)\":{\"notice\":\"Calculate max payout of the market in payout tokens\"},\"minDepositInterval()\":{\"notice\":\"Minimum deposit interval for a market\"},\"minMarketDuration()\":{\"notice\":\"Minimum market duration in seconds\"},\"newOwners(uint256)\":{\"notice\":\"New address to designate as market owner. They must accept ownership to transfer permissions.\"},\"ownerOf(uint256)\":{\"notice\":\"Returns the address of the market owner\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"pullOwnership(uint256)\":{\"notice\":\"Accept ownership of a marketMust be market newOwner\"},\"purchaseBond(uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified marketMust be teller\"},\"pushOwnership(uint256,address)\":{\"notice\":\"Designate a new owner of a marketMust be market owner\"},\"setAllowNewMarkets(bool)\":{\"notice\":\"Change the status of the auctioneer to allow creation of new markets\"},\"setCallbackAuthStatus(address,bool)\":{\"notice\":\"Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian\"},\"setDefaults(uint32[6])\":{\"notice\":\"Set the auctioneer defaultsMust be policy\"},\"setIntervals(uint256,uint32[3])\":{\"notice\":\"Set market intervals to different values than the defaultsMust be market owner\"},\"setMinDepositInterval(uint48)\":{\"notice\":\"Set the minimum deposit intervalAccess controlled\"},\"setMinMarketDuration(uint48)\":{\"notice\":\"Set the minimum market durationAccess controlled\"},\"terms(uint256)\":{\"notice\":\"Information pertaining to market vesting and duration\"}},\"notice\":\"Bond Fixed-Expiry Fixed Price Auctioneer Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondFixedExpiryFPA.sol\":\"BondFixedExpiryFPA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":clones/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x8f569b077d99ec821c2750c52094b59b3505fb6ca3e6eac9009092bf86c5452d\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://d0f3966d1f97959f6512ee5bc4b73487bf5ce593880e3c1dbf97ed50d49402a0\",\"dweb:/ipfs/QmSAtFtA28Mja6f6FfET26B38XEgrLgqRezNLo3AsXyjVB\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a\",\"dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"src/BondFixedExpiryFPA.sol\":{\"keccak256\":\"0xba43fce3ab0ca75350d93617f118f718fc433c8ec79c82b5de43fa33399bca8a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7c980f4a81055c6812f3e8098799ed5e8209c044dd0708d0c2d17b90d6f1e65d\",\"dweb:/ipfs/QmRpSK4rdTPBf3DngiyYUhJkFSukv76To516HmqHq6WXSN\"]},\"src/ERC20BondToken.sol\":{\"keccak256\":\"0x14b11e975c3fb2f8aee2962e46aa1ab7c3ba145351f1c8f26e7f234fba9f4410\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://b766eb91df473cd1be260b7ab4198eaef69e6f71f01572e113efb67043d11279\",\"dweb:/ipfs/QmSkaFo1ciHD7Dbdt5u8uinQdtmNg9GWCwFpcsuwb4R5HF\"]},\"src/bases/BondBaseFPA.sol\":{\"keccak256\":\"0x189b7e6c77b6090dd5e53e9d53c3aa9e61954b03b6f6c86882d8ad5cd1292518\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ff9ff80485d96988e2061ecb8320f6e91809154c1c11b693f11c679e12d0b106\",\"dweb:/ipfs/QmPGVMLmxoJyUqWeJrVGs33SDMjwRBbGf8UsSBHmip3qHJ\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/interfaces/IBondFPA.sol\":{\"keccak256\":\"0x20299c59c9e37ee9a3729c6ea6ded0920d6edb7acfac4e1bb61211fbff86e0f4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://72e683dfea26d0c108f59068a9a691c7598dfa0d3ec2ddda20f4072c43a4253e\",\"dweb:/ipfs/QmNMxnCnizcNXZTHnfDMruR4BwoaPr34rQnpNSyJLK4kn7\"]},\"src/interfaces/IBondFixedExpiryTeller.sol\":{\"keccak256\":\"0x4530df5a76e94da12895a0d1912388700b17bee34c6c71c3762c5ae8dd5bbfe1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c32dfd7b2803ec73451bba008ed427ce888215b0039e7a871247ed591d4ed373\",\"dweb:/ipfs/QmenLrALRdCMu8ttfyVwiSubM6vzCmAn1cL7vJgAcM76ag\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/lib/CloneERC20.sol\":{\"keccak256\":\"0x44cf60ce8aab43c31e8b6641c417e6a26c3242847c267435906ddb46b37b82c4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f8867033f95983416889a931bfe0396c29be883d62a8330668fadeb06b937fdf\",\"dweb:/ipfs/QmUUKxS87nt3mxZuwCMZrMgLBco3ZRcz4p69hVPuZ7RJ3h\"]},\"src/lib/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb\",\"dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "teller_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_BadExpiry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MarketNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MaxPayoutExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NewMarketsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotEnoughCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OnlyMarketOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketClosed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payoutToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fixedPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowNewMarkets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "callbackAuthorized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "params_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAggregator",
          "outputs": [
            {
              "internalType": "contract IBondAggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfoForPurchase",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPayout",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositInterval",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minMarketDuration",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "newOwners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowNewMarkets"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCallbackAuthStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[6]",
              "name": "defaults_",
              "type": "uint32[6]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaults"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint32[3]",
              "name": "intervals_",
              "type": "uint32[3]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntervals"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "depositInterval_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDepositInterval"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "duration_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinMarketDuration"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "terms",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "closeMarket(uint256)": {
            "params": {
              "id_": "ID of market to close"
            }
          },
          "createMarket(bytes)": {
            "details": "See specific auctioneer implementations for details on encoding the parameters.",
            "params": {
              "params_": "Configuration data needed for market creation, encoded in a bytes array"
            },
            "returns": {
              "_0": "id              ID of new bond market"
            }
          },
          "getMarketInfoForPurchase(uint256)": {
            "params": {
              "id_": "Market ID"
            },
            "returns": {
              "callbackAddr": "   Address of the callback contract to get tokens for payouts",
              "maxPayout_": "      Maximum amount of payout tokens you can purchase in one transaction",
              "owner": "          Address of the market owner (tokens transferred from this address if no callback)",
              "payoutToken": "    Payout Token (token paid out) for the Market",
              "quoteToken": "     Quote Token (token received) for the Market",
              "vesting": "        Timestamp or duration for vesting, implementation-dependent"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "marketPrice(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market in configured decimals"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "maxPayout(uint256)": {
            "details": "Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current max payout for the market in payout tokens"
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "pullOwnership(uint256)": {
            "details": "The existing owner must call pushOwnership prior to the newOwner calling this function",
            "params": {
              "id_": "Market ID"
            }
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond (after fee has been deducted)",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning"
            },
            "returns": {
              "payout": "         Amount of payout token to be received from the bond"
            }
          },
          "pushOwnership(uint256,address)": {
            "details": "Doesn't change permissions until newOwner calls pullOwnership",
            "params": {
              "id_": "Market ID",
              "newOwner_": "New address to give ownership to"
            }
          },
          "setAllowNewMarkets(bool)": {
            "details": "Setting to false and allowing active markets to end will sunset the auctioneer",
            "params": {
              "status_": "Allow market creation (true) : Disallow market creation (false)"
            }
          },
          "setCallbackAuthStatus(address,bool)": {
            "details": "Callback is believed to be safe, but a whitelist is implemented to prevent abuse",
            "params": {
              "creator_": "Address of market creator",
              "status_": "Allow callback (true) : Disallow callback (false)"
            }
          },
          "setDefaults(uint32[6])": {
            "details": "The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change",
            "params": {
              "defaults_": "Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown"
            }
          },
          "setIntervals(uint256,uint32[3])": {
            "details": "Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay",
            "params": {
              "id_": "Market ID",
              "intervals_": "Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely"
            }
          },
          "setMinDepositInterval(uint48)": {
            "params": {
              "depositInterval_": "Minimum deposit interval in seconds"
            }
          },
          "setMinMarketDuration(uint48)": {
            "params": {
              "duration_": "Minimum market duration in seconds"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowNewMarkets()": {
            "notice": "Whether or not the auctioneer allows new markets to be created"
          },
          "callbackAuthorized(address)": {
            "notice": "Whether or not the market creator is authorized to use a callback address"
          },
          "closeMarket(uint256)": {
            "notice": "Disable existing bond marketMust be market owner"
          },
          "createMarket(bytes)": {
            "notice": "Creates a new bond market"
          },
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "getAggregator()": {
            "notice": "Returns the Aggregator that services the Auctioneer"
          },
          "getMarketInfoForPurchase(uint256)": {
            "notice": "Provides information for the Teller to execute purchases on a Market"
          },
          "getTeller()": {
            "notice": "Returns the Teller that services the Auctioneer"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "markets(uint256)": {
            "notice": "Information pertaining to bond markets"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "maxPayout(uint256)": {
            "notice": "Calculate max payout of the market in payout tokens"
          },
          "minDepositInterval()": {
            "notice": "Minimum deposit interval for a market"
          },
          "minMarketDuration()": {
            "notice": "Minimum market duration in seconds"
          },
          "newOwners(uint256)": {
            "notice": "New address to designate as market owner. They must accept ownership to transfer permissions."
          },
          "ownerOf(uint256)": {
            "notice": "Returns the address of the market owner"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "pullOwnership(uint256)": {
            "notice": "Accept ownership of a marketMust be market newOwner"
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified marketMust be teller"
          },
          "pushOwnership(uint256,address)": {
            "notice": "Designate a new owner of a marketMust be market owner"
          },
          "setAllowNewMarkets(bool)": {
            "notice": "Change the status of the auctioneer to allow creation of new markets"
          },
          "setCallbackAuthStatus(address,bool)": {
            "notice": "Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian"
          },
          "setDefaults(uint32[6])": {
            "notice": "Set the auctioneer defaultsMust be policy"
          },
          "setIntervals(uint256,uint32[3])": {
            "notice": "Set market intervals to different values than the defaultsMust be market owner"
          },
          "setMinDepositInterval(uint48)": {
            "notice": "Set the minimum deposit intervalAccess controlled"
          },
          "setMinMarketDuration(uint48)": {
            "notice": "Set the minimum market durationAccess controlled"
          },
          "terms(uint256)": {
            "notice": "Information pertaining to market vesting and duration"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "clones/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondFixedExpiryFPA.sol": "BondFixedExpiryFPA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x8f569b077d99ec821c2750c52094b59b3505fb6ca3e6eac9009092bf86c5452d",
        "urls": [
          "bzz-raw://d0f3966d1f97959f6512ee5bc4b73487bf5ce593880e3c1dbf97ed50d49402a0",
          "dweb:/ipfs/QmSAtFtA28Mja6f6FfET26B38XEgrLgqRezNLo3AsXyjVB"
        ],
        "license": "BSD"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a",
        "urls": [
          "bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a",
          "dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/BondFixedExpiryFPA.sol": {
        "keccak256": "0xba43fce3ab0ca75350d93617f118f718fc433c8ec79c82b5de43fa33399bca8a",
        "urls": [
          "bzz-raw://7c980f4a81055c6812f3e8098799ed5e8209c044dd0708d0c2d17b90d6f1e65d",
          "dweb:/ipfs/QmRpSK4rdTPBf3DngiyYUhJkFSukv76To516HmqHq6WXSN"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/ERC20BondToken.sol": {
        "keccak256": "0x14b11e975c3fb2f8aee2962e46aa1ab7c3ba145351f1c8f26e7f234fba9f4410",
        "urls": [
          "bzz-raw://b766eb91df473cd1be260b7ab4198eaef69e6f71f01572e113efb67043d11279",
          "dweb:/ipfs/QmSkaFo1ciHD7Dbdt5u8uinQdtmNg9GWCwFpcsuwb4R5HF"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/bases/BondBaseFPA.sol": {
        "keccak256": "0x189b7e6c77b6090dd5e53e9d53c3aa9e61954b03b6f6c86882d8ad5cd1292518",
        "urls": [
          "bzz-raw://ff9ff80485d96988e2061ecb8320f6e91809154c1c11b693f11c679e12d0b106",
          "dweb:/ipfs/QmPGVMLmxoJyUqWeJrVGs33SDMjwRBbGf8UsSBHmip3qHJ"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFPA.sol": {
        "keccak256": "0x20299c59c9e37ee9a3729c6ea6ded0920d6edb7acfac4e1bb61211fbff86e0f4",
        "urls": [
          "bzz-raw://72e683dfea26d0c108f59068a9a691c7598dfa0d3ec2ddda20f4072c43a4253e",
          "dweb:/ipfs/QmNMxnCnizcNXZTHnfDMruR4BwoaPr34rQnpNSyJLK4kn7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFixedExpiryTeller.sol": {
        "keccak256": "0x4530df5a76e94da12895a0d1912388700b17bee34c6c71c3762c5ae8dd5bbfe1",
        "urls": [
          "bzz-raw://c32dfd7b2803ec73451bba008ed427ce888215b0039e7a871247ed591d4ed373",
          "dweb:/ipfs/QmenLrALRdCMu8ttfyVwiSubM6vzCmAn1cL7vJgAcM76ag"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/lib/CloneERC20.sol": {
        "keccak256": "0x44cf60ce8aab43c31e8b6641c417e6a26c3242847c267435906ddb46b37b82c4",
        "urls": [
          "bzz-raw://f8867033f95983416889a931bfe0396c29be883d62a8330668fadeb06b937fdf",
          "dweb:/ipfs/QmUUKxS87nt3mxZuwCMZrMgLBco3ZRcz4p69hVPuZ7RJ3h"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20",
        "urls": [
          "bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb",
          "dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondFixedExpiryFPA.sol",
    "id": 33330,
    "exportedSymbols": {
      "Authority": [
        29632
      ],
      "BondBaseFPA": [
        36409
      ],
      "BondFixedExpiryFPA": [
        33329
      ],
      "IBondAggregator": [
        42920
      ],
      "IBondFixedExpiryTeller": [
        43613
      ],
      "IBondTeller": [
        44166
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:3240:30",
    "nodes": [
      {
        "id": 33203,
        "nodeType": "PragmaDirective",
        "src": "46:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33207,
        "nodeType": "ImportDirective",
        "src": "71:80:30",
        "nodes": [],
        "absolutePath": "src/bases/BondBaseFPA.sol",
        "file": "./bases/BondBaseFPA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33330,
        "sourceUnit": 36410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33204,
              "name": "BondBaseFPA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36409,
              "src": "79:11:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33205,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42920,
              "src": "92:15:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33206,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29632,
              "src": "109:9:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33209,
        "nodeType": "ImportDirective",
        "src": "152:57:30",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondTeller.sol",
        "file": "./interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33330,
        "sourceUnit": 44167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33208,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44166,
              "src": "160:11:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33211,
        "nodeType": "ImportDirective",
        "src": "210:79:30",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondFixedExpiryTeller.sol",
        "file": "./interfaces/IBondFixedExpiryTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33330,
        "sourceUnit": 43614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33210,
              "name": "IBondFixedExpiryTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43613,
              "src": "218:22:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33329,
        "nodeType": "ContractDefinition",
        "src": "1664:1621:30",
        "nodes": [
          {
            "id": 33235,
            "nodeType": "FunctionDefinition",
            "src": "1757:200:30",
            "nodes": [],
            "body": {
              "id": 33234,
              "nodeType": "Block",
              "src": "1955:2:30",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33228,
                    "name": "teller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33217,
                    "src": "1910:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  {
                    "id": 33229,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33220,
                    "src": "1919:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 33230,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33222,
                    "src": "1932:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 33231,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33225,
                    "src": "1943:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 33232,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33227,
                  "name": "BondBaseFPA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36409,
                  "src": "1898:11:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "1898:56:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33217,
                  "mutability": "mutable",
                  "name": "teller_",
                  "nameLocation": "1790:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 33235,
                  "src": "1778:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$44166",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 33216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33215,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44166,
                      "src": "1778:11:30"
                    },
                    "referencedDeclaration": 44166,
                    "src": "1778:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33220,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1823:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 33235,
                  "src": "1807:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 33219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33218,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42920,
                      "src": "1807:15:30"
                    },
                    "referencedDeclaration": 42920,
                    "src": "1807:15:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33222,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1852:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 33235,
                  "src": "1844:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33225,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "1881:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 33235,
                  "src": "1871:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$29632",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 33224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33223,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29632,
                      "src": "1871:9:30"
                    },
                    "referencedDeclaration": 29632,
                    "src": "1871:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:129:30"
            },
            "returnParameters": {
              "id": 33233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1955:0:30"
            },
            "scope": 33329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33328,
            "nodeType": "FunctionDefinition",
            "src": "1995:1288:30",
            "nodes": [],
            "body": {
              "id": 33327,
              "nodeType": "Block",
              "src": "2077:1206:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33246,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2181:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 33327,
                      "src": "2161:26:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                        "typeString": "struct IBondFPA.MarketParams"
                      },
                      "typeName": {
                        "id": 33245,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33244,
                          "name": "MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43518,
                          "src": "2161:12:30"
                        },
                        "referencedDeclaration": 43518,
                        "src": "2161:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_storage_ptr",
                          "typeString": "struct IBondFPA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33253,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33249,
                        "name": "params_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33238,
                        "src": "2201:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33250,
                            "name": "MarketParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43518,
                            "src": "2211:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MarketParams_$43518_storage_ptr_$",
                              "typeString": "type(struct IBondFPA.MarketParams storage pointer)"
                            }
                          }
                        ],
                        "id": 33251,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2210:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$43518_storage_ptr_$",
                          "typeString": "type(struct IBondFPA.MarketParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$43518_storage_ptr_$",
                          "typeString": "type(struct IBondFPA.MarketParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 33247,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2190:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2190:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:35:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                      "typeString": "struct IBondFPA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2161:64:30"
                },
                {
                  "expression": {
                    "id": 33264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33254,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33246,
                        "src": "2391:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                          "typeString": "struct IBondFPA.MarketParams memory"
                        }
                      },
                      "id": 33256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vesting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43511,
                      "src": "2391:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 33260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 33257,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33246,
                                "src": "2409:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                                  "typeString": "struct IBondFPA.MarketParams memory"
                                }
                              },
                              "id": 33258,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43511,
                              "src": "2409:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 33259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2426:6:30",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "2409:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "id": 33261,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2408:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 33262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2436:6:30",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "2408:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "2391:51:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "id": 33265,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:51:30"
                },
                {
                  "assignments": [
                    33267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33267,
                      "mutability": "mutable",
                      "name": "start",
                      "nameLocation": "2622:5:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 33327,
                      "src": "2615:12:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 33266,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "2615:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33280,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33268,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33246,
                          "src": "2630:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                            "typeString": "struct IBondFPA.MarketParams memory"
                          }
                        },
                        "id": 33269,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43513,
                        "src": "2630:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2630:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 33277,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33246,
                        "src": "2676:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                          "typeString": "struct IBondFPA.MarketParams memory"
                        }
                      },
                      "id": 33278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "start",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43513,
                      "src": "2676:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "id": 33279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2630:58:30",
                    "trueExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 33274,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2657:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 33275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2657:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 33273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2650:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 33272,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:6:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2650:23:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2615:73:30"
                },
                {
                  "assignments": [
                    33282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33282,
                      "mutability": "mutable",
                      "name": "conclusion",
                      "nameLocation": "2705:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 33327,
                      "src": "2698:17:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 33281,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "2698:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33287,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33283,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33267,
                      "src": "2718:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "id": 33284,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33246,
                        "src": "2726:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                          "typeString": "struct IBondFPA.MarketParams memory"
                        }
                      },
                      "id": 33285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43515,
                      "src": "2726:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "2718:23:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2698:43:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33288,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33246,
                          "src": "2835:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                            "typeString": "struct IBondFPA.MarketParams memory"
                          }
                        },
                        "id": 33289,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43511,
                        "src": "2835:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2853:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2835:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33292,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33246,
                          "src": "2858:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                            "typeString": "struct IBondFPA.MarketParams memory"
                          }
                        },
                        "id": 33293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43511,
                        "src": "2858:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 33294,
                        "name": "conclusion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33282,
                        "src": "2875:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "src": "2858:27:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2835:50:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33300,
                  "nodeType": "IfStatement",
                  "src": "2831:89:30",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33297,
                        "name": "Auctioneer_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35357,
                        "src": "2894:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2894:26:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33299,
                    "nodeType": "RevertStatement",
                    "src": "2887:33:30"
                  }
                },
                {
                  "assignments": [
                    33302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33302,
                      "mutability": "mutable",
                      "name": "marketId",
                      "nameLocation": "2985:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 33327,
                      "src": "2977:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2977:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33306,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33304,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33246,
                        "src": "3010:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                          "typeString": "struct IBondFPA.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                          "typeString": "struct IBondFPA.MarketParams memory"
                        }
                      ],
                      "id": 33303,
                      "name": "_createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35722,
                      "src": "2996:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParams_$43518_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondFPA.MarketParams memory) returns (uint256)"
                      }
                    },
                    "id": 33305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2977:40:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 33307,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33246,
                        "src": "3106:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                          "typeString": "struct IBondFPA.MarketParams memory"
                        }
                      },
                      "id": 33308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vesting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43511,
                      "src": "3106:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 33309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3124:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3106:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33324,
                  "nodeType": "IfStatement",
                  "src": "3102:120:30",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 33318,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33246,
                            "src": "3187:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                              "typeString": "struct IBondFPA.MarketParams memory"
                            }
                          },
                          "id": 33319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "payoutToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43496,
                          "src": "3187:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 33320,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33246,
                            "src": "3207:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketParams_$43518_memory_ptr",
                              "typeString": "struct IBondFPA.MarketParams memory"
                            }
                          },
                          "id": 33321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "vesting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43511,
                          "src": "3207:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 33314,
                                  "name": "_teller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35422,
                                  "src": "3170:7:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBondTeller_$44166",
                                    "typeString": "contract IBondTeller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBondTeller_$44166",
                                    "typeString": "contract IBondTeller"
                                  }
                                ],
                                "id": 33313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3162:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33312,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3162:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3162:16:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33311,
                            "name": "IBondFixedExpiryTeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43613,
                            "src": "3139:22:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBondFixedExpiryTeller_$43613_$",
                              "typeString": "type(contract IBondFixedExpiryTeller)"
                            }
                          },
                          "id": 33316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3139:40:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBondFixedExpiryTeller_$43613",
                            "typeString": "contract IBondFixedExpiryTeller"
                          }
                        },
                        "id": 33317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deploy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43591,
                        "src": "3139:47:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$30350_$_t_uint48_$returns$_t_contract$_ERC20BondToken_$35309_$",
                          "typeString": "function (contract ERC20,uint48) external returns (contract ERC20BondToken)"
                        }
                      },
                      "id": 33322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3139:83:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "id": 33323,
                    "nodeType": "ExpressionStatement",
                    "src": "3139:83:30"
                  }
                },
                {
                  "expression": {
                    "id": 33325,
                    "name": "marketId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33302,
                    "src": "3268:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33243,
                  "id": 33326,
                  "nodeType": "Return",
                  "src": "3261:15:30"
                }
              ]
            },
            "baseFunctions": [
              35469
            ],
            "documentation": {
              "id": 33236,
              "nodeType": "StructuredDocumentation",
              "src": "1963:27:30",
              "text": "@inheritdoc BondBaseFPA"
            },
            "functionSelector": "53c7f8e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "2004:12:30",
            "overrides": {
              "id": 33240,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2050:8:30"
            },
            "parameters": {
              "id": 33239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33238,
                  "mutability": "mutable",
                  "name": "params_",
                  "nameLocation": "2032:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 33328,
                  "src": "2017:22:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33237,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2016:24:30"
            },
            "returnParameters": {
              "id": 33243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33328,
                  "src": "2068:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:9:30"
            },
            "scope": 33329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33213,
              "name": "BondBaseFPA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36409,
              "src": "1695:11:30"
            },
            "id": 33214,
            "nodeType": "InheritanceSpecifier",
            "src": "1695:11:30"
          }
        ],
        "canonicalName": "BondFixedExpiryFPA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33212,
          "nodeType": "StructuredDocumentation",
          "src": "291:1373:30",
          "text": "@title Bond Fixed-Expiry Fixed Price Auctioneer\n @notice Bond Fixed-Expiry Fixed Price Auctioneer Contract\n @dev Bond Protocol is a permissionless system to create bond markets\n      for any token pair. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev An Auctioneer contract allows users to create and manage bond markets.\n      All bond pricing logic and market data is stored in the Auctioneer.\n      An Auctioneer is dependent on a Teller to serve external users and\n      an Aggregator to register new markets. Th Fixed Price Auctioneer\n      lets issuers set a Fixed Price to buy a target amount of quote tokens or sell\n      a target amount of payout tokens over the duration of a market.\n      See IBondFPA.sol for price format details.\n @dev The Fixed-Expiry Fixed Price Auctioneer is an implementation of the\n      Bond Base Fixed Price Auctioneer contract specific to creating bond markets where\n      all purchases on that market vest at a certain timestamp.\n @author Oighty"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33329,
          36409,
          29619,
          43548,
          43105
        ],
        "name": "BondFixedExpiryFPA",
        "nameLocation": "1673:18:30",
        "scope": 33330,
        "usedErrors": [
          35343,
          35345,
          35347,
          35349,
          35351,
          35353,
          35355,
          35357,
          35359,
          35361
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 30
}