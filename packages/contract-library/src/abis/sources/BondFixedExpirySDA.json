{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "teller_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auctioneer_AmountLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_BadExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InitialPriceLessThanMin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MarketNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MaxPayoutExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NewMarketsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotEnoughCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OnlyMarketOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "defaultTuneInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "defaultTuneAdjustment",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDebtDecayInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDepositInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minMarketDuration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDebtBuffer",
          "type": "uint32"
        }
      ],
      "name": "DefaultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "MarketClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldControlVariable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newControlVariable",
          "type": "uint256"
        }
      ],
      "name": "Tuned",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adjustments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "change",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "lastAdjustment",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "timeToAdjusted",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowNewMarkets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callbackAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "closeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "params_",
          "type": "bytes"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentControlVariable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultTuneAdjustment",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultTuneInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAggregator",
      "outputs": [
        {
          "internalType": "contract IBondAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoForPurchase",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "capacityInQuote",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "scale",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "maxPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "lastTune",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "lastDecay",
          "type": "uint48"
        },
        {
          "internalType": "uint32",
          "name": "depositInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "tuneInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "tuneAdjustmentDelay",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "debtDecayInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "tuneIntervalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tuneBelowCapacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastTuneDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDebtBuffer",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDebtDecayInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minMarketDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "pullOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchaseBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setAllowNewMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setCallbackAuthStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[6]",
          "name": "defaults_",
          "type": "uint32[6]"
        }
      ],
      "name": "setDefaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint32[3]",
          "name": "intervals_",
          "type": "uint32[3]"
        }
      ],
      "name": "setIntervals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "terms",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "controlVariable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "conclusion",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1285:1641:33:-:0;;;1378:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;1531:7:33;;1540:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;;5096:25:44;;::::1;;::::0;5131:17:::1;;::::0;-1:-1:-1;;5159:19:44::1;:30:::0;;-1:-1:-1;;;;;;5353:21:44;;;;;-1:-1:-1;;5392:15:44::1;:22:::0;;-1:-1:-1;;5392:22:44::1;-1:-1:-1::0;5392:22:44::1;::::0;;1285:1641:33;;14:144:124;-1:-1:-1;;;;;102:31:124;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:771::-;325:6;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;451:9;445:16;470:44;508:5;470:44;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:46:124;562:25;596:46;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;726:46:124;692:25;726:46;:::i;:::-;843:2;828:18;;822:25;791:7;;-1:-1:-1;856:46:124;822:25;856:46;:::i;:::-;163:771;;;;-1:-1:-1;163:771:124;;-1:-1:-1;;163:771:124:o;:::-;1285:1641:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102c85760003560e01c8063acc5570c1161017b578063bf7e214f116100d8578063d9ccdc931161008c578063e3684e3911610071578063e3684e3914610907578063e922067314610a1b578063ea0aca3314610a3757600080fd5b8063d9ccdc93146108e4578063e007fa97146108f457600080fd5b8063c7bf8ca0116100bd578063c7bf8ca01461088d578063d2040687146108a0578063d2bee323146108c057600080fd5b8063bf7e214f146107df578063c0aa0e8a146107ff57600080fd5b8063bc3b2b121161012f578063bcf6cde811610114578063bcf6cde8146107a6578063bd1f3a5e146107b9578063bf48582b146107cc57600080fd5b8063bc3b2b121461070f578063bcb296671461079357600080fd5b8063afa9d3b011610160578063afa9d3b0146105de578063b1283e77146105eb578063bbbdd95a146106fc57600080fd5b8063acc5570c14610562578063ae418095146105cb57600080fd5b80635f77274e116102295780638973082c116101dd5780638da5cb5b116101c25780638da5cb5b146104f9578063946824cd146105195780639787d1071461053c57600080fd5b80638973082c146104a95780638b098db3146104e657600080fd5b80636729a41e1161020e5780636729a41e1461044d578063699e17d9146104835780637a9e5e4b1461049657600080fd5b80635f77274e146104045780636352211e1461041757600080fd5b80633ad59dbc1161028057806353c7f8e01161026557806353c7f8e0146103bb57806357e333ba146103ce5780635dc4d16b146103e157600080fd5b80633ad59dbc146103615780633adec5a7146103a857600080fd5b806313af4035116102b157806313af4035146103085780631c063a6c1461031b578063275074581461033e57600080fd5b80630a9d85eb146102cd57806310b05317146102f3575b600080fd5b6102e06102db366004614408565b610a4f565b6040519081526020015b60405180910390f35b610306610301366004614408565b610a81565b005b610306610316366004614453565b610b3c565b6102e0610329366004614408565b60009081526002602052604090206004015490565b61035161034c366004614408565b610c45565b60405190151581526020016102ea565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102ea565b6102e06103b6366004614408565b610cb8565b6102e06103c9366004614470565b610d1b565b6102e06103dc366004614408565b610f11565b6103516103ef366004614453565b60086020526000908152604090205460ff1681565b6103066104123660046144fb565b611036565b610383610425366004614408565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b61038361045b366004614408565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610306610491366004614518565b6110fb565b6103066104a4366004614453565b611596565b6009546104d19074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102ea565b6103516104f4366004614408565b6116f3565b6000546103839073ffffffffffffffffffffffffffffffffffffffff1681565b6102e0610527366004614408565b6000908152600260205260409020600a015490565b7f0000000000000000000000000000000000000000000000000000000000000000610383565b610575610570366004614408565b611739565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c0016102ea565b6103066105d9366004614408565b61185a565b6007546103519060ff1681565b6106826105f9366004614408565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460088801546009890154600a9099015473ffffffffffffffffffffffffffffffffffffffff9889169a891699978916988716977401000000000000000000000000000000000000000090970460ff1696908c565b6040805173ffffffffffffffffffffffffffffffffffffffff9d8e1681529b8d1660208d0152998c16998b0199909952999096166060890152931515608088015260a087019290925260c086015260e0850152610100840152610120830152610140820192909252610160810191909152610180016102ea565b61030661070a36600461454b565b6118c3565b61076261071d366004614408565b6005602052600090815260409020805460019091015465ffffffffffff8082169166010000000000008104909116906c01000000000000000000000000900460ff1684565b6040516102ea949392919093845265ffffffffffff9283166020850152911660408301521515606082015260800190565b6102e06107a1366004614408565b6119ad565b6103066107b4366004614584565b611b48565b6103066107c7366004614616565b611bf8565b6102e06107da36600461469b565b612027565b6001546103839073ffffffffffffffffffffffffffffffffffffffff1681565b61085861080d366004614408565b60036020526000908152604090208054600182015460029092015490919065ffffffffffff80821691660100000000000081048216916c010000000000000000000000009091041685565b60408051958652602086019490945265ffffffffffff928316938501939093528116606084015216608082015260a0016102ea565b6102e061089b366004614584565b612176565b6009546104d1906c01000000000000000000000000900463ffffffff1681565b6009546104d190700100000000000000000000000000000000900463ffffffff1681565b6009546104d19063ffffffff1681565b6102e06109023660046146d4565b612396565b6109be610915366004614408565b600460205260009081526040902080546001820154600283015460039093015465ffffffffffff80841694660100000000000085049091169363ffffffff6c0100000000000000000000000082048116947001000000000000000000000000000000008304821694740100000000000000000000000000000000000000008404831694780100000000000000000000000000000000000000000000000090940490921692909189565b6040805165ffffffffffff9a8b1681529990981660208a015263ffffffff96871697890197909752938516606088015291841660808701529290921660a085015260c084019190915260e0830152610100820152610120016102ea565b6009546104d19068010000000000000000900463ffffffff1681565b6009546104d190640100000000900463ffffffff1681565b600080610a5b836126e2565b5050600084815260036020526040902054909150610a7a90829061472f565b9392505050565b60008181526006602052604090205473ffffffffffffffffffffffffffffffffffffffff163314610ade576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260066020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610b6a336000357fffffffff00000000000000000000000000000000000000000000000000000000166127bd565b610bd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610c8a575060008281526003602052604090206002015465ffffffffffff428116660100000000000090920416115b8015610cb2575060008281526003602052604090206002015465ffffffffffff428116911611155b92915050565b600080610ce9610cc7846119ad565b6000858152600260205260409020600a0154610ce286610a4f565b91906128ce565b6000848152600260205260409020600601549091508111610cb257600083815260026020526040902060060154610a7a565b600080610d2a83850185614777565b905062015180816101000151610d40919061488f565b610d4d90620151806148db565b65ffffffffffff9081166101008301526101208201516000911615610d7757816101200151610d79565b425b9050600082610140015163ffffffff1682610d949190614909565b905082610100015165ffffffffffff16600014158015610dc857508065ffffffffffff1683610100015165ffffffffffff16105b15610dff576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e0a8461292c565b905083610100015165ffffffffffff16600014610f075783516101008501516040517fc6e38a4b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263c6e38a4b92610ec29260040173ffffffffffffffffffffffffffffffffffffffff92909216825265ffffffffffff16602082015260400190565b6020604051808303816000875af1158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f059190614933565b505b9695505050505050565b600080610f1d83610cb8565b6000848152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff16151560808301819052600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a9091015461016083015292935091610ffd578160a00151611012565b61016082015160a083015161101291856136b1565b9050808261010001511161102b5781610100015161102d565b805b95945050505050565b611064336000357fffffffff00000000000000000000000000000000000000000000000000000000166127bd565b6110ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610bcc565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b61110482610c45565b61113a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111476020820182614950565b63ffffffff16158061116c57506111646040820160208301614950565b63ffffffff16155b8061118a57506111826060820160408301614950565b63ffffffff16155b156111c1576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111d16040820160208301614950565b63ffffffff166111e46020830183614950565b63ffffffff161015611222576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600460209081526040909120805490916c0100000000000000000000000090910463ffffffff169061125b90840184614950565b63ffffffff161015611299576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60095468010000000000000000900463ffffffff166112be6060840160408501614950565b63ffffffff1610156112fc576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083815260026020818152604092839020835161018081018552815473ffffffffffffffffffffffffffffffffffffffff908116808352600184015482169483019490945293820154841694810194909452600381015492831660608501527401000000000000000000000000000000000000000090920460ff1615156080840152600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a909101546101608301523314611402576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61140f6020840184614950565b825463ffffffff91909116700100000000000000000000000000000000027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff9091161782556114a96114646020850185614950565b60008681526003602052604090206002015463ffffffff919091169061149d9042906601000000000000900465ffffffffffff1661472f565b60a084015191906136b1565b6001830181905560a0820151116114c15760006114d5565b81600101548160a001516114d5919061472f565b60028301556114ea6040840160208501614950565b825463ffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff9091161782556115436060840160408501614950565b825463ffffffff919091167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff90911617909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061167957506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015611655573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611679919061496b565b61168257600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000818152600360205260408120600201546c01000000000000000000000000900465ffffffffffff16635dba24008111156117325742811115610a7a565b1592915050565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff90811680835260018401548216838701819052848801548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e0870152600787015461010087015260088701546101208701526009870154610140870152600a909601546101608601528a8a5294909652938720909501548695869586958695869594919392916c01000000000000000000000000900465ffffffffffff166118458d610f11565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146118b7576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118c08161377d565b50565b6118f1336000357fffffffff00000000000000000000000000000000000000000000000000000000166127bd565b611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610bcc565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600081815260036020526040812060020154429065ffffffffffff168110156119e757505060009081526002602052604090206005015490565b600083815260046020908152604091829020825161012081018452815465ffffffffffff8082168352660100000000000082041693820184905263ffffffff6c010000000000000000000000008204811695830195909552700100000000000000000000000000000000810485166060830152740100000000000000000000000000000000000000008104851660808301527801000000000000000000000000000000000000000000000000900490931660a0840152600181015460c0840152600281015460e08401526003015461010083015282811115611b095760a082015183820390610f0790611ae190839063ffffffff16614988565b60a0850151600089815260026020526040902060050154919063ffffffff908116906136b116565b60a08201518184039063ffffffff168111611b3c57611b37818460a0015163ffffffff16611ae1919061472f565b610f07565b60009695505050505050565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314611ba5576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526006602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b611c26336000357fffffffff00000000000000000000000000000000000000000000000000000000166127bd565b611c8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610bcc565b6020810151815163ffffffff91821691161015611cd5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151815163ffffffff91821691161015611d1e576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810151606082015163ffffffff91821691161115611d6a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151611d7a9060056149a0565b63ffffffff16816002602002015163ffffffff161015611dc6576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060006020020151600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff90921691909117905580600160200201516009805463ffffffff909216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff90921691909117905580600260200201516009805463ffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff90921691909117905580600360200201516009805463ffffffff9092166c01000000000000000000000000027fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff90921691909117905580600460200201516009805463ffffffff909216700100000000000000000000000000000000027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff90921691909117905580600560209081029190910151600980547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff81167401000000000000000000000000000000000000000063ffffffff9485168102918217938490556040805193861692861692909217835264010000000084048516958301959095526801000000000000000083048416908201526c010000000000000000000000008204831660608201527001000000000000000000000000000000008204831660808201529290041660a08201527fbbc02fa2138d26ec5ecb379612618d1b291bf5140167f3028178080953459c5a9060c00160405180910390a150565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182916120f5917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa1580156120be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e291906149c3565b869065ffffffffffff16620186a06136b1565b6000858152600260205260408120600a0154919250906121299061211887610cb8565b612122858a61472f565b91906136b1565b905061213485610f11565b81111561216d576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9150610a7a9050565b6000828152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a01546101608201528161224a85610cb8565b9050600082608001516122725761016083015160a084015161226d9184906136b1565b612278565b8260a001515b9050600061229b838561016001518661010001516136b19092919063ffffffff16565b905060008183106122ac57816122ae565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925060009161237d917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015612346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236a91906149c3565b839065ffffffffffff16620186a06136b1565b90506123898183614988565b9998505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614612407576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260208181526040808420600380845294829020825160a081018452815481526001820154948101949094529093015465ffffffffffff8082169284019290925266010000000000008104821660608401526c0100000000000000000000000090041660808201529181015490919073ffffffffffffffffffffffffffffffffffffffff16158015906124c75750815473ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205460ff16155b156124fe576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61250786610c45565b61253d576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061254a878742613801565b9450905084841015612588576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600701548411156125c6576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff166125f657826004015484116125fe565b826004015486115b15612635576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff1661265f5783612661565b855b836004016000828254612674919061472f565b925050819055508583600901600082825461268f9190614988565b92505081905550838360080160008282546126aa9190614988565b90915550506005830154602083015110156126cd576126c88761377d565b6126d8565b6126d8874283613bcc565b5050509392505050565b600081815260056020908152604080832081516080810183528154815260019091015465ffffffffffff8082169483019490945266010000000000008104909316918101919091526c0100000000000000000000000090910460ff1615156060820181905282918291612760576000806000935093509350506127b6565b602081015161276f90426149e0565b9250806040015165ffffffffffff168365ffffffffffff16109150816127965780516127b2565b604081015181516127b29165ffffffffffff80871691166136b1565b9350505b9193909250565b60015460009073ffffffffffffffffffffffffffffffffffffffff1680158015906128a157506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa15801561287d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a1919061496b565b806128c6575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b60006128db8484846136b1565b9050600082806128ed576128ed614860565b8486091115610a7a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061292257600080fd5b6001019392505050565b60075460009060ff1661296b576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156129bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e09190614a07565b90506000836020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a579190614a07565b905060068260ff161080612a6e575060128260ff16115b15612aa5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff161080612aba575060128160ff16115b15612af1576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe884610180015160000b1280612b2f5750601884610180015160000b135b15612b66576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526008602052604090205460ff16158015612b9f5750604084015173ffffffffffffffffffffffffffffffffffffffff1615155b15612bd6576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084610120015165ffffffffffff16118015612bff57504284610120015165ffffffffffff16105b15612c36576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600082610180015160240160ff16600a0a90508260c001518360a001511015612c8d576040517f4496547d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825160208401516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af1158015612d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d519190614a2a565b60095461014086015191925060009163ffffffff700100000000000000000000000000000000909204821691161080612daa575060095461016086015163ffffffff6c0100000000000000000000000090920482169116105b80612dca575084610140015163ffffffff1685610160015163ffffffff16115b15612e01576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008561016001516005612e1591906149a0565b60095490915063ffffffff808316680100000000000000009092041611612e3c5780612e52565b60095468010000000000000000900463ffffffff165b600954610160880151919350600091612eaf9163ffffffff908116911611612e825760095463ffffffff16612e89565b8761016001515b63ffffffff1688610140015163ffffffff1689608001516136b19092919063ffffffff16565b9050600087610120015165ffffffffffff16600014612ed357876101200151612ed5565b425b604080516101208101825265ffffffffffff831680825260208201526101608b01805163ffffffff90811693830193909352600954905193945090926060840192918216911611612f2e5760095463ffffffff16612f35565b8961016001515b63ffffffff9081168252600954640100000000900481166020830152861660408201526060810184905260808a810151910190612f7390859061472f565b8152602001612fb68663ffffffff168b610140015163ffffffff168c60600151612fa1578c60800151612122565b60a08d015160808e0151612122918d906136b1565b90526000868152600460209081526040808320845181549386015192860151606080880151608089015160a08a015165ffffffffffff9586167fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009099169890981766010000000000009590971694909402959095177fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff166c0100000000000000000000000063ffffffff938416027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff161770010000000000000000000000000000000095831695909502949094177fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000928216929092027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff16919091177801000000000000000000000000000000000000000000000000919094160292909217825560c0840151600183015560e08401516002830155610100909301516003909101559089015190935083925082915061316a57876080015161317f565b60a0880151608089015161317f9188906136b1565b90506131a78463ffffffff1689610140015163ffffffff16836136b19092919063ffffffff16565b92506131d488610160015163ffffffff1689610140015163ffffffff16836136b19092919063ffffffff16565b9150506040518061018001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001886000015173ffffffffffffffffffffffffffffffffffffffff168152602001886020015173ffffffffffffffffffffffffffffffffffffffff168152602001886040015173ffffffffffffffffffffffffffffffffffffffff168152602001886060015115158152602001886080015181526020018381526020018860c0015181526020018281526020016000815260200160008152602001868152506002600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a01559050506000600960149054906101000a900463ffffffff1663ffffffff16613474620186a065ffffffffffff1685856136b19092919063ffffffff16565b1161349f5760095474010000000000000000000000000000000000000000900463ffffffff166134ad565b6134ad82620186a0856136b1565b905060006134e2828a60e0015163ffffffff16116134cb57826134d7565b8960e0015163ffffffff165b8590620186a06136b1565b6134ec9085614988565b60a08a01519091506000906135029089876136b1565b905060008a610120015165ffffffffffff16600014613526578a6101200151613528565b425b90506040518060a001604052808381526020018481526020018265ffffffffffff1681526020018c610140015163ffffffff16836135669190614909565b65ffffffffffff90811682526101008e018051821660209384015260008c815260038452604090819020855181558585015160018201558582015160029091018054606088015160809098015186166c01000000000000000000000000027fffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffff9887166601000000000000027fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009092169390961692909217919091179590951692909217909355908d01518d51925160a08f0151925173ffffffffffffffffffffffffffffffffffffffff92831694909216928c927f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d9261369a92909165ffffffffffff929092168252602082015260400190565b60405180910390a450959998505050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361370857600084116136fd57600080fd5b508290049050610a7a565b80841161371457600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000818152600360209081526040808320600290810180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff1666010000000000004265ffffffffffff16021790559091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6000838152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a01546101608201528190816138d7876119ad565b600088815260026020908152604080832060059081018590559091529020600101549091506c01000000000000000000000000900460ff1615613a1f57600087815260056020526040812090808061392e8b6126e2565b60008e81526003602052604081208054949750929550909350859261395490849061472f565b909155505080156139ef5782846000016000828254613973919061472f565b90915550506001840180548391906006906139a19084906601000000000000900465ffffffffffff166149e0565b92506101000a81548165ffffffffffff021916908365ffffffffffff160217905550888460010160006101000a81548165ffffffffffff021916908365ffffffffffff160217905550613a1a565b6001840180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b505050505b613a2887614325565b60e083015190945080851015613a3c578094505b610160830151613a4e908890876136b1565b600089815260046020526040812080546003909101549296507801000000000000000000000000000000000000000000000000810463ffffffff9081169392660100000000000090920465ffffffffffff169190613ab29085908a9086906128ce16565b60008d815260046020526040902080549192508291600690613ae79084906601000000000000900465ffffffffffff16614909565b92506101000a81548165ffffffffffff021916908365ffffffffffff1602179055506000828b65ffffffffffff1611613b3b57613b2c65ffffffffffff8c168461472f565b613b369086614988565b613b76565b613b4d8365ffffffffffff8d1661472f565b8511613b5a576000613b76565b613b6c8365ffffffffffff8d1661472f565b613b76908661472f565b905088613b8f86613b878585614988565b8a91906136b1565b613b999190614988565b613ba4906001614988565b60009d8e5260026020526040909d206005019c909c5550969a95995094975050505050505050565b600060046000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600060026000868152602001908152602001600020604051806101800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090506000600360008781526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160028201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152505090506000858260600151613fa591906149e0565b65ffffffffffff169050600082604001518360600151613fc591906149e0565b65ffffffffffff16905060008460800151613fe4578460a00151613ff9565b61016085015160a0860151613ff991896136b1565b90506000856080015161401157856101200151614027565b610160860151610140870151614027918a6136b1565b6140319083614988565b905060008261404b614043878761472f565b8490876136b1565b6140559190614988565b90508760e001518760a0015110801561406d57508181105b806140a857506060880151885161408a9163ffffffff1690614909565b65ffffffffffff168a65ffffffffffff16101580156140a857508181115b15614318576140cc886040015163ffffffff1686856136b19092919063ffffffff16565b60008c81526002602052604081206007019190915560a08901516140fd90839063ffffffff9081169088906136b116565b9050600061411b896101600151838d6128ce9092919063ffffffff16565b885160408051918252602082018390529192508e917f78f9c01d72705dba80d6ce051d36a1f987bf2a3800fee938c111a2ae741e57d1910160405180910390a2875181101561424c576040518060800160405280828a6000015161417f919061472f565b81526020018d65ffffffffffff1681526020018b6080015163ffffffff1665ffffffffffff16815260200160011515815250600560008f81526020019081526020016000206000820151816000015560208201518160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060408201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550606082015181600101600c6101000a81548160ff021916908315150217905550905050614291565b60008d81526003602090815260408083208490556005909152902060010180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b60008d815260046020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff8e1617905560c08a015160a08a0151116142e55760006142f9565b8960c001518960a001516142f9919061472f565b60008e8152600460205260409020600281019190915560030191909155505b5050505050505050505050565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff908116825260018301548116828601529482015485168184015260038083015495861660608301527401000000000000000000000000000000000000000090950460ff1615156080820152600482015460a0820152600582015460c08201819052600683015460e0830152600783015461010083015260088301546101208301526009830154610140830152600a90920154610160820181905287875294909352908420549192610a7a9291906128ce565b60006020828403121561441a57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146118c057600080fd5b803561444e81614421565b919050565b60006020828403121561446557600080fd5b8135610a7a81614421565b6000806020838503121561448357600080fd5b823567ffffffffffffffff8082111561449b57600080fd5b818501915085601f8301126144af57600080fd5b8135818111156144be57600080fd5b8660208285010111156144d057600080fd5b60209290920196919550909350505050565b80151581146118c057600080fd5b803561444e816144e2565b60006020828403121561450d57600080fd5b8135610a7a816144e2565b6000806080838503121561452b57600080fd5b823591508360808401111561453f57600080fd5b50926020919091019150565b6000806040838503121561455e57600080fd5b823561456981614421565b91506020830135614579816144e2565b809150509250929050565b6000806040838503121561459757600080fd5b82359150602083013561457981614421565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff811182821017156145fc576145fc6145a9565b60405290565b803563ffffffff8116811461444e57600080fd5b600060c0828403121561462857600080fd5b82601f83011261463757600080fd5b60405160c0810181811067ffffffffffffffff8211171561465a5761465a6145a9565b6040528060c084018581111561466f57600080fd5b845b818110156146905761468281614602565b835260209283019201614671565b509195945050505050565b6000806000606084860312156146b057600080fd5b833592506020840135915060408401356146c981614421565b809150509250925092565b6000806000606084860312156146e957600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561474157614741614700565b500390565b65ffffffffffff811681146118c057600080fd5b803561444e81614746565b8035600081900b811461444e57600080fd5b60006101a0828403121561478a57600080fd5b6147926145d8565b61479b83614443565b81526147a960208401614443565b60208201526147ba60408401614443565b60408201526147cb606084016144f0565b60608201526080830135608082015260a083013560a082015260c083013560c08201526147fa60e08401614602565b60e082015261010061480d81850161475a565b9082015261012061481f84820161475a565b90820152610140614831848201614602565b90820152610160614843848201614602565b90820152610180614855848201614765565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff808416806148cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561490057614900614700565b02949350505050565b600065ffffffffffff80831681851680830382111561492a5761492a614700565b01949350505050565b60006020828403121561494557600080fd5b8151610a7a81614421565b60006020828403121561496257600080fd5b610a7a82614602565b60006020828403121561497d57600080fd5b8151610a7a816144e2565b6000821982111561499b5761499b614700565b500190565b600063ffffffff8083168185168183048111821515161561490057614900614700565b6000602082840312156149d557600080fd5b8151610a7a81614746565b600065ffffffffffff838116908316818110156149ff576149ff614700565b039392505050565b600060208284031215614a1957600080fd5b815160ff81168114610a7a57600080fd5b600060208284031215614a3c57600080fd5b505191905056fea264697066735822122032a2d25488589f3fceee5fa2f903f16759d4457ab1cb65f12cdabddbad897db564736f6c634300080f0033",
    "sourceMap": "1285:1641:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36574:192:44;;;;;;:::i;:::-;;:::i;:::-;;;345:25:124;;;333:2;318:18;36574:192:44;;;;;;;;16014:183;;;;;;:::i;:::-;;:::i;:::-;;1936:147:22;;;;;;:::i;:::-;;:::i;37780:124:44:-;;;;;;:::i;:::-;37850:7;37876:12;;;:7;:12;;;;;:21;;;;37780:124;37054:239;;;;;;:::i;:::-;;:::i;:::-;;;1096:14:124;;1089:22;1071:41;;1059:2;1044:18;37054:239:44;931:187:124;37629:109:44;37720:11;37629:109;;;1324:42:124;1312:55;;;1294:74;;1282:2;1267:18;37629:109:44;1123:251:124;32184:261:44;;;;;;:::i;:::-;;:::i;1616:1308:33:-;;;;;;:::i;:::-;;:::i;33322:547:44:-;;;;;;:::i;:::-;;:::i;3998:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17534:161;;;;;;:::i;:::-;;:::i;37335:113::-;;;;;;:::i;:::-;37397:7;37423:12;;;:7;:12;;;;;:18;;;;37335:113;3654:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14160:1571;;;;;;:::i;:::-;;:::i;1496:434:22:-;;;;;;:::i;:::-;;:::i;4420:27:44:-;;;;;;;;;;;;;;;3478:10:124;3466:23;;;3448:42;;3436:2;3421:18;4420:27:44;3304:192:124;36808:204:44;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;;;;;32487:117:44;;;;;;:::i;:::-;32553:7;32579:12;;;:7;:12;;;;;:18;;;;32487:117;37490:97;37573:7;37490:97;;31594:555;;;;;;:::i;:::-;;:::i;:::-;;;;4078:42:124;4147:15;;;4129:34;;4199:15;;;4194:2;4179:18;;4172:43;4251:15;;;4231:18;;;4224:43;;;;4303:15;;4298:2;4283:18;;4276:43;4368:14;4356:27;;;4350:3;4335:19;;4328:56;4415:3;4400:19;;4393:35;;;;4055:3;4040:19;31594:555:44;3753:681:124;17974:163:44;;;;;;:::i;:::-;;:::i;3874:27::-;;;;;;;;;3170:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:42:124;4999:15;;;4981:34;;5051:15;;;5046:2;5031:18;;5024:43;5103:15;;;5083:18;;;5076:43;;;;5155:15;;;;5150:2;5135:18;;5128:43;5215:14;;5208:22;5202:3;5187:19;;5180:51;5262:3;5247:19;;5240:35;;;;5306:3;5291:19;;5284:35;5350:3;5335:19;;5328:35;5394:3;5379:19;;5372:35;5438:3;5423:19;;5416:35;5482:3;5467:19;;5460:36;;;;5527:3;5512:19;;5505:36;;;;4907:3;4892:19;3170:45:44;4439:1108:124;17737:195:44;;;;;;:::i;:::-;;:::i;3488:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6160:25:124;;;6204:14;6254:15;;;6249:2;6234:18;;6227:43;6306:15;;6301:2;6286:18;;6279:43;6365:14;6358:22;6353:2;6338:18;;6331:50;6147:3;6132:19;;5939:448;35104:1435:44;;;;;;:::i;:::-;;:::i;15773:199::-;;;;;;:::i;:::-;;:::i;16239:1253::-;;;;;;:::i;:::-;;:::i;32646:641::-;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;;;;;3292:42:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8982:25:124;;;9038:2;9023:18;;9016:34;;;;9069:14;9119:15;;;9099:18;;;9092:43;;;;9171:15;;9166:2;9151:18;;9144:43;9224:15;9218:3;9203:19;;9196:44;8969:3;8954:19;3292:42:44;8729:517:124;33911:1158:44;;;;;;:::i;:::-;;:::i;4345:32::-;;;;;;;;;;;;4383:31;;;;;;;;;;;;4140:33;;;;;;;;;18229:2389;;;;;;:::i;:::-;;:::i;3392:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9941:14:124;9982:15;;;9964:34;;10034:15;;;;10029:2;10014:18;;10007:43;10069:10;10115:15;;;10095:18;;;10088:43;;;;10167:15;;;10162:2;10147:18;;10140:43;10220:15;;;10214:3;10199:19;;10192:44;10273:15;;;;10267:3;10252:19;;10245:44;10320:3;10305:19;;10298:35;;;;10364:3;10349:19;;10342:35;10408:3;10393:19;;10386:35;9918:3;9903:19;3392:48:44;9572:855:124;4305:34:44;;;;;;;;;;;;4179:35;;;;;;;;;;;;36574:192;36649:7;36669:13;36690:18;36704:3;36690:13;:18::i;:::-;-1:-1:-1;;36725:10:44;;;;:5;:10;;;;;:26;36668:40;;-1:-1:-1;36725:34:44;;36668:40;;36725:34;:::i;:::-;36718:41;36574:192;-1:-1:-1;;;36574:192:44:o;16014:183::-;16096:14;;;;:9;:14;;;;;;;;16082:10;:28;16078:67;;16119:26;;;;;;;;;;;;;;16078:67;16176:14;;;;:9;:14;;;;;;;;;16155:7;:12;;;;;;:35;;;;16176:14;;;;16155:35;;;;;;16014:183::o;1936:147:22:-;875:33;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;10953:2:124;867:58:22;;;10935:21:124;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;867:58:22;;;;;;;;;2010:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;37054:239:44:-;37113:4;37137:12;;;:7;:12;;;;;:21;;;:26;;;;:89;;-1:-1:-1;37179:10:44;;;;:5;:10;;;;;:21;;;:47;37210:15;37179:47;;:21;;;;;:47;37137:89;:148;;;;-1:-1:-1;37242:10:44;;;;:5;:10;;;;;:16;;;:43;37269:15;37242:43;;:16;;:43;;37137:148;37129:157;37054:239;-1:-1:-1;;37054:239:44:o;32184:261::-;32248:7;32267:13;32283:74;32320:16;32332:3;32320:11;:16::i;:::-;32338:12;;;;:7;:12;;;;;:18;;;32283:27;32346:3;32283:22;:27::i;:::-;:36;:74;:36;:74::i;:::-;32384:12;;;;:7;:12;;;;;:21;;;32267:90;;-1:-1:-1;32376:29:44;;32375:63;;32417:12;;;;:7;:12;;;;;:21;;;32375:63;;1616:1308:33;1689:7;;1811:35;;;;1822:7;1811:35;:::i;:::-;1782:64;;2047:6;2030;:14;;;:23;;;;:::i;:::-;2029:34;;2057:6;2029:34;:::i;:::-;2012:51;;;;:14;;;:51;2251:12;;;;2236;;2251:17;;:58;;2297:6;:12;;;2251:58;;;2278:15;2251:58;2236:73;;2319:17;2354:6;:15;;;2347:23;;2339:5;:31;;;;:::i;:::-;2319:51;;2464:6;:14;;;:19;;2482:1;2464:19;;:50;;;;;2504:10;2487:27;;:6;:14;;;:27;;;2464:50;2460:89;;;2523:26;;;;;;;;;;;;;;2460:89;2606:16;2625:21;2639:6;2625:13;:21::i;:::-;2606:40;;2735:6;:14;;;:19;;2753:1;2735:19;2731:133;;2818:18;;2838:14;;;;2770:83;;;;;:47;2801:7;2770:47;;;;:83;;;;14023:42:124;14011:55;;;;13993:74;;14115:14;14103:27;14098:2;14083:18;;14076:55;13981:2;13966:18;;13806:331;2770:83:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2731:133;2909:8;1616:1308;-1:-1:-1;;;;;;1616:1308:33:o;33322:547:44:-;33384:7;33432:13;33448:16;33460:3;33448:11;:16::i;:::-;33475:24;33502:12;;;:7;:12;;;;;;;;33475:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33432:32;;-1:-1:-1;33475:39:44;33625:110;;33720:6;:15;;;33625:110;;;33685:12;;;;33662:15;;;;:43;;33699:5;33662:22;:43::i;:::-;33606:129;;33824:8;33805:6;:16;;;:27;:57;;33846:6;:16;;;33805:57;;;33835:8;33805:57;33798:64;33322:547;-1:-1:-1;;;;;33322:547:44:o;17534:161::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;10953:2:124;867:58:22;;;10935:21:124;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;867:58:22;10751:336:124;867:58:22;17663:15:44::1;:25:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;17534:161::o;14160:1571::-;14300:11;14307:3;14300:6;:11::i;:::-;14295:51;;14320:26;;;;;;;;;;;;;;14295:51;14410:13;;;;:10;:13;:::i;:::-;:18;;;;:40;;-1:-1:-1;14432:13:44;;;;;;;;:::i;:::-;:18;;;14410:40;:62;;;-1:-1:-1;14454:13:44;;;;;;;;:::i;:::-;:18;;;14410:62;14406:113;;;14493:26;;;;;;;;;;;;;;14406:113;14608:13;;;;;;;;:::i;:::-;14592:29;;:13;;;;:10;:13;:::i;:::-;:29;;;14588:68;;;14630:26;;;;;;;;;;;;;;14588:68;14667:25;14695:13;;;:8;:13;;;;;;;;14792:20;;14695:13;;14792:20;;;;;;;14776:13;;;;;;:::i;:::-;:36;;;14772:75;;;14821:26;;;;;;;;;;;;;;14772:75;14942:20;;;;;;;14926:13;;;;;;;;:::i;:::-;:36;;;14922:75;;;14971:26;;;;;;;;;;;;;;14922:75;15053:24;15080:12;;;:7;:12;;;;;;;;;15053:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15106:10;:26;15102:67;;15141:28;;;;;;;;;;;;;;15102:67;15228:13;;;;:10;:13;:::i;:::-;15208:33;;;;;;;;;;;;;;;;15279:130;15323:13;;;;;;:::i;:::-;15359:10;;;;:5;:10;;;;;:21;;;15315:22;;;;;;15351:48;;15384:15;;15359:21;;;;;15351:48;:::i;:::-;15279:15;;;;;:130;:22;:130::i;:::-;15251:25;;;:158;;;15509:15;;;;:43;:117;;15625:1;15509:117;;;15585:4;:25;;;15567:6;:15;;;:43;;;;:::i;:::-;15484:22;;;:142;15663:13;;;;;;;;:::i;:::-;15636:40;;;;;;;;;;;;;;;;15711:13;;;;;;;;:::i;:::-;15686:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;14160:1571:44:o;1496:434:22:-;1767:5;;;;1753:10;:19;;:76;;-1:-1:-1;1776:9:22;;:53;;;;;1794:10;1776:53;;;15061:34:124;1814:4:22;15111:18:124;;;15104:43;1776:9:22;1821:7;;;15163:18:124;;;15156:107;1776:9:22;;;;;:17;;14973:18:124;;1776:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;;;;;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:22;1496:434;:::o;36808:204:44:-;36865:4;36899:10;;;:5;:10;;;;;:18;;;;;;;;4586:13;36935:25;;;36934:71;;36990:15;36979:7;:26;;36934:71;;;36964:12;;36927:78;-1:-1:-1;;36808:204:44:o;31594:555::-;31701:13;31921:12;;;:7;:12;;;;;;;;31894:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32086:10;;;;;;;;;;:18;;;;31701:13;;;;;;;;;;31894:39;;;;;32086:18;;;;;32118:14;31921:12;32118:9;:14::i;:::-;31943:199;;;;-1:-1:-1;31943:199:44;;-1:-1:-1;31943:199:44;-1:-1:-1;31943:199:44;-1:-1:-1;31943:199:44;;-1:-1:-1;31594:555:44;-1:-1:-1;;;31594:555:44:o;17974:163::-;18054:12;;;;:7;:12;;;;;:18;;;18040:10;:32;18036:73;;18081:28;;;;;;;;;;;;;;18036:73;18119:11;18126:3;18119:6;:11::i;:::-;17974:163;:::o;17737:195::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;10953:2:124;867:58:22;;;10935:21:124;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;867:58:22;10751:336:124;867:58:22;17887:28:44::1;::::0;;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:38;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;17737:195::o;35104:1435::-;35168:7;35309:10;;;:5;:10;;;;;:16;;;35209:15;;35309:16;;35287:39;;35283:74;;;-1:-1:-1;;35335:12:44;;;;:7;:12;;;;;:22;;;;35104:1435::o;35283:74::-;35368:24;35395:13;;;:8;:13;;;;;;;;;35368:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35718:23;;;35714:819;;;35967:22;;;;35834:23;;;;35908:168;;35959:46;;35834:23;;35959:31;;:46;:::i;:::-;36035:22;;;;35908:12;;;;:7;:12;;;;;:22;;;;:168;36027:31;;;;;35908:29;:168;:::i;35714:819::-;36273:22;;;;36184:23;;;;36258:37;;;;:264;;36342:180;36431:12;36405:4;:22;;;36397:31;;:46;;;;:::i;36342:180::-;36258:264;;;36318:1;36235:287;35104:1435;-1:-1:-1;;;;;;35104:1435:44:o;15773:199::-;15874:12;;;;:7;:12;;;;;:18;;;15860:10;:32;15856:73;;15901:28;;;;;;;;;;;;;;15856:73;15939:14;;;;:9;:14;;;;;;:26;;;;;;;;;;;;;;15773:199::o;16239:1253::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;10953:2:124;867:58:22;;;10935:21:124;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;867:58:22;10751:336:124;867:58:22;16489:12:44::1;::::0;::::1;::::0;16474;;:27:::1;::::0;;::::1;::::0;::::1;;16470:66;;;16510:26;;;;;;;;;;;;;;16470:66;16630:12:::0;;::::1;::::0;16615;;:27:::1;::::0;;::::1;::::0;::::1;;16611:66;;;16651:26;;;;;;;;;;;;;;16611:66;16769:12:::0;;::::1;::::0;16754;;::::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;;16750:66;;;16790:26;;;;;;;;;;;;;;16750:66;16915:12:::0;;::::1;::::0;:16:::1;::::0;16930:1:::1;16915:16;:::i;:::-;16900:31;;:9:::0;16910:1:::1;16900:12;;;;:31;;;16896:70;;;16940:26;;;;;;;;;;;;;;16896:70;17026:9:::0;17036:1:::1;17026:12;;;::::0;17004:19:::1;:34:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;17072:9;-1:-1:-1;17072:12:44::1;;;::::0;17048:21:::1;:36:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17117:9;17127:1:::1;17117:12;;;::::0;17094:20:::1;:35:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17160:9;17170:1:::1;17160:12;;;::::0;17139:18:::1;:33:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17202:9;17212:1:::1;17202:12;;;::::0;17182:17:::1;:32:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17240:9;17250:1:::1;17240:12;::::0;;::::1;::::0;;;::::1;::::0;17224:13:::1;:28:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;17268:217:::1;::::0;;17297:19;;;;;;;;;;16228:34:124;;17330:21:44;;::::1;::::0;::::1;16278:18:124::0;;;16271:43;;;;17365:20:44;;::::1;::::0;::::1;16330:18:124::0;;;16323:43;17399:18:44;;::::1;::::0;::::1;16397:2:124::0;16382:18;;16375:43;17431:17:44;;::::1;::::0;::::1;16449:3:124::0;16434:19;;16427:44;17462:13:44;;::::1;;16502:3:124::0;16487:19;;16480:44;17268:217:44::1;::::0;16186:3:124;16171:19;17268:217:44::1;;;;;;;16239:1253:::0;:::o;32646:641::-;32885:25;;;;;:14;1312:55:124;;;32885:25:44;;;1294:74:124;-1:-1:-1;;;;32870:46:44;;32885:7;:14;;;;;;1267:18:124;;32885:25:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32870:7;;:46;;32912:3;32870:14;:46::i;:::-;32926:14;32966:12;;;:7;:12;;;;;:18;;;32856:60;;-1:-1:-1;32926:14:44;32943:60;;32986:16;32974:3;32986:11;:16::i;:::-;32944:13;32954:3;32944:7;:13;:::i;:::-;32943:22;:60;:22;:60::i;:::-;32926:77;;33159:14;33169:3;33159:9;:14::i;:::-;33150:6;:23;33146:135;;;33196:30;;;;;;;;;;;;;;33146:135;33264:6;-1:-1:-1;33257:13:44;;-1:-1:-1;33257:13:44;33911:1158;33993:7;34213:12;;;:7;:12;;;;;;;;34186:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33993:7;34251:16;34213:12;34251:11;:16::i;:::-;34235:32;;34277:21;34301:6;:22;;;:110;;34398:12;;;;34368:15;;;;:43;;34391:5;;34368:22;:43::i;:::-;34301:110;;;34338:6;:15;;;34301:110;34277:134;;34421:16;34440:44;34464:5;34471:6;:12;;;34440:6;:16;;;:23;;:44;;;;;:::i;:::-;34421:63;;34494:22;34535:8;34519:13;:24;:51;;34562:8;34519:51;;;34546:13;34519:51;34984:25;;;;;:14;1312:55:124;;;34984:25:44;;;1294:74:124;34494:76:44;;-1:-1:-1;;;34962:53:44;;34984:7;:14;;;;;;1267:18:124;;34984:25:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34962:14;;:53;;35011:3;34962:21;:53::i;:::-;34939:76;-1:-1:-1;35033:29:44;34939:76;35033:14;:29;:::i;:::-;35026:36;33911:1158;-1:-1:-1;;;;;;;;;33911:1158:44:o;18229:2389::-;18361:14;18391:10;:30;18413:7;18391:30;;18387:69;;18430:26;;;;;;;;;;;;;;18387:69;18467:25;18495:12;;;:7;:12;;;;;;;;18541:5;:10;;;;;;;18517:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18650:19;;;;18495:12;;18517:34;18650:33;:19;:33;;;;:70;;-1:-1:-1;18707:12:44;;;;18688:32;;;;:18;:32;;;;;;;;18687:33;18650:70;18646:121;;;18741:26;;;;;;;;;;;;;;18646:121;18833:11;18840:3;18833:6;:11::i;:::-;18828:53;;18853:28;;;;;;;;;;;;;;18828:53;18892:13;18933:56;18951:3;18956:7;18972:15;18933:17;:56::i;:::-;18915:74;-1:-1:-1;18915:74:44;-1:-1:-1;19114:22:44;;;19110:69;;;19145:34;;;;;;;;;;;;;;19110:69;19356:6;:16;;;19347:6;:25;19343:68;;;19381:30;;;;;;;;;;;;;;19343:68;19787:22;;;;;;;;;:77;;19849:6;:15;;;19840:6;:24;19787:77;;;19822:6;:15;;;19812:7;:25;19787:77;19783:132;;;19885:30;;;;;;;;;;;;;;19783:132;20009:22;;;;;;;;;:41;;20044:6;20009:41;;;20034:7;20009:41;19990:6;:15;;;:60;;;;;;;:::i;:::-;;;;;;;;20210:7;20190:6;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;20242:6;20227;:11;;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;20352:16:44;;;;20337:12;;;;:31;20333:279;;;20384:11;20391:3;20384:6;:11::i;:::-;20333:279;;;20559:42;20565:3;20577:15;20595:5;20559;:42::i;:::-;18377:2241;;;18229:2389;;;;;:::o;30947:548::-;31043:13;31164:16;;;:11;:16;;;;;;;;31139:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31043:13;;;;31190:38;;31216:1;31219;31222:5;31208:20;;;;;;;;;31190:38;31280:19;;;;31254:45;;31261:15;31254:45;:::i;:::-;31239:60;;31333:4;:19;;;31318:34;;:12;:34;;;31309:43;;31370:6;:118;;31477:11;;31370:118;;;31441:19;;;;31391:11;;:71;;31410:21;;;;;31433:28;31391:18;:71::i;:::-;31362:126;;31129:366;30947:548;;;;;;:::o;950:540:22:-;1070:9;;1037:4;;1070:9;;1388:27;;;;;:77;;-1:-1:-1;1419:46:22;;;;;:12;15079:15:124;;;1419:46:22;;;15061:34:124;1446:4:22;15111:18:124;;;15104:43;15195:66;15183:79;;15163:18;;;15156:107;1419:12:22;;;;;14973:18:124;;1419:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:22;;;1470:13;;;1478:5;;1470:13;1387:96;1380:103;950:540;-1:-1:-1;;;;950:540:22:o;5171:353:62:-;5285:14;5320:25;5327:1;5330;5333:11;5320:6;:25::i;:::-;5311:34;;5411:1;5396:11;5383:25;;;;;:::i;:::-;5393:1;5390;5383:25;:29;5379:129;;;5449:17;5440:6;:26;5432:35;;;;;;5485:8;;5171:353;;;;;:::o;5684:8434:44:-;5871:15;;5754:7;;5871:15;;5866:62;;5895:33;;;;;;;;;;;;;;5866:62;5986:25;6014:7;:19;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5986:58;;6058:24;6085:7;:18;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6058:56;;6155:1;6133:19;:23;;;:51;;;;6182:2;6160:19;:24;;;6133:51;6129:106;;;6209:26;;;;;;;;;;;;;;6129:106;6274:1;6253:18;:22;;;:49;;;;6300:2;6279:18;:23;;;6253:49;6249:104;;;6327:26;;;;;;;;;;;;;;6249:104;6397:3;6371:7;:23;;;:29;;;:61;;;;6430:2;6404:7;:23;;;:28;;;6371:61;6367:116;;;6457:26;;;;;;;;;;;;;;6367:116;6591:10;6572:30;;;;:18;:30;;;;;;;;6571:31;:69;;;;-1:-1:-1;6606:20:44;;;;:34;;;;6571:69;6567:124;;;6665:26;;;;;;;;;;;;;;6567:124;6782:1;6766:7;:13;;;:17;;;:52;;;;;6803:15;6787:7;:13;;;:31;;;6766:52;6762:107;;;6843:26;;;;;;;;;;;;;;6762:107;5773:1107;;7231:13;7301:7;:23;;;7296:2;:28;7286:39;;:2;:39;7278:47;;7382:7;:29;;;7350:7;:29;;;:61;7346:122;;;7432:36;;;;;;;;;;;;;;7346:122;7587:19;;7608:18;;;;7560:67;;;;;:26;17580:15:124;;;7560:67:44;;;17562:34:124;17632:15;;;17612:18;;;17605:43;7541:16:44;;7560:11;:26;;;;17474:18:124;;7560:67:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7759:17;;7740:16;;;;7541:86;;-1:-1:-1;7638:24:44;;7759:17;;;;;;;7740:36;;;;:100;;-1:-1:-1;7822:18:44;;7796:23;;;;7822:18;;;;;;;7796:44;;;7740:100;:162;;;;7886:7;:16;;;7860:42;;:7;:23;;;:42;;;7740:162;7719:231;;;7924:26;;;;;;;;;;;;;;7719:231;8521:20;8544:7;:23;;;8570:1;8544:27;;;;:::i;:::-;8605:20;;8521:50;;-1:-1:-1;8605:36:44;;;;:20;;;;;:36;:107;;8699:13;8605:107;;;8660:20;;;;;;;8605:107;8854:19;;8828:23;;;;8585:127;;-1:-1:-1;8727:28:44;;8758:286;;8854:19;;;;8828:45;;;:141;;8950:19;;;;8828:141;;;8900:7;:23;;;8828:141;8799:188;;9013:7;:16;;;9005:25;;8758:7;:16;;;:23;;:286;;;;;:::i;:::-;8727:317;;9059:12;9074:7;:13;;;:18;;9091:1;9074:18;:60;;9121:7;:13;;;9074:60;;;9102:15;9074:60;9169:856;;;;;;;;;;;;;;;;;;9284:23;;;;;9169:856;;;;;;;;;;;9365:19;;9339:23;;9059:75;;-1:-1:-1;9169:856:44;;;;;;9365:19;;;9339:45;;;:133;;9453:19;;;;9339:133;;;9407:7;:23;;;9339:133;9169:856;;;;;;9511:21;;;;;;;9169:856;;;;;;;;;;;;;;;;;9683:16;;;;9169:856;;;9683:39;;9626:20;;9683:39;:::i;:::-;9169:856;;;;9754:256;9964:17;9956:26;;9992:7;:16;;;9984:25;;9776:7;:23;;;:154;;9914:7;:16;;;9776:154;;;9857:29;;;;9826:16;;;;:61;;9850:5;;9826:23;:61::i;9754:256::-;9169:856;;9148:18;;;;:8;:18;;;;;;;;:877;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9148:877:44;;;;;;;;;;;;;;;;;;;;;10695:23;;;;9148:18;;-1:-1:-1;9148:18:44;;-1:-1:-1;9148:18:44;;-1:-1:-1;10695:138:44;;10817:7;:16;;;10695:138;;;10768:29;;;;10737:16;;;;:61;;10761:5;;10737:23;:61::i;:::-;10676:157;;10861:70;10885:17;10877:26;;10913:7;:16;;;10905:25;;10861:8;:15;;:70;;;;;:::i;:::-;10848:83;;11386:122;11427:7;:23;;;11419:32;;11477:7;:16;;;11469:25;;11386:8;:15;;:122;;;;;:::i;:::-;11373:135;;10662:857;11549:481;;;;;;;;11581:10;11549:481;;;;;;11618:7;:19;;;11549:481;;;;;;11663:7;:18;;;11549:481;;;;;;11709:7;:20;;;11549:481;;;;;;11760:7;:23;;;11549:481;;;;;;11807:7;:16;;;11549:481;;;;11848:10;11549:481;;;;11882:7;:29;;;11549:481;;;;11936:10;11549:481;;;;11992:1;11549:481;;;;11971:1;11549:481;;;;12014:5;11549:481;;;11529:7;:17;11537:8;11529:17;;;;;;;;;;;:501;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12659:22;12730:13;;;;;;;;;;;12684:59;;:43;4645:3;12684:43;;12716:10;12684;:17;;:43;;;;;:::i;:::-;:59;:145;;12816:13;;;;;;;12684:145;;;12758:43;:10;4645:3;12790:10;12758:17;:43::i;:::-;12659:170;;12839:15;12882:152;12946:14;12925:7;:18;;;:35;;;:73;;12984:14;12925:73;;;12963:7;:18;;;12925:73;;;12882:10;;13017:3;12882:17;:152::i;:::-;12857:177;;:10;:177;:::i;:::-;13482:29;;;;12839:195;;-1:-1:-1;13456:23:44;;13482:55;;13519:5;13526:10;13482:36;:55::i;:::-;13456:81;;13547:12;13562:7;:13;;;:18;;13579:1;13562:18;:60;;13609:7;:13;;;13562:60;;;13590:15;13562:60;13547:75;;13650:219;;;;;;;;13691:15;13650:219;;;;13729:7;13650:219;;;;13757:5;13650:219;;;;;;13803:7;:16;;;13796:24;;13788:5;:32;;;;:::i;:::-;13650:219;;;;;;13843:15;;;;;13650:219;;;;;;;-1:-1:-1;13632:15:44;;;:5;:15;;;;;;;:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13984:18;;;;13942:19;;14017:15;;14046:29;;;;13885:200;;;;;;;;;;;13638:8;;13885:200;;;;14017:15;;18050:14:124;18038:27;;;;18020:46;;18097:2;18082:18;;18075:34;18008:2;17993:18;;17848:267;13885:200:44;;;;;;;;-1:-1:-1;14103:8:44;;5684:8434;-1:-1:-1;;;;;;;;;5684:8434:44:o;742:4147:62:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:62;;;;-1:-1:-1;1787:13:62;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;3784:1;2787;2753:31;;:35;;2752:51;;2909:22;;;;3765:1;:15;;3764:21;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;;;2737:12;3321;;;3317:23;;;3313:31;;;2490:20;;;2479:32;;;3380:12;;;;2537:21;;3053:16;;;;3371:21;;;;4834:11;;;-1:-1:-1;;;;742:4147:62:o;20812:170:44:-;20860:10;;;;:5;:10;;;;;;;;:21;;;;:47;;;;;20891:15;20860:47;;;;;;20917:12;;;;;;:21;;:25;;;20958:17;20860:10;;20958:17;;;20812:170;:::o;21447:3721::-;21566:20;21642:12;;;:7;:12;;;;;;;;21615:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21566:20;;;22246:16;21642:12;22246:11;:16::i;:::-;22272:12;;;;:7;:12;;;;;;;;:22;;;;:36;;;22526:16;;;;;:23;;;22272:36;;-1:-1:-1;22526:23:44;;;;;22522:514;;;22565:29;22597:16;;;:11;:16;;;;;;22565:29;;22688:18;22609:3;22688:13;:18::i;:::-;22720:10;;;;:5;:10;;;;;:38;;22628:78;;-1:-1:-1;22628:78:44;;-1:-1:-1;22628:78:44;;-1:-1:-1;22628:78:44;;22720:38;;22628:78;;22720:38;:::i;:::-;;;;-1:-1:-1;;22773:253:44;;;;22829:8;22808:10;:17;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;22855:25:44;;;:41;;22884:12;;22855:25;;;:41;;22884:12;;22855:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;22942:5;22914:10;:25;;;:33;;;;;;;;;;;;;;;;;;22773:253;;;22986:17;;;:25;;;;;;22773:253;22551:485;;;;22522:514;23128:24;23148:3;23128:19;:24::i;:::-;23181:15;;;;23113:39;;-1:-1:-1;23210:23:44;;;23206:52;;;23250:8;23235:23;;23206:52;23541:12;;;;23526:42;;:7;;23555:12;23526:14;:42::i;:::-;23624:25;23660:13;;;:8;:13;;;;;:31;;23725:26;;;;;23516:52;;-1:-1:-1;23660:31:44;;;;;;;;23725:26;23789:23;;;;;;;23624:25;23934:49;;23660:31;;23516:52;;23725:26;;23934;:49;:::i;:::-;23993:13;;;;:8;:13;;;;;:53;;23905:78;;-1:-1:-1;23905:78:44;;23993:23;;:53;;23905:78;;23993:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;24703:19;24733:9;24725:5;:17;;;:243;;24950:17;;;;:9;:17;:::i;:::-;24929:39;;:17;:39;:::i;:::-;24725:243;;;24796:17;24804:9;24796:17;;;;:::i;:::-;24775;:39;:125;;24899:1;24775:125;;;24858:17;24866:9;24858:17;;;;:::i;:::-;24837:39;;:17;:39;:::i;:::-;24703:265;-1:-1:-1;25101:7:44;25015:71;25034:17;25053:32;25067:18;24703:265;25053:32;:::i;:::-;25015:11;;:71;:18;:71::i;:::-;:93;;;;:::i;:::-;:109;;25123:1;25015:109;:::i;:::-;24978:12;;;;:7;:12;;;;;;:22;;:146;;;;-1:-1:-1;21447:3721:44;;;;-1:-1:-1;21447:3721:44;;-1:-1:-1;;;;;;;;21447:3721:44:o;25422:4517::-;25529:24;25556:8;:13;25565:3;25556:13;;;;;;;;;;;25529:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25579:24;25606:7;:12;25614:3;25606:12;;;;;;;;;;;25579:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25628:21;25652:5;:10;25658:3;25652:10;;;;;;;;;;;25628:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26394:21;26444:5;26426:4;:15;;;:23;;;;:::i;:::-;26418:32;;26394:56;;26460:16;26505:4;:10;;;26487:4;:15;;;:28;;;;:::i;:::-;26479:37;;26460:56;;26587:16;26606:6;:22;;;:111;;26702:6;:15;;;26606:111;;;26666:12;;;;26643:15;;;;:44;;26680:6;26643:22;:44::i;:::-;26587:130;;26836:23;26886:6;:22;;;:84;;26959:6;:11;;;26886:84;;;26935:12;;;;26911:16;;;;:45;;26949:6;26911:23;:45::i;:::-;26862:109;;:8;:109;:::i;:::-;26836:135;-1:-1:-1;27229:27:44;27332:8;27259:58;27282:24;27293:13;27282:8;:24;:::i;:::-;27259:15;;27308:8;27259:22;:58::i;:::-;:81;;;;:::i;:::-;27229:111;;27387:4;:22;;;27369:6;:15;;;:40;:81;;;;;27435:15;27413:19;:37;27369:81;27368:184;;;-1:-1:-1;27493:17:44;;;;27477:13;;:33;;;;;;:::i;:::-;27468:42;;:5;:42;;;;:83;;;;;27536:15;27514:19;:37;27468:83;27351:2582;;;27956:61;27980:4;:20;;;27972:29;;28003:13;27956:8;:15;;:61;;;;;:::i;:::-;27931:12;;;;:7;:12;;;;;:22;;:86;;;;28637:22;;;;28585:115;;:19;;28629:31;;;;;28678:8;;28585:26;:115;:::i;:::-;28564:136;;28781:26;28810:41;28826:6;:12;;;28840:10;28810:6;:15;;:41;;;;;:::i;:::-;28882:20;;28871:52;;;18294:25:124;;;18350:2;18335:18;;18328:34;;;28781:70:44;;-1:-1:-1;28877:3:44;;28871:52;;18267:18:124;28871:52:44;;;;;;;28963:20;;28942:41;;28938:714;;;29186:190;;;;;;;;29241:18;29218:4;:20;;;:41;;;;:::i;:::-;29186:190;;;;29281:5;29186:190;;;;;;29308:4;:24;;;29186:190;;;;;;;;29354:4;29186:190;;;;;29167:11;:16;29179:3;29167:16;;;;;;;;;;;:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28938:714;;;29454:10;;;;:5;:10;;;;;;;;:47;;;29606:11;:16;;;;;:23;;:31;;;;;;28938:714;29666:13;;;;:8;:13;;;;;:30;;;;;;;;;;29762:25;;;;29744:15;;;;:43;:125;;29868:1;29744:125;;;29824:4;:25;;;29806:6;:15;;;:43;;;;:::i;:::-;29710:13;;;;:8;:13;;;;;:31;;;:159;;;;29883:26;;:39;;;;-1:-1:-1;27351:2582:44;25519:4420;;;;;;;;25422:4517;;;:::o;30408:214::-;30473:7;30519:12;;;:7;:12;;;;;;;;30492:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30548:10;;;;;;;;;;:26;30492:39;;30548:67;;:26;30492:39;30548:35;:67::i;14:180:124:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:124;;14:180;-1:-1:-1;14:180:124:o;381:154::-;467:42;460:5;456:54;449:5;446:65;436:93;;525:1;522;515:12;540:134;608:20;;637:31;608:20;637:31;:::i;:::-;540:134;;;:::o;679:247::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;846:9;833:23;865:31;890:5;865:31;:::i;1379:591::-;1449:6;1457;1510:2;1498:9;1489:7;1485:23;1481:32;1478:52;;;1526:1;1523;1516:12;1478:52;1566:9;1553:23;1595:18;1636:2;1628:6;1625:14;1622:34;;;1652:1;1649;1642:12;1622:34;1690:6;1679:9;1675:22;1665:32;;1735:7;1728:4;1724:2;1720:13;1716:27;1706:55;;1757:1;1754;1747:12;1706:55;1797:2;1784:16;1823:2;1815:6;1812:14;1809:34;;;1839:1;1836;1829:12;1809:34;1884:7;1879:2;1870:6;1866:2;1862:15;1858:24;1855:37;1852:57;;;1905:1;1902;1895:12;1852:57;1936:2;1928:11;;;;;1958:6;;-1:-1:-1;1379:591:124;;-1:-1:-1;;;;1379:591:124:o;1975:118::-;2061:5;2054:13;2047:21;2040:5;2037:32;2027:60;;2083:1;2080;2073:12;2098:128;2163:20;;2192:28;2163:20;2192:28;:::i;2231:241::-;2287:6;2340:2;2328:9;2319:7;2315:23;2311:32;2308:52;;;2356:1;2353;2346:12;2308:52;2395:9;2382:23;2414:28;2436:5;2414:28;:::i;2708:320::-;2800:6;2808;2861:3;2849:9;2840:7;2836:23;2832:33;2829:53;;;2878:1;2875;2868:12;2829:53;2914:9;2901:23;2891:33;;2960:7;2954:3;2943:9;2939:19;2936:32;2933:52;;;2981:1;2978;2971:12;2933:52;-1:-1:-1;2708:320:124;3019:2;3004:18;;;;;-1:-1:-1;2708:320:124:o;5552:382::-;5617:6;5625;5678:2;5666:9;5657:7;5653:23;5649:32;5646:52;;;5694:1;5691;5684:12;5646:52;5733:9;5720:23;5752:31;5777:5;5752:31;:::i;:::-;5802:5;-1:-1:-1;5859:2:124;5844:18;;5831:32;5872:30;5831:32;5872:30;:::i;:::-;5921:7;5911:17;;;5552:382;;;;;:::o;6392:315::-;6460:6;6468;6521:2;6509:9;6500:7;6496:23;6492:32;6489:52;;;6537:1;6534;6527:12;6489:52;6573:9;6560:23;6550:33;;6633:2;6622:9;6618:18;6605:32;6646:31;6671:5;6646:31;:::i;6712:184::-;6764:77;6761:1;6754:88;6861:4;6858:1;6851:15;6885:4;6882:1;6875:15;6901:247;6968:2;6962:9;7010:3;6998:16;;7044:18;7029:34;;7065:22;;;7026:62;7023:88;;;7091:18;;:::i;:::-;7127:2;7120:22;6901:247;:::o;7153:163::-;7220:20;;7280:10;7269:22;;7259:33;;7249:61;;7306:1;7303;7296:12;7321:765;7402:6;7455:3;7443:9;7434:7;7430:23;7426:33;7423:53;;;7472:1;7469;7462:12;7423:53;7521:7;7514:4;7503:9;7499:20;7495:34;7485:62;;7543:1;7540;7533:12;7485:62;7576:2;7570:9;7618:3;7610:6;7606:16;7688:6;7676:10;7673:22;7652:18;7640:10;7637:34;7634:62;7631:88;;;7699:18;;:::i;:::-;7735:2;7728:22;7770:6;7814:3;7799:19;;7830;;;7827:39;;;7862:1;7859;7852:12;7827:39;7886:9;7904:151;7920:6;7915:3;7912:15;7904:151;;;7988:22;8006:3;7988:22;:::i;:::-;7976:35;;8040:4;8031:14;;;;7937;7904:151;;;-1:-1:-1;8074:6:124;;7321:765;-1:-1:-1;;;;;7321:765:124:o;8091:383::-;8168:6;8176;8184;8237:2;8225:9;8216:7;8212:23;8208:32;8205:52;;;8253:1;8250;8243:12;8205:52;8289:9;8276:23;8266:33;;8346:2;8335:9;8331:18;8318:32;8308:42;;8400:2;8389:9;8385:18;8372:32;8413:31;8438:5;8413:31;:::i;:::-;8463:5;8453:15;;;8091:383;;;;;:::o;9251:316::-;9328:6;9336;9344;9397:2;9385:9;9376:7;9372:23;9368:32;9365:52;;;9413:1;9410;9403:12;9365:52;-1:-1:-1;;9436:23:124;;;9506:2;9491:18;;9478:32;;-1:-1:-1;9557:2:124;9542:18;;;9529:32;;9251:316;-1:-1:-1;9251:316:124:o;10432:184::-;10484:77;10481:1;10474:88;10581:4;10578:1;10571:15;10605:4;10602:1;10595:15;10621:125;10661:4;10689:1;10686;10683:8;10680:34;;;10694:18;;:::i;:::-;-1:-1:-1;10731:9:124;;10621:125::o;11092:::-;11177:14;11170:5;11166:26;11159:5;11156:37;11146:65;;11207:1;11204;11197:12;11222:132;11289:20;;11318:30;11289:20;11318:30;:::i;11359:159::-;11424:20;;11395:5;11473:20;;;11463:31;;11453:59;;11508:1;11505;11498:12;11523:1227;11613:6;11666:3;11654:9;11645:7;11641:23;11637:33;11634:53;;;11683:1;11680;11673:12;11634:53;11709:17;;:::i;:::-;11749:29;11768:9;11749:29;:::i;:::-;11742:5;11735:44;11811:38;11845:2;11834:9;11830:18;11811:38;:::i;:::-;11806:2;11799:5;11795:14;11788:62;11882:38;11916:2;11905:9;11901:18;11882:38;:::i;:::-;11877:2;11870:5;11866:14;11859:62;11953:35;11984:2;11973:9;11969:18;11953:35;:::i;:::-;11948:2;11941:5;11937:14;11930:59;12050:3;12039:9;12035:19;12022:33;12016:3;12009:5;12005:15;11998:58;12117:3;12106:9;12102:19;12089:33;12083:3;12076:5;12072:15;12065:58;12184:3;12173:9;12169:19;12156:33;12150:3;12143:5;12139:15;12132:58;12223:38;12256:3;12245:9;12241:19;12223:38;:::i;:::-;12217:3;12210:5;12206:15;12199:63;12281:3;12316:37;12349:2;12338:9;12334:18;12316:37;:::i;:::-;12300:14;;;12293:61;12373:3;12408:37;12426:18;;;12408:37;:::i;:::-;12392:14;;;12385:61;12465:3;12500:37;12518:18;;;12500:37;:::i;:::-;12484:14;;;12477:61;12557:3;12592:37;12610:18;;;12592:37;:::i;:::-;12576:14;;;12569:61;12649:3;12684:35;12700:18;;;12684:35;:::i;:::-;12668:14;;;12661:59;12672:5;11523:1227;-1:-1:-1;;;11523:1227:124:o;12755:184::-;12807:77;12804:1;12797:88;12904:4;12901:1;12894:15;12928:4;12925:1;12918:15;12944:349;12983:1;13009:14;13050:2;13047:1;13043:10;13072:3;13062:191;;13109:77;13106:1;13099:88;13210:4;13207:1;13200:15;13238:4;13235:1;13228:15;13062:191;13271:10;;13267:20;;;;;12944:349;-1:-1:-1;;12944:349:124:o;13298:266::-;13337:7;13369:14;13410:2;13407:1;13403:10;13440:2;13437:1;13433:10;13496:3;13492:2;13488:12;13483:3;13480:21;13473:3;13466:11;13459:19;13455:47;13452:73;;;13505:18;;:::i;:::-;13545:13;;13298:266;-1:-1:-1;;;;13298:266:124:o;13569:232::-;13608:3;13636:14;13677:2;13674:1;13670:10;13707:2;13704:1;13700:10;13738:3;13734:2;13730:12;13725:3;13722:21;13719:47;;;13746:18;;:::i;:::-;13782:13;;13569:232;-1:-1:-1;;;;13569:232:124:o;14142:275::-;14236:6;14289:2;14277:9;14268:7;14264:23;14260:32;14257:52;;;14305:1;14302;14295:12;14257:52;14337:9;14331:16;14356:31;14381:5;14356:31;:::i;14611:184::-;14669:6;14722:2;14710:9;14701:7;14697:23;14693:32;14690:52;;;14738:1;14735;14728:12;14690:52;14761:28;14779:9;14761:28;:::i;15274:245::-;15341:6;15394:2;15382:9;15373:7;15369:23;15365:32;15362:52;;;15410:1;15407;15400:12;15362:52;15442:9;15436:16;15461:28;15483:5;15461:28;:::i;15524:128::-;15564:3;15595:1;15591:6;15588:1;15585:13;15582:39;;;15601:18;;:::i;:::-;-1:-1:-1;15637:9:124;;15524:128::o;15657:262::-;15696:7;15728:10;15765:2;15762:1;15758:10;15795:2;15792:1;15788:10;15851:3;15847:2;15843:12;15838:3;15835:21;15828:3;15821:11;15814:19;15810:47;15807:73;;;15860:18;;:::i;16535:249::-;16604:6;16657:2;16645:9;16636:7;16632:23;16628:32;16625:52;;;16673:1;16670;16663:12;16625:52;16705:9;16699:16;16724:30;16748:5;16724:30;:::i;16789:225::-;16828:4;16857:14;16921:10;;;;16891;;16943:12;;;16940:38;;;16958:18;;:::i;:::-;16995:13;;16789:225;-1:-1:-1;;;16789:225:124:o;17019:273::-;17087:6;17140:2;17128:9;17119:7;17115:23;17111:32;17108:52;;;17156:1;17153;17146:12;17108:52;17188:9;17182:16;17238:4;17231:5;17227:16;17220:5;17217:27;17207:55;;17258:1;17255;17248:12;17659:184;17729:6;17782:2;17770:9;17761:7;17757:23;17753:32;17750:52;;;17798:1;17795;17788:12;17750:52;-1:-1:-1;17821:16:124;;17659:184;-1:-1:-1;17659:184:124:o",
    "linkReferences": {},
    "immutableReferences": {
      "39680": [
        {
          "start": 867,
          "length": 32
        },
        {
          "start": 11492,
          "length": 32
        }
      ],
      "39683": [
        {
          "start": 1342,
          "length": 32
        },
        {
          "start": 3686,
          "length": 32
        },
        {
          "start": 8309,
          "length": 32
        },
        {
          "start": 8957,
          "length": 32
        },
        {
          "start": 9136,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "adjustments(uint256)": "bc3b2b12",
    "allowNewMarkets()": "afa9d3b0",
    "authority()": "bf7e214f",
    "callbackAuthorized(address)": "5dc4d16b",
    "closeMarket(uint256)": "ae418095",
    "createMarket(bytes)": "53c7f8e0",
    "currentCapacity(uint256)": "1c063a6c",
    "currentControlVariable(uint256)": "0a9d85eb",
    "currentDebt(uint256)": "bcb29667",
    "defaultTuneAdjustment()": "ea0aca33",
    "defaultTuneInterval()": "d9ccdc93",
    "getAggregator()": "3ad59dbc",
    "getMarketInfoForPurchase(uint256)": "acc5570c",
    "getTeller()": "9787d107",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "markets(uint256)": "b1283e77",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "maxPayout(uint256)": "57e333ba",
    "metadata(uint256)": "e3684e39",
    "minDebtBuffer()": "8973082c",
    "minDebtDecayInterval()": "e9220673",
    "minDepositInterval()": "d2040687",
    "minMarketDuration()": "d2bee323",
    "newOwners(uint256)": "6729a41e",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "pullOwnership(uint256)": "10b05317",
    "purchaseBond(uint256,uint256,uint256)": "e007fa97",
    "pushOwnership(uint256,address)": "bcf6cde8",
    "setAllowNewMarkets(bool)": "5f77274e",
    "setAuthority(address)": "7a9e5e4b",
    "setCallbackAuthStatus(address,bool)": "bbbdd95a",
    "setDefaults(uint32[6])": "bd1f3a5e",
    "setIntervals(uint256,uint32[3])": "699e17d9",
    "setOwner(address)": "13af4035",
    "terms(uint256)": "c0aa0e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"teller_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auctioneer_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_BadExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InitialPriceLessThanMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MarketNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MaxPayoutExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NewMarketsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotEnoughCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OnlyMarketOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"defaultTuneInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"defaultTuneAdjustment\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDebtDecayInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDepositInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minMarketDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDebtBuffer\",\"type\":\"uint32\"}],\"name\":\"DefaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldControlVariable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newControlVariable\",\"type\":\"uint256\"}],\"name\":\"Tuned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adjustments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"change\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"lastAdjustment\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timeToAdjusted\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowNewMarkets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callbackAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentControlVariable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTuneAdjustment\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTuneInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAggregator\",\"outputs\":[{\"internalType\":\"contract IBondAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getMarketInfoForPurchase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scale\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"maxPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"lastTune\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastDecay\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"depositInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"tuneInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"tuneAdjustmentDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"debtDecayInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"tuneIntervalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tuneBelowCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTuneDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDebtBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDebtDecayInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchaseBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setAllowNewMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setCallbackAuthStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[6]\",\"name\":\"defaults_\",\"type\":\"uint32[6]\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint32[3]\",\"name\":\"intervals_\",\"type\":\"uint32[3]\"}],\"name\":\"setIntervals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"controlVariable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Fixed-Expiry Auctioneer is an implementation of the      Bond Base Sequential Dutch Auctioneer contract specific to creating bond markets where      all purchases on that market vest at a certain timestamp.\",\"kind\":\"dev\",\"methods\":{\"closeMarket(uint256)\":{\"params\":{\"id_\":\"ID of market to close\"}},\"createMarket(bytes)\":{\"details\":\"See specific auctioneer implementations for details on encoding the parameters.\",\"params\":{\"params_\":\"Configuration data needed for market creation, encoded in a bytes array\"},\"returns\":{\"_0\":\"id              ID of new bond market\"}},\"currentControlVariable(uint256)\":{\"details\":\"Accounts for control variable adjustment\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Control variable for market in payout token decimals\"}},\"currentDebt(uint256)\":{\"details\":\"Accounts for debt decay since last deposit\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current debt for market in payout token decimals\"}},\"getMarketInfoForPurchase(uint256)\":{\"params\":{\"id_\":\"Market ID\"},\"returns\":{\"callbackAddr\":\"   Address of the callback contract to get tokens for payouts\",\"maxPayout_\":\"      Maximum amount of payout tokens you can purchase in one transaction\",\"owner\":\"          Address of the market owner (tokens transferred from this address if no callback)\",\"payoutToken\":\"    Payout Token (token paid out) for the Market\",\"quoteToken\":\"     Quote Token (token received) for the Market\",\"vesting\":\"        Timestamp or duration for vesting, implementation-dependent\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"marketPrice(uint256)\":{\"details\":\"Accounts for debt and control variable decay since last deposit (vs _marketPrice())\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market in configured decimals (see MarketParams)\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"maxPayout(uint256)\":{\"details\":\"Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current max payout for the market in payout tokens\"}},\"ownerOf(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"pullOwnership(uint256)\":{\"details\":\"The existing owner must call pushOwnership prior to the newOwner calling this function\",\"params\":{\"id_\":\"Market ID\"}},\"purchaseBond(uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond (after fee has been deducted)\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\"},\"returns\":{\"payout\":\"         Amount of payout token to be received from the bond\"}},\"pushOwnership(uint256,address)\":{\"details\":\"Doesn't change permissions until newOwner calls pullOwnership\",\"params\":{\"id_\":\"Market ID\",\"newOwner_\":\"New address to give ownership to\"}},\"setAllowNewMarkets(bool)\":{\"details\":\"Setting to false and allowing active markets to end will sunset the auctioneer\",\"params\":{\"status_\":\"Allow market creation (true) : Disallow market creation (false)\"}},\"setCallbackAuthStatus(address,bool)\":{\"details\":\"Callback is believed to be safe, but a whitelist is implemented to prevent abuse\",\"params\":{\"creator_\":\"Address of market creator\",\"status_\":\"Allow callback (true) : Disallow callback (false)\"}},\"setDefaults(uint32[6])\":{\"details\":\"The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change\",\"params\":{\"defaults_\":\"Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown\"}},\"setIntervals(uint256,uint32[3])\":{\"details\":\"Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay\",\"params\":{\"id_\":\"Market ID\",\"intervals_\":\"Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely\"}}},\"title\":\"Bond Fixed-Expiry Sequential Dutch Auctioneer v1.1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"adjustments(uint256)\":{\"notice\":\"Control variable changes\"},\"allowNewMarkets()\":{\"notice\":\"Whether or not the auctioneer allows new markets to be created\"},\"callbackAuthorized(address)\":{\"notice\":\"Whether or not the market creator is authorized to use a callback address\"},\"closeMarket(uint256)\":{\"notice\":\"Disable existing bond marketMust be market owner\"},\"createMarket(bytes)\":{\"notice\":\"Creates a new bond market\"},\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"currentControlVariable(uint256)\":{\"notice\":\"Up to date control variable\"},\"currentDebt(uint256)\":{\"notice\":\"Calculate debt factoring in decay\"},\"defaultTuneInterval()\":{\"notice\":\"Sane defaults for tuning. Can be adjusted for a specific market via setters.\"},\"getAggregator()\":{\"notice\":\"Returns the Aggregator that services the Auctioneer\"},\"getMarketInfoForPurchase(uint256)\":{\"notice\":\"Provides information for the Teller to execute purchases on a Market\"},\"getTeller()\":{\"notice\":\"Returns the Teller that services the Auctioneer\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"markets(uint256)\":{\"notice\":\"Main information pertaining to bond market\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"maxPayout(uint256)\":{\"notice\":\"Calculate max payout of the market in payout tokens\"},\"metadata(uint256)\":{\"notice\":\"Data needed for tuning bond market\"},\"minDebtDecayInterval()\":{\"notice\":\"Minimum values for decay, deposit interval, market duration and debt buffer.\"},\"newOwners(uint256)\":{\"notice\":\"New address to designate as market owner. They must accept ownership to transfer permissions.\"},\"ownerOf(uint256)\":{\"notice\":\"Returns the address of the market owner\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"pullOwnership(uint256)\":{\"notice\":\"Accept ownership of a marketMust be market newOwner\"},\"purchaseBond(uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified marketMust be teller\"},\"pushOwnership(uint256,address)\":{\"notice\":\"Designate a new owner of a marketMust be market owner\"},\"setAllowNewMarkets(bool)\":{\"notice\":\"Change the status of the auctioneer to allow creation of new markets\"},\"setCallbackAuthStatus(address,bool)\":{\"notice\":\"Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian\"},\"setDefaults(uint32[6])\":{\"notice\":\"Set the auctioneer defaultsMust be policy\"},\"setIntervals(uint256,uint32[3])\":{\"notice\":\"Set market intervals to different values than the defaultsMust be market owner\"},\"terms(uint256)\":{\"notice\":\"Information used to control how a bond market changes\"}},\"notice\":\"Bond Fixed-Expiry Sequential Dutch Auctioneer Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondFixedExpirySDA.sol\":\"BondFixedExpirySDA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":clones/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x8f569b077d99ec821c2750c52094b59b3505fb6ca3e6eac9009092bf86c5452d\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://d0f3966d1f97959f6512ee5bc4b73487bf5ce593880e3c1dbf97ed50d49402a0\",\"dweb:/ipfs/QmSAtFtA28Mja6f6FfET26B38XEgrLgqRezNLo3AsXyjVB\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a\",\"dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da\",\"dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw\"]},\"src/BondFixedExpirySDA.sol\":{\"keccak256\":\"0x51959549bc34a99806bdac965fcb5f260b079fd2edc33b42bf661df6efe7c458\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a55aca6a8ccaa2d7ba59c8c831b3da5ae564f540d8354aba029c861d9e5ef77a\",\"dweb:/ipfs/QmbYtWZgkzeK1s64V1p8XMx1pxyoVdRmdC9nun9zeEtnvS\"]},\"src/ERC20BondToken.sol\":{\"keccak256\":\"0x14b11e975c3fb2f8aee2962e46aa1ab7c3ba145351f1c8f26e7f234fba9f4410\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://b766eb91df473cd1be260b7ab4198eaef69e6f71f01572e113efb67043d11279\",\"dweb:/ipfs/QmSkaFo1ciHD7Dbdt5u8uinQdtmNg9GWCwFpcsuwb4R5HF\"]},\"src/bases/BondBaseSDA.sol\":{\"keccak256\":\"0xae42637b7fdf11fb8fab6c3610b10314e831bfd1b5ed9bd7070cf4b9744a7d7a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b32987b2fe48555532e982f691e0ba8a744fc8d5c8f19ea4e625061ee9afdc1\",\"dweb:/ipfs/QmbG8y51AfN3MqWSiKmhZszrETHqP6X4VfTTspD4JJCgNb\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/interfaces/IBondFixedExpiryTeller.sol\":{\"keccak256\":\"0x4530df5a76e94da12895a0d1912388700b17bee34c6c71c3762c5ae8dd5bbfe1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c32dfd7b2803ec73451bba008ed427ce888215b0039e7a871247ed591d4ed373\",\"dweb:/ipfs/QmenLrALRdCMu8ttfyVwiSubM6vzCmAn1cL7vJgAcM76ag\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xc0992d33eb423d3199d7ca9924a9e5fa59d607cd72b59464d5b2ba92639bd848\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8b75fbd98f706452b7d8a4b30431a84933f868b65145fe273a0a107f856c44d8\",\"dweb:/ipfs/QmNkFA7uzMH9141NLDdboztXg6QCgr4SsxdRDCPaUDde5B\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/lib/CloneERC20.sol\":{\"keccak256\":\"0x44cf60ce8aab43c31e8b6641c417e6a26c3242847c267435906ddb46b37b82c4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f8867033f95983416889a931bfe0396c29be883d62a8330668fadeb06b937fdf\",\"dweb:/ipfs/QmUUKxS87nt3mxZuwCMZrMgLBco3ZRcz4p69hVPuZ7RJ3h\"]},\"src/lib/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb\",\"dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "teller_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_BadExpiry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InitialPriceLessThanMin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MarketNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MaxPayoutExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NewMarketsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotEnoughCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OnlyMarketOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "defaultTuneInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "defaultTuneAdjustment",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDebtDecayInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDepositInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minMarketDuration",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDebtBuffer",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketClosed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payoutToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldControlVariable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newControlVariable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Tuned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "adjustments",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "change",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "lastAdjustment",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "timeToAdjusted",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowNewMarkets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "callbackAuthorized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "params_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentControlVariable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTuneAdjustment",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTuneInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAggregator",
          "outputs": [
            {
              "internalType": "contract IBondAggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfoForPurchase",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scale",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPayout",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "metadata",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "lastTune",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "lastDecay",
              "type": "uint48"
            },
            {
              "internalType": "uint32",
              "name": "depositInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "tuneInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "tuneAdjustmentDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "debtDecayInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "tuneIntervalCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tuneBelowCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastTuneDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDebtBuffer",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDebtDecayInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minMarketDuration",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "newOwners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowNewMarkets"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCallbackAuthStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[6]",
              "name": "defaults_",
              "type": "uint32[6]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaults"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint32[3]",
              "name": "intervals_",
              "type": "uint32[3]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntervals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "terms",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "controlVariable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "closeMarket(uint256)": {
            "params": {
              "id_": "ID of market to close"
            }
          },
          "createMarket(bytes)": {
            "details": "See specific auctioneer implementations for details on encoding the parameters.",
            "params": {
              "params_": "Configuration data needed for market creation, encoded in a bytes array"
            },
            "returns": {
              "_0": "id              ID of new bond market"
            }
          },
          "currentControlVariable(uint256)": {
            "details": "Accounts for control variable adjustment",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Control variable for market in payout token decimals"
            }
          },
          "currentDebt(uint256)": {
            "details": "Accounts for debt decay since last deposit",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current debt for market in payout token decimals"
            }
          },
          "getMarketInfoForPurchase(uint256)": {
            "params": {
              "id_": "Market ID"
            },
            "returns": {
              "callbackAddr": "   Address of the callback contract to get tokens for payouts",
              "maxPayout_": "      Maximum amount of payout tokens you can purchase in one transaction",
              "owner": "          Address of the market owner (tokens transferred from this address if no callback)",
              "payoutToken": "    Payout Token (token paid out) for the Market",
              "quoteToken": "     Quote Token (token received) for the Market",
              "vesting": "        Timestamp or duration for vesting, implementation-dependent"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "marketPrice(uint256)": {
            "details": "Accounts for debt and control variable decay since last deposit (vs _marketPrice())",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market in configured decimals (see MarketParams)"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "maxPayout(uint256)": {
            "details": "Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current max payout for the market in payout tokens"
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "pullOwnership(uint256)": {
            "details": "The existing owner must call pushOwnership prior to the newOwner calling this function",
            "params": {
              "id_": "Market ID"
            }
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond (after fee has been deducted)",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning"
            },
            "returns": {
              "payout": "         Amount of payout token to be received from the bond"
            }
          },
          "pushOwnership(uint256,address)": {
            "details": "Doesn't change permissions until newOwner calls pullOwnership",
            "params": {
              "id_": "Market ID",
              "newOwner_": "New address to give ownership to"
            }
          },
          "setAllowNewMarkets(bool)": {
            "details": "Setting to false and allowing active markets to end will sunset the auctioneer",
            "params": {
              "status_": "Allow market creation (true) : Disallow market creation (false)"
            }
          },
          "setCallbackAuthStatus(address,bool)": {
            "details": "Callback is believed to be safe, but a whitelist is implemented to prevent abuse",
            "params": {
              "creator_": "Address of market creator",
              "status_": "Allow callback (true) : Disallow callback (false)"
            }
          },
          "setDefaults(uint32[6])": {
            "details": "The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change",
            "params": {
              "defaults_": "Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown"
            }
          },
          "setIntervals(uint256,uint32[3])": {
            "details": "Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay",
            "params": {
              "id_": "Market ID",
              "intervals_": "Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adjustments(uint256)": {
            "notice": "Control variable changes"
          },
          "allowNewMarkets()": {
            "notice": "Whether or not the auctioneer allows new markets to be created"
          },
          "callbackAuthorized(address)": {
            "notice": "Whether or not the market creator is authorized to use a callback address"
          },
          "closeMarket(uint256)": {
            "notice": "Disable existing bond marketMust be market owner"
          },
          "createMarket(bytes)": {
            "notice": "Creates a new bond market"
          },
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "currentControlVariable(uint256)": {
            "notice": "Up to date control variable"
          },
          "currentDebt(uint256)": {
            "notice": "Calculate debt factoring in decay"
          },
          "defaultTuneInterval()": {
            "notice": "Sane defaults for tuning. Can be adjusted for a specific market via setters."
          },
          "getAggregator()": {
            "notice": "Returns the Aggregator that services the Auctioneer"
          },
          "getMarketInfoForPurchase(uint256)": {
            "notice": "Provides information for the Teller to execute purchases on a Market"
          },
          "getTeller()": {
            "notice": "Returns the Teller that services the Auctioneer"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "markets(uint256)": {
            "notice": "Main information pertaining to bond market"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "maxPayout(uint256)": {
            "notice": "Calculate max payout of the market in payout tokens"
          },
          "metadata(uint256)": {
            "notice": "Data needed for tuning bond market"
          },
          "minDebtDecayInterval()": {
            "notice": "Minimum values for decay, deposit interval, market duration and debt buffer."
          },
          "newOwners(uint256)": {
            "notice": "New address to designate as market owner. They must accept ownership to transfer permissions."
          },
          "ownerOf(uint256)": {
            "notice": "Returns the address of the market owner"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "pullOwnership(uint256)": {
            "notice": "Accept ownership of a marketMust be market newOwner"
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified marketMust be teller"
          },
          "pushOwnership(uint256,address)": {
            "notice": "Designate a new owner of a marketMust be market owner"
          },
          "setAllowNewMarkets(bool)": {
            "notice": "Change the status of the auctioneer to allow creation of new markets"
          },
          "setCallbackAuthStatus(address,bool)": {
            "notice": "Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian"
          },
          "setDefaults(uint32[6])": {
            "notice": "Set the auctioneer defaultsMust be policy"
          },
          "setIntervals(uint256,uint32[3])": {
            "notice": "Set market intervals to different values than the defaultsMust be market owner"
          },
          "terms(uint256)": {
            "notice": "Information used to control how a bond market changes"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "clones/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondFixedExpirySDA.sol": "BondFixedExpirySDA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x8f569b077d99ec821c2750c52094b59b3505fb6ca3e6eac9009092bf86c5452d",
        "urls": [
          "bzz-raw://d0f3966d1f97959f6512ee5bc4b73487bf5ce593880e3c1dbf97ed50d49402a0",
          "dweb:/ipfs/QmSAtFtA28Mja6f6FfET26B38XEgrLgqRezNLo3AsXyjVB"
        ],
        "license": "BSD"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a",
        "urls": [
          "bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a",
          "dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee",
        "urls": [
          "bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da",
          "dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/BondFixedExpirySDA.sol": {
        "keccak256": "0x51959549bc34a99806bdac965fcb5f260b079fd2edc33b42bf661df6efe7c458",
        "urls": [
          "bzz-raw://a55aca6a8ccaa2d7ba59c8c831b3da5ae564f540d8354aba029c861d9e5ef77a",
          "dweb:/ipfs/QmbYtWZgkzeK1s64V1p8XMx1pxyoVdRmdC9nun9zeEtnvS"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/ERC20BondToken.sol": {
        "keccak256": "0x14b11e975c3fb2f8aee2962e46aa1ab7c3ba145351f1c8f26e7f234fba9f4410",
        "urls": [
          "bzz-raw://b766eb91df473cd1be260b7ab4198eaef69e6f71f01572e113efb67043d11279",
          "dweb:/ipfs/QmSkaFo1ciHD7Dbdt5u8uinQdtmNg9GWCwFpcsuwb4R5HF"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/bases/BondBaseSDA.sol": {
        "keccak256": "0xae42637b7fdf11fb8fab6c3610b10314e831bfd1b5ed9bd7070cf4b9744a7d7a",
        "urls": [
          "bzz-raw://0b32987b2fe48555532e982f691e0ba8a744fc8d5c8f19ea4e625061ee9afdc1",
          "dweb:/ipfs/QmbG8y51AfN3MqWSiKmhZszrETHqP6X4VfTTspD4JJCgNb"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFixedExpiryTeller.sol": {
        "keccak256": "0x4530df5a76e94da12895a0d1912388700b17bee34c6c71c3762c5ae8dd5bbfe1",
        "urls": [
          "bzz-raw://c32dfd7b2803ec73451bba008ed427ce888215b0039e7a871247ed591d4ed373",
          "dweb:/ipfs/QmenLrALRdCMu8ttfyVwiSubM6vzCmAn1cL7vJgAcM76ag"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xc0992d33eb423d3199d7ca9924a9e5fa59d607cd72b59464d5b2ba92639bd848",
        "urls": [
          "bzz-raw://8b75fbd98f706452b7d8a4b30431a84933f868b65145fe273a0a107f856c44d8",
          "dweb:/ipfs/QmNkFA7uzMH9141NLDdboztXg6QCgr4SsxdRDCPaUDde5B"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/lib/CloneERC20.sol": {
        "keccak256": "0x44cf60ce8aab43c31e8b6641c417e6a26c3242847c267435906ddb46b37b82c4",
        "urls": [
          "bzz-raw://f8867033f95983416889a931bfe0396c29be883d62a8330668fadeb06b937fdf",
          "dweb:/ipfs/QmUUKxS87nt3mxZuwCMZrMgLBco3ZRcz4p69hVPuZ7RJ3h"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20",
        "urls": [
          "bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb",
          "dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondFixedExpirySDA.sol",
    "id": 33719,
    "exportedSymbols": {
      "Authority": [
        29632
      ],
      "BondBaseSDA": [
        41813
      ],
      "BondFixedExpirySDA": [
        33718
      ],
      "IBondAggregator": [
        42920
      ],
      "IBondFixedExpiryTeller": [
        43613
      ],
      "IBondTeller": [
        44166
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2881:33",
    "nodes": [
      {
        "id": 33588,
        "nodeType": "PragmaDirective",
        "src": "46:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33592,
        "nodeType": "ImportDirective",
        "src": "71:80:33",
        "nodes": [],
        "absolutePath": "src/bases/BondBaseSDA.sol",
        "file": "./bases/BondBaseSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33719,
        "sourceUnit": 41814,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33589,
              "name": "BondBaseSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41813,
              "src": "79:11:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33590,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42920,
              "src": "92:15:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33591,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29632,
              "src": "109:9:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33594,
        "nodeType": "ImportDirective",
        "src": "152:57:33",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondTeller.sol",
        "file": "./interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33719,
        "sourceUnit": 44167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33593,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44166,
              "src": "160:11:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33596,
        "nodeType": "ImportDirective",
        "src": "210:79:33",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondFixedExpiryTeller.sol",
        "file": "./interfaces/IBondFixedExpiryTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33719,
        "sourceUnit": 43614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33595,
              "name": "IBondFixedExpiryTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43613,
              "src": "218:22:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33718,
        "nodeType": "ContractDefinition",
        "src": "1285:1641:33",
        "nodes": [
          {
            "id": 33620,
            "nodeType": "FunctionDefinition",
            "src": "1378:200:33",
            "nodes": [],
            "body": {
              "id": 33619,
              "nodeType": "Block",
              "src": "1576:2:33",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33613,
                    "name": "teller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33602,
                    "src": "1531:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  {
                    "id": 33614,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33605,
                    "src": "1540:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 33615,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33607,
                    "src": "1553:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 33616,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33610,
                    "src": "1564:10:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 33617,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33612,
                  "name": "BondBaseSDA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41813,
                  "src": "1519:11:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1519:56:33"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33602,
                  "mutability": "mutable",
                  "name": "teller_",
                  "nameLocation": "1411:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 33620,
                  "src": "1399:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$44166",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 33601,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33600,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44166,
                      "src": "1399:11:33"
                    },
                    "referencedDeclaration": 44166,
                    "src": "1399:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33605,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1444:11:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 33620,
                  "src": "1428:27:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 33604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33603,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42920,
                      "src": "1428:15:33"
                    },
                    "referencedDeclaration": 42920,
                    "src": "1428:15:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33607,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1473:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 33620,
                  "src": "1465:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33610,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "1502:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 33620,
                  "src": "1492:20:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$29632",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 33609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33608,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29632,
                      "src": "1492:9:33"
                    },
                    "referencedDeclaration": 29632,
                    "src": "1492:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1389:129:33"
            },
            "returnParameters": {
              "id": 33618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1576:0:33"
            },
            "scope": 33718,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33717,
            "nodeType": "FunctionDefinition",
            "src": "1616:1308:33",
            "nodes": [],
            "body": {
              "id": 33716,
              "nodeType": "Block",
              "src": "1698:1226:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33631,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1802:6:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 33716,
                      "src": "1782:26:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                        "typeString": "struct IBondSDA.MarketParams"
                      },
                      "typeName": {
                        "id": 33630,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33629,
                          "name": "MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44073,
                          "src": "1782:12:33"
                        },
                        "referencedDeclaration": 44073,
                        "src": "1782:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$44073_storage_ptr",
                          "typeString": "struct IBondSDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33634,
                        "name": "params_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33623,
                        "src": "1822:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33635,
                            "name": "MarketParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44073,
                            "src": "1832:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MarketParams_$44073_storage_ptr_$",
                              "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                            }
                          }
                        ],
                        "id": 33636,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1831:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$44073_storage_ptr_$",
                          "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$44073_storage_ptr_$",
                          "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 33632,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1811:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1811:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:35:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                      "typeString": "struct IBondSDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1782:64:33"
                },
                {
                  "expression": {
                    "id": 33649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33639,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33631,
                        "src": "2012:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      },
                      "id": 33641,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vesting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44064,
                      "src": "2012:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 33645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 33642,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33631,
                                "src": "2030:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 33643,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44064,
                              "src": "2030:14:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 33644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2047:6:33",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "2030:23:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "id": 33646,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2029:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 33647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:6:33",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "2029:34:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "2012:51:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "id": 33650,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:51:33"
                },
                {
                  "assignments": [
                    33652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33652,
                      "mutability": "mutable",
                      "name": "start",
                      "nameLocation": "2243:5:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 33716,
                      "src": "2236:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 33651,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "2236:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33665,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33653,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33631,
                          "src": "2251:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                            "typeString": "struct IBondSDA.MarketParams memory"
                          }
                        },
                        "id": 33654,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44066,
                        "src": "2251:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2267:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2251:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 33662,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33631,
                        "src": "2297:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      },
                      "id": 33663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "start",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44066,
                      "src": "2297:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "id": 33664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2251:58:33",
                    "trueExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 33659,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2278:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 33660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2278:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 33658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2271:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 33657,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:6:33",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2271:23:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2236:73:33"
                },
                {
                  "assignments": [
                    33667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33667,
                      "mutability": "mutable",
                      "name": "conclusion",
                      "nameLocation": "2326:10:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 33716,
                      "src": "2319:17:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 33666,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "2319:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33675,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33668,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33652,
                      "src": "2339:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 33671,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33631,
                            "src": "2354:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                              "typeString": "struct IBondSDA.MarketParams memory"
                            }
                          },
                          "id": 33672,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44068,
                          "src": "2354:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 33670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2347:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 33669,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "2347:6:33",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2347:23:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "2339:31:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2319:51:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33676,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33631,
                          "src": "2464:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                            "typeString": "struct IBondSDA.MarketParams memory"
                          }
                        },
                        "id": 33677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44064,
                        "src": "2464:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2482:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2464:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 33683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 33680,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33631,
                          "src": "2487:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                            "typeString": "struct IBondSDA.MarketParams memory"
                          }
                        },
                        "id": 33681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44064,
                        "src": "2487:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 33682,
                        "name": "conclusion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33667,
                        "src": "2504:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "src": "2487:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2464:50:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33688,
                  "nodeType": "IfStatement",
                  "src": "2460:89:33",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33685,
                        "name": "Auctioneer_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39576,
                        "src": "2523:24:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2523:26:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33687,
                    "nodeType": "RevertStatement",
                    "src": "2516:33:33"
                  }
                },
                {
                  "assignments": [
                    33690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33690,
                      "mutability": "mutable",
                      "name": "marketId",
                      "nameLocation": "2614:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 33716,
                      "src": "2606:16:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33694,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33692,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33631,
                        "src": "2639:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      ],
                      "id": 33691,
                      "name": "_createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40185,
                      "src": "2625:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParams_$44073_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondSDA.MarketParams memory) returns (uint256)"
                      }
                    },
                    "id": 33693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2625:21:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2606:40:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 33695,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33631,
                        "src": "2735:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      },
                      "id": 33696,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vesting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44064,
                      "src": "2735:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 33697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2753:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2735:19:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33713,
                  "nodeType": "IfStatement",
                  "src": "2731:133:33",
                  "trueBody": {
                    "id": 33712,
                    "nodeType": "Block",
                    "src": "2756:108:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 33706,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33631,
                                "src": "2818:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 33707,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payoutToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44047,
                              "src": "2818:18:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 33708,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33631,
                                "src": "2838:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$44073_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 33709,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44064,
                              "src": "2838:14:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 33702,
                                      "name": "_teller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39683,
                                      "src": "2801:7:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBondTeller_$44166",
                                        "typeString": "contract IBondTeller"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IBondTeller_$44166",
                                        "typeString": "contract IBondTeller"
                                      }
                                    ],
                                    "id": 33701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2793:7:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 33700,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2793:7:33",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 33703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2793:16:33",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33699,
                                "name": "IBondFixedExpiryTeller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43613,
                                "src": "2770:22:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondFixedExpiryTeller_$43613_$",
                                  "typeString": "type(contract IBondFixedExpiryTeller)"
                                }
                              },
                              "id": 33704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2770:40:33",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondFixedExpiryTeller_$43613",
                                "typeString": "contract IBondFixedExpiryTeller"
                              }
                            },
                            "id": 33705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deploy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43591,
                            "src": "2770:47:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$30350_$_t_uint48_$returns$_t_contract$_ERC20BondToken_$35309_$",
                              "typeString": "function (contract ERC20,uint48) external returns (contract ERC20BondToken)"
                            }
                          },
                          "id": 33710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2770:83:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                            "typeString": "contract ERC20BondToken"
                          }
                        },
                        "id": 33711,
                        "nodeType": "ExpressionStatement",
                        "src": "2770:83:33"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 33714,
                    "name": "marketId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33690,
                    "src": "2909:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33628,
                  "id": 33715,
                  "nodeType": "Return",
                  "src": "2902:15:33"
                }
              ]
            },
            "baseFunctions": [
              39746
            ],
            "documentation": {
              "id": 33621,
              "nodeType": "StructuredDocumentation",
              "src": "1584:27:33",
              "text": "@inheritdoc BondBaseSDA"
            },
            "functionSelector": "53c7f8e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "1625:12:33",
            "overrides": {
              "id": 33625,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1671:8:33"
            },
            "parameters": {
              "id": 33624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33623,
                  "mutability": "mutable",
                  "name": "params_",
                  "nameLocation": "1653:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 33717,
                  "src": "1638:22:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33622,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1637:24:33"
            },
            "returnParameters": {
              "id": 33628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33627,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33717,
                  "src": "1689:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:9:33"
            },
            "scope": 33718,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33598,
              "name": "BondBaseSDA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41813,
              "src": "1316:11:33"
            },
            "id": 33599,
            "nodeType": "InheritanceSpecifier",
            "src": "1316:11:33"
          }
        ],
        "canonicalName": "BondFixedExpirySDA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33597,
          "nodeType": "StructuredDocumentation",
          "src": "291:994:33",
          "text": "@title Bond Fixed-Expiry Sequential Dutch Auctioneer v1.1\n @notice Bond Fixed-Expiry Sequential Dutch Auctioneer Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Fixed-Expiry Auctioneer is an implementation of the\n      Bond Base Sequential Dutch Auctioneer contract specific to creating bond markets where\n      all purchases on that market vest at a certain timestamp.\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33718,
          41813,
          29619,
          44107,
          43105
        ],
        "name": "BondFixedExpirySDA",
        "nameLocation": "1294:18:33",
        "scope": 33719,
        "usedErrors": [
          39560,
          39562,
          39564,
          39566,
          39568,
          39570,
          39572,
          39574,
          39576,
          39578,
          39580
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 33
}