{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "teller_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auctioneer_AmountLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_BadExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InitialPriceLessThanMin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MarketNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MaxPayoutExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NewMarketsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotEnoughCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OnlyMarketOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OraclePriceZero",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "MarketClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldControlVariable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newControlVariable",
          "type": "uint256"
        }
      ],
      "name": "Tuned",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowNewMarkets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callbackAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "closeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "params_",
          "type": "bytes"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAggregator",
      "outputs": [
        {
          "internalType": "contract IBondAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoForPurchase",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "capacityInQuote",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "maxPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositInterval",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minMarketDuration",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "pullOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchaseBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setAllowNewMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setCallbackAuthStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[6]",
          "name": "defaults_",
          "type": "uint32[6]"
        }
      ],
      "name": "setDefaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint32[3]",
          "name": "intervals_",
          "type": "uint32[3]"
        }
      ],
      "name": "setIntervals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "depositInterval_",
          "type": "uint48"
        }
      ],
      "name": "setMinDepositInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "duration_",
          "type": "uint48"
        }
      ],
      "name": "setMinMarketDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "terms",
      "outputs": [
        {
          "internalType": "contract IBondOracle",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "conclusion",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "baseDiscount",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "decaySpeed",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "scale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oracleConversion",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162003ff538038062003ff5833981016040819052620000349162000125565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600680546001600160681b03191669015180000000000e1001179055506200018d9050565b6001600160a01b03811681146200012257600080fd5b50565b600080600080608085870312156200013c57600080fd5b845162000149816200010c565b60208601519094506200015c816200010c565b60408601519093506200016f816200010c565b606086015190925062000182816200010c565b939692955090935050565b60805160a051613e26620001cf6000396000818161045f015281816115b801528181611aa60152611b5a0152600081816102ae01526127c10152613e266000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063946824cd1161012a578063bd1f3a5e116100bd578063c7bf8ca01161008c578063d2bee32311610071578063d2bee323146107ce578063e007fa97146107eb578063f61338f6146107fe57600080fd5b8063c7bf8ca01461078d578063d2040687146107a057600080fd5b8063bd1f3a5e1461061f578063bf48582b14610630578063bf7e214f14610643578063c0aa0e8a1461066357600080fd5b8063afa9d3b0116100f9578063afa9d3b0146104ff578063b1283e771461050c578063bbbdd95a146105f9578063bcf6cde81461060c57600080fd5b8063946824cd146104395780639787d1071461045d578063acc5570c14610483578063ae418095146104ec57600080fd5b806357e333ba116101bd5780636729a41e1161018c5780637a9e5e4b116101715780637a9e5e4b146103f35780638b098db3146104065780638da5cb5b1461041957600080fd5b80636729a41e146103ab578063699e17d9146103e157600080fd5b806357e333ba1461032c5780635dc4d16b1461033f5780635f77274e146103625780636352211e1461037557600080fd5b80633ad59dbc116101f95780633ad59dbc146102ac5780633adec5a7146102f357806344ee01721461030657806353c7f8e01461031957600080fd5b806310b053171461022b57806313af4035146102405780631c063a6c146102535780632750745814610289575b600080fd5b61023e610239366004613512565b610811565b005b61023e61024e36600461355d565b6108cc565b610276610261366004613512565b60009081526002602052604090206004015490565b6040519081526020015b60405180910390f35b61029c610297366004613512565b6109d5565b6040519015158152602001610280565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610280565b610276610301366004613512565b610a6e565b61023e610314366004613599565b610ab5565b6102766103273660046135b6565b610bef565b61027661033a366004613512565b610c97565b61029c61034d36600461355d565b60056020526000908152604090205460ff1681565b61023e610370366004613641565b611022565b6102ce610383366004613512565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6102ce6103b9366004613512565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023e6103ef36600461365e565b5050565b61023e61040136600461355d565b6110e7565b61029c610414366004613512565b611244565b6000546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b610276610447366004613512565b6000908152600360208190526040909120015490565b7f00000000000000000000000000000000000000000000000000000000000000006102ce565b610496610491366004613512565b61127a565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c001610280565b61023e6104fa366004613512565b61136a565b60065461029c9060ff1681565b61059461051a366004613512565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850154600686015460079096015473ffffffffffffffffffffffffffffffffffffffff95861697861696948616958416947401000000000000000000000000000000000000000090940460ff16939089565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a015296891696880196909652969093166060860152901515608085015260a084015260c083015260e082019290925261010081019190915261012001610280565b61023e610607366004613691565b6113d0565b61023e61061a3660046136ca565b6114ba565b61023e61062d366004613748565b50565b61027661063e3660046137d9565b61156a565b6001546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b61071e610671366004613512565b60036020819052600091825260409091208054600182015460028301549383015460049093015473ffffffffffffffffffffffffffffffffffffffff83169465ffffffffffff7401000000000000000000000000000000000000000085048116957a01000000000000000000000000000000000000000000000000000090950481169484821694660100000000000081048316946c01000000000000000000000000909104909216929189565b6040805173ffffffffffffffffffffffffffffffffffffffff909a168a5265ffffffffffff98891660208b015296881696890196909652938616606088015291851660808701529390931660a085015260c084019290925260e083019190915261010082015261012001610280565b61027661079b3660046136ca565b6116b9565b6006546107b790610100900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610280565b6006546107b790670100000000000000900465ffffffffffff1681565b6102766107f9366004613812565b611b40565b61023e61080c366004613599565b611ea7565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16331461086e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260046020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6108fa336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610a2b575060008281526003602052604090205465ffffffffffff4281167a01000000000000000000000000000000000000000000000000000090920416115b8015610a68575060008281526003602052604090205465ffffffffffff428116740100000000000000000000000000000000000000009092041611155b92915050565b600080610a7a836120f1565b6000848152600360205260409020600201549091508111610aac57600083815260036020526040902060020154610aae565b805b9392505050565b610ae3336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b610b49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b60065465ffffffffffff61010090910481169082161080610b745750620151808165ffffffffffff16105b15610bab576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006805465ffffffffffff909216670100000000000000027fffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffff909216919091179055565b600080610bfe8385018561383e565b905080610140015165ffffffffffff16600014158015610c4f57506201518081610140015165ffffffffffff161080610c4f5750635dba240065ffffffffffff1681610140015165ffffffffffff16115b15610c86576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c8f8161265b565b949350505050565b600080610ca383610a6e565b9050600060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905060008260800151610feb578260a00151610fff565b60e082015160a0840151610fff9186612de6565b9050808360c0015111611016578260c00151611018565b805b9695505050505050565b611050336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b6110b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314806111ca57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca9190613935565b6111d357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206001015465ffffffffffff16635dba24008111156112735742811115610aae565b1592915050565b6000818152600260208181526040808420815161012081018352815473ffffffffffffffffffffffffffffffffffffffff9081168083526001808501548316848801819052978501548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007909601546101008601528a8a529490965293872090940154869586958695869586959491939165ffffffffffff166113558d610c97565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146113c7576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61062d81612eb2565b6113fe336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b611464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314611517576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526004602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611638917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116259190613952565b869065ffffffffffff16620186a0612de6565b6000858152600360208190526040822001549192509061166c9061165b87610a6e565b611665858a61399e565b9190612de6565b905061167785610c97565b8111156116b0576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9150610aae9050565b60008060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905060006119f686610a6e565b905060008360800151611a1d5760e083015160a0850151611a18918490612de6565b611a23565b8360a001515b90506000611a44838560e001518760c00151612de69092919063ffffffff16565b90506000818310611a555781611a57565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152919250600091611b26917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b139190613952565b839065ffffffffffff16620186a0612de6565b9050611b3281836139b5565b9a9950505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611bb1576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260208181526040808420600380845294829020825161012081018452815473ffffffffffffffffffffffffffffffffffffffff808216835265ffffffffffff7401000000000000000000000000000000000000000083048116978401979097527a0100000000000000000000000000000000000000000000000000009091048616948201949094526001820154808616606083015266010000000000008104861660808301526c01000000000000000000000000900490941660a08501529384015460c08401528385015460e084015260049093015461010083015292820154919290911615801590611cd25750815473ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff16155b15611d09576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d12866109d5565b611d48576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d5387610a6e565b60e0830151909150611d6790879083612de6565b935084841015611da3576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260050154841115611de1576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611e115782600401548411611e19565b826004015486115b15611e50576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611e7a5783611e7c565b855b6004840180549190910390555050600781018054909401909355600690920180548301905550919050565b611ed5336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b611f3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b60065465ffffffffffff67010000000000000090910481169082161180611f6b5750610e108165ffffffffffff16105b15611fa2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006805465ffffffffffff909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff1680158015906120c457506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156120a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c49190613935565b80610c8f575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60008060026000848152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905060006124f48260800151620186a061243b91906139cd565b61010084015184516040517f7a3c4c17000000000000000000000000000000000000000000000000000000008152600481018a905265ffffffffffff9390931692620186a0929173ffffffffffffffffffffffffffffffffffffffff1690637a3c4c1790602401602060405180830381865afa1580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e391906139f4565b6124ed9190613a0d565b9190612f41565b905080600003612530576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360800151612545578360e0015161254c565b8361010001515b8460a0015161255b91906139b5565b604084015190915065ffffffffffff166000612577428361399e565b9050600061259f82876020015165ffffffffffff1685612597919061399e565b869190612de6565b905060008760a001518211156125f557848860a00151836125c0919061399e565b8860a0015165ffffffffffff166125d79190613a0d565b6125e19190613a79565b6125ee90620186a06139b5565b905061264d565b600085838a60a00151612608919061399e565b8960a0015165ffffffffffff1661261f9190613a0d565b6126299190613a79565b9050620186a0811061263c576000612649565b61264981620186a061399e565b9150505b611b328682620186a0612f41565b60065460009060ff1661269a576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602052604090205460ff161580156126d35750604082015173ffffffffffffffffffffffffffffffffffffffff1615155b1561270a576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082610160015165ffffffffffff1611801561273357504282610160015165ffffffffffff16105b1561276a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af115801561280a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282e91906139f4565b600081815260026020818152604080842080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825589840151948201805473ffffffffffffffffffffffffffffffffffffffff968716908316179055895160018301805491871691909216179055888201516003808301805460e08d0151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff000000000000000000000000000000000000000000909116939097169290921795909517905561010089015160048201559290915290912060808601519293509091620186a065ffffffffffff9190911610158061294c57508460a0015165ffffffffffff16856080015165ffffffffffff16115b15612983576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808501516001820180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff16660100000000000065ffffffffffff841602179055606086015160208701518751600093849384936129e3938a93612f9f565b60608b015187547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178755600487018290556003870181905560a08b01519295509093509150620186a065ffffffffffff9091161115612a88576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612ab18860a00151620186a0612a9e91906139cd565b849065ffffffffffff16620186a0612f41565b600285015560065461018089015165ffffffffffff670100000000000000909204821691161080612af9575060065461012089015165ffffffffffff61010090920482169116105b80612b1d575087610180015165ffffffffffff1688610120015165ffffffffffff16115b15612b54576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008860e00151612b6a57886101000151612ba4565b612ba482612b978b60800151620186a0612b8491906139cd565b879065ffffffffffff16620186a0612f41565b6101008c01519190612de6565b9050612bd589610120015165ffffffffffff168a610180015165ffffffffffff1683612de69092919063ffffffff16565b600587015560c0890151620186a065ffffffffffff9091161115612c25576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861012001518960c001518a6101800151612c409190613a8d565b612c4a9190613abb565b6001860180546101408c01517fffffffffffffffffffffffffffff000000000000ffffffffffff0000000000009091166c0100000000000000000000000065ffffffffffff948516027fffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000016179083161790556101608a01516000911615612cd657896101600151612cd8565b425b86547fffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000065ffffffffffff8316021787556101808b0151909150612d329082613ae0565b865479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff9283160217875560208b8101518c516101408e01516040519416845273ffffffffffffffffffffffffffffffffffffffff918216939116918b917f9cc08aa705173351ee44462d57949faf65814067be71f3271ec1f5636f9efa2d910160405180910390a4509598975050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612e3d5760008411612e3257600080fd5b508290049050610aae565b808411612e4957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000818152600360209081526040808320805479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a0100000000000000000000000000000000000000000000000000004265ffffffffffff160217905560029091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6000612f4e848484612de6565b905060008280612f6057612f60613a4a565b8486091115610aae577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110612f9557600080fd5b6001019392505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ff0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130149190613b0a565b905060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130879190613b0a565b905060068260ff16108061309e575060128260ff16115b156130d5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff1610806130ea575060128160ff16115b15613121576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff89161580613159575073ffffffffffffffffffffffffffffffffffffffff89163b155b15613190576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5538adb7000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff898116602483015288811660448301528a1690635538adb790606401600060405180830381600087803b15801561320857600080fd5b505af115801561321c573d6000803e3d6000fd5b50506040517f7a3c4c17000000000000000000000000000000000000000000000000000000008152600481018d90526000925073ffffffffffffffffffffffffffffffffffffffff8c169150637a3c4c1790602401602060405180830381865afa15801561328e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b291906139f4565b9050806000036132ee576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f3f47e662000000000000000000000000000000000000000000000000000000008152600481018c905260009073ffffffffffffffffffffffffffffffffffffffff8c1690633f47e66290602401602060405180830381865afa15801561335c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133809190613b0a565b905060068160ff161080613397575060128160ff16115b156133ce576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006133fc6133f66133e38b620186a06139cd565b859065ffffffffffff16620186a0612f41565b836134dd565b905061340781613b2d565b60000b8260000b13158061341e575060188160000b135b15613455576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082613463600284613b6b565b61346e906024613bdf565b6134789190613bdf565b61348390600a613d61565b90506000613492600284613b6b565b8661349e896024613d70565b6134a89190613bdf565b6134b29190613bdf565b6134bd90600a613d61565b90506134c98286613a0d565b9f919e509c509a5050505050505050505050565b6000805b600a8410613508576134f4600a85613a79565b93508061350081613dd1565b9150506134e1565b610c8f8382613bdf565b60006020828403121561352457600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461062d57600080fd5b80356135588161352b565b919050565b60006020828403121561356f57600080fd5b8135610aae8161352b565b65ffffffffffff8116811461062d57600080fd5b80356135588161357a565b6000602082840312156135ab57600080fd5b8135610aae8161357a565b600080602083850312156135c957600080fd5b823567ffffffffffffffff808211156135e157600080fd5b818501915085601f8301126135f557600080fd5b81358181111561360457600080fd5b86602082850101111561361657600080fd5b60209290920196919550909350505050565b801515811461062d57600080fd5b803561355881613628565b60006020828403121561365357600080fd5b8135610aae81613628565b6000806080838503121561367157600080fd5b823591508360808401111561368557600080fd5b50926020919091019150565b600080604083850312156136a457600080fd5b82356136af8161352b565b915060208301356136bf81613628565b809150509250929050565b600080604083850312156136dd57600080fd5b8235915060208301356136bf8161352b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715613742576137426136ef565b60405290565b600060c0828403121561375a57600080fd5b82601f83011261376957600080fd5b60405160c0810181811067ffffffffffffffff8211171561378c5761378c6136ef565b6040528060c08401858111156137a157600080fd5b845b818110156137ce57803563ffffffff811681146137c05760008081fd5b8352602092830192016137a3565b509195945050505050565b6000806000606084860312156137ee57600080fd5b833592506020840135915060408401356138078161352b565b809150509250925092565b60008060006060848603121561382757600080fd5b505081359360208301359350604090920135919050565b60006101a0828403121561385157600080fd5b61385961371e565b6138628361354d565b81526138706020840161354d565b60208201526138816040840161354d565b60408201526138926060840161354d565b60608201526138a36080840161358e565b60808201526138b460a0840161358e565b60a08201526138c560c0840161358e565b60c08201526138d660e08401613636565b60e082015261010083810135908201526101206138f481850161358e565b9082015261014061390684820161358e565b9082015261016061391884820161358e565b9082015261018061392a84820161358e565b908201529392505050565b60006020828403121561394757600080fd5b8151610aae81613628565b60006020828403121561396457600080fd5b8151610aae8161357a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156139b0576139b061396f565b500390565b600082198211156139c8576139c861396f565b500190565b600065ffffffffffff838116908316818110156139ec576139ec61396f565b039392505050565b600060208284031215613a0657600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a4557613a4561396f565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082613a8857613a88613a4a565b500490565b600065ffffffffffff80831681851681830481118215151615613ab257613ab261396f565b02949350505050565b600065ffffffffffff80841680613ad457613ad4613a4a565b92169190910492915050565b600065ffffffffffff808316818516808303821115613b0157613b0161396f565b01949350505050565b600060208284031215613b1c57600080fd5b815160ff81168114610aae57600080fd5b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808103613b6257613b6261396f565b60000392915050565b60008160000b8360000b80613b8257613b82613a4a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083141615613bd657613bd661396f565b90059392505050565b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001831281151615613c2257613c2261396f565b81607f018313811615613c3757613c3761396f565b5090039392505050565b600181815b80851115613c9a57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115613c8057613c8061396f565b80851615613c8d57918102915b93841c9390800290613c46565b509250929050565b600082613cb157506001610a68565b81613cbe57506000610a68565b8160018114613cd45760028114613cde57613cfa565b6001915050610a68565b60ff841115613cef57613cef61396f565b50506001821b610a68565b5060208310610133831016604e8410600b8410161715613d1d575081810a610a68565b613d278383613c41565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115613d5957613d5961396f565b029392505050565b6000610aae60ff841683613ca2565b60008160000b8360000b6000821282607f03821381151615613d9457613d9461396f565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80038212811615613dc857613dc861396f565b50019392505050565b60008160000b607f8103613de757613de761396f565b6001019291505056fea26469706673582212201bb90a04526531e05fbc98cd48056cc254ed364e6289eefca3ea3ed72c6a9a4964736f6c634300080f0033",
    "sourceMap": "1227:928:37:-:0;;;1320:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;1474:7:37;;1483:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;;4620:25:43;;::::1;;::::0;4655:17:::1;;::::0;-1:-1:-1;;4683:18:43::1;:28:::0;;-1:-1:-1;;;;;;4758:22:43;;;;;-1:-1:-1;1227:928:37;;-1:-1:-1;1227:928:37;14:144:124;-1:-1:-1;;;;;102:31:124;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:771::-;325:6;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;451:9;445:16;470:44;508:5;470:44;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:46:124;562:25;596:46;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;726:46:124;692:25;726:46;:::i;:::-;843:2;828:18;;822:25;791:7;;-1:-1:-1;856:46:124;822:25;856:46;:::i;:::-;163:771;;;;-1:-1:-1;163:771:124;;-1:-1:-1;;163:771:124:o;:::-;1227:928:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102265760003560e01c8063946824cd1161012a578063bd1f3a5e116100bd578063c7bf8ca01161008c578063d2bee32311610071578063d2bee323146107ce578063e007fa97146107eb578063f61338f6146107fe57600080fd5b8063c7bf8ca01461078d578063d2040687146107a057600080fd5b8063bd1f3a5e1461061f578063bf48582b14610630578063bf7e214f14610643578063c0aa0e8a1461066357600080fd5b8063afa9d3b0116100f9578063afa9d3b0146104ff578063b1283e771461050c578063bbbdd95a146105f9578063bcf6cde81461060c57600080fd5b8063946824cd146104395780639787d1071461045d578063acc5570c14610483578063ae418095146104ec57600080fd5b806357e333ba116101bd5780636729a41e1161018c5780637a9e5e4b116101715780637a9e5e4b146103f35780638b098db3146104065780638da5cb5b1461041957600080fd5b80636729a41e146103ab578063699e17d9146103e157600080fd5b806357e333ba1461032c5780635dc4d16b1461033f5780635f77274e146103625780636352211e1461037557600080fd5b80633ad59dbc116101f95780633ad59dbc146102ac5780633adec5a7146102f357806344ee01721461030657806353c7f8e01461031957600080fd5b806310b053171461022b57806313af4035146102405780631c063a6c146102535780632750745814610289575b600080fd5b61023e610239366004613512565b610811565b005b61023e61024e36600461355d565b6108cc565b610276610261366004613512565b60009081526002602052604090206004015490565b6040519081526020015b60405180910390f35b61029c610297366004613512565b6109d5565b6040519015158152602001610280565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610280565b610276610301366004613512565b610a6e565b61023e610314366004613599565b610ab5565b6102766103273660046135b6565b610bef565b61027661033a366004613512565b610c97565b61029c61034d36600461355d565b60056020526000908152604090205460ff1681565b61023e610370366004613641565b611022565b6102ce610383366004613512565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6102ce6103b9366004613512565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023e6103ef36600461365e565b5050565b61023e61040136600461355d565b6110e7565b61029c610414366004613512565b611244565b6000546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b610276610447366004613512565b6000908152600360208190526040909120015490565b7f00000000000000000000000000000000000000000000000000000000000000006102ce565b610496610491366004613512565b61127a565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c001610280565b61023e6104fa366004613512565b61136a565b60065461029c9060ff1681565b61059461051a366004613512565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850154600686015460079096015473ffffffffffffffffffffffffffffffffffffffff95861697861696948616958416947401000000000000000000000000000000000000000090940460ff16939089565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a015296891696880196909652969093166060860152901515608085015260a084015260c083015260e082019290925261010081019190915261012001610280565b61023e610607366004613691565b6113d0565b61023e61061a3660046136ca565b6114ba565b61023e61062d366004613748565b50565b61027661063e3660046137d9565b61156a565b6001546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b61071e610671366004613512565b60036020819052600091825260409091208054600182015460028301549383015460049093015473ffffffffffffffffffffffffffffffffffffffff83169465ffffffffffff7401000000000000000000000000000000000000000085048116957a01000000000000000000000000000000000000000000000000000090950481169484821694660100000000000081048316946c01000000000000000000000000909104909216929189565b6040805173ffffffffffffffffffffffffffffffffffffffff909a168a5265ffffffffffff98891660208b015296881696890196909652938616606088015291851660808701529390931660a085015260c084019290925260e083019190915261010082015261012001610280565b61027661079b3660046136ca565b6116b9565b6006546107b790610100900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610280565b6006546107b790670100000000000000900465ffffffffffff1681565b6102766107f9366004613812565b611b40565b61023e61080c366004613599565b611ea7565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16331461086e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260046020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6108fa336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610a2b575060008281526003602052604090205465ffffffffffff4281167a01000000000000000000000000000000000000000000000000000090920416115b8015610a68575060008281526003602052604090205465ffffffffffff428116740100000000000000000000000000000000000000009092041611155b92915050565b600080610a7a836120f1565b6000848152600360205260409020600201549091508111610aac57600083815260036020526040902060020154610aae565b805b9392505050565b610ae3336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b610b49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b60065465ffffffffffff61010090910481169082161080610b745750620151808165ffffffffffff16105b15610bab576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006805465ffffffffffff909216670100000000000000027fffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffff909216919091179055565b600080610bfe8385018561383e565b905080610140015165ffffffffffff16600014158015610c4f57506201518081610140015165ffffffffffff161080610c4f5750635dba240065ffffffffffff1681610140015165ffffffffffff16115b15610c86576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c8f8161265b565b949350505050565b600080610ca383610a6e565b9050600060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905060008260800151610feb578260a00151610fff565b60e082015160a0840151610fff9186612de6565b9050808360c0015111611016578260c00151611018565b805b9695505050505050565b611050336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b6110b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314806111ca57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca9190613935565b6111d357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206001015465ffffffffffff16635dba24008111156112735742811115610aae565b1592915050565b6000818152600260208181526040808420815161012081018352815473ffffffffffffffffffffffffffffffffffffffff9081168083526001808501548316848801819052978501548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007909601546101008601528a8a529490965293872090940154869586958695869586959491939165ffffffffffff166113558d610c97565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146113c7576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61062d81612eb2565b6113fe336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b611464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314611517576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526004602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611638917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116259190613952565b869065ffffffffffff16620186a0612de6565b6000858152600360208190526040822001549192509061166c9061165b87610a6e565b611665858a61399e565b9190612de6565b905061167785610c97565b8111156116b0576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9150610aae9050565b60008060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905060006119f686610a6e565b905060008360800151611a1d5760e083015160a0850151611a18918490612de6565b611a23565b8360a001515b90506000611a44838560e001518760c00151612de69092919063ffffffff16565b90506000818310611a555781611a57565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152919250600091611b26917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b139190613952565b839065ffffffffffff16620186a0612de6565b9050611b3281836139b5565b9a9950505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611bb1576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260208181526040808420600380845294829020825161012081018452815473ffffffffffffffffffffffffffffffffffffffff808216835265ffffffffffff7401000000000000000000000000000000000000000083048116978401979097527a0100000000000000000000000000000000000000000000000000009091048616948201949094526001820154808616606083015266010000000000008104861660808301526c01000000000000000000000000900490941660a08501529384015460c08401528385015460e084015260049093015461010083015292820154919290911615801590611cd25750815473ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff16155b15611d09576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d12866109d5565b611d48576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d5387610a6e565b60e0830151909150611d6790879083612de6565b935084841015611da3576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260050154841115611de1576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611e115782600401548411611e19565b826004015486115b15611e50576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611e7a5783611e7c565b855b6004840180549190910390555050600781018054909401909355600690920180548301905550919050565b611ed5336000357fffffffff0000000000000000000000000000000000000000000000000000000016611fe0565b611f3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161095c565b60065465ffffffffffff67010000000000000090910481169082161180611f6b5750610e108165ffffffffffff16105b15611fa2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006805465ffffffffffff909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff1680158015906120c457506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156120a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c49190613935565b80610c8f575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60008060026000848152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905060006124f48260800151620186a061243b91906139cd565b61010084015184516040517f7a3c4c17000000000000000000000000000000000000000000000000000000008152600481018a905265ffffffffffff9390931692620186a0929173ffffffffffffffffffffffffffffffffffffffff1690637a3c4c1790602401602060405180830381865afa1580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e391906139f4565b6124ed9190613a0d565b9190612f41565b905080600003612530576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360800151612545578360e0015161254c565b8361010001515b8460a0015161255b91906139b5565b604084015190915065ffffffffffff166000612577428361399e565b9050600061259f82876020015165ffffffffffff1685612597919061399e565b869190612de6565b905060008760a001518211156125f557848860a00151836125c0919061399e565b8860a0015165ffffffffffff166125d79190613a0d565b6125e19190613a79565b6125ee90620186a06139b5565b905061264d565b600085838a60a00151612608919061399e565b8960a0015165ffffffffffff1661261f9190613a0d565b6126299190613a79565b9050620186a0811061263c576000612649565b61264981620186a061399e565b9150505b611b328682620186a0612f41565b60065460009060ff1661269a576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602052604090205460ff161580156126d35750604082015173ffffffffffffffffffffffffffffffffffffffff1615155b1561270a576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082610160015165ffffffffffff1611801561273357504282610160015165ffffffffffff16105b1561276a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af115801561280a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282e91906139f4565b600081815260026020818152604080842080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825589840151948201805473ffffffffffffffffffffffffffffffffffffffff968716908316179055895160018301805491871691909216179055888201516003808301805460e08d0151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff000000000000000000000000000000000000000000909116939097169290921795909517905561010089015160048201559290915290912060808601519293509091620186a065ffffffffffff9190911610158061294c57508460a0015165ffffffffffff16856080015165ffffffffffff16115b15612983576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808501516001820180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff16660100000000000065ffffffffffff841602179055606086015160208701518751600093849384936129e3938a93612f9f565b60608b015187547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178755600487018290556003870181905560a08b01519295509093509150620186a065ffffffffffff9091161115612a88576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612ab18860a00151620186a0612a9e91906139cd565b849065ffffffffffff16620186a0612f41565b600285015560065461018089015165ffffffffffff670100000000000000909204821691161080612af9575060065461012089015165ffffffffffff61010090920482169116105b80612b1d575087610180015165ffffffffffff1688610120015165ffffffffffff16115b15612b54576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008860e00151612b6a57886101000151612ba4565b612ba482612b978b60800151620186a0612b8491906139cd565b879065ffffffffffff16620186a0612f41565b6101008c01519190612de6565b9050612bd589610120015165ffffffffffff168a610180015165ffffffffffff1683612de69092919063ffffffff16565b600587015560c0890151620186a065ffffffffffff9091161115612c25576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861012001518960c001518a6101800151612c409190613a8d565b612c4a9190613abb565b6001860180546101408c01517fffffffffffffffffffffffffffff000000000000ffffffffffff0000000000009091166c0100000000000000000000000065ffffffffffff948516027fffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000016179083161790556101608a01516000911615612cd657896101600151612cd8565b425b86547fffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000065ffffffffffff8316021787556101808b0151909150612d329082613ae0565b865479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff9283160217875560208b8101518c516101408e01516040519416845273ffffffffffffffffffffffffffffffffffffffff918216939116918b917f9cc08aa705173351ee44462d57949faf65814067be71f3271ec1f5636f9efa2d910160405180910390a4509598975050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612e3d5760008411612e3257600080fd5b508290049050610aae565b808411612e4957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000818152600360209081526040808320805479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a0100000000000000000000000000000000000000000000000000004265ffffffffffff160217905560029091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6000612f4e848484612de6565b905060008280612f6057612f60613a4a565b8486091115610aae577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110612f9557600080fd5b6001019392505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ff0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130149190613b0a565b905060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130879190613b0a565b905060068260ff16108061309e575060128260ff16115b156130d5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff1610806130ea575060128160ff16115b15613121576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff89161580613159575073ffffffffffffffffffffffffffffffffffffffff89163b155b15613190576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5538adb7000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff898116602483015288811660448301528a1690635538adb790606401600060405180830381600087803b15801561320857600080fd5b505af115801561321c573d6000803e3d6000fd5b50506040517f7a3c4c17000000000000000000000000000000000000000000000000000000008152600481018d90526000925073ffffffffffffffffffffffffffffffffffffffff8c169150637a3c4c1790602401602060405180830381865afa15801561328e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b291906139f4565b9050806000036132ee576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f3f47e662000000000000000000000000000000000000000000000000000000008152600481018c905260009073ffffffffffffffffffffffffffffffffffffffff8c1690633f47e66290602401602060405180830381865afa15801561335c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133809190613b0a565b905060068160ff161080613397575060128160ff16115b156133ce576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006133fc6133f66133e38b620186a06139cd565b859065ffffffffffff16620186a0612f41565b836134dd565b905061340781613b2d565b60000b8260000b13158061341e575060188160000b135b15613455576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082613463600284613b6b565b61346e906024613bdf565b6134789190613bdf565b61348390600a613d61565b90506000613492600284613b6b565b8661349e896024613d70565b6134a89190613bdf565b6134b29190613bdf565b6134bd90600a613d61565b90506134c98286613a0d565b9f919e509c509a5050505050505050505050565b6000805b600a8410613508576134f4600a85613a79565b93508061350081613dd1565b9150506134e1565b610c8f8382613bdf565b60006020828403121561352457600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461062d57600080fd5b80356135588161352b565b919050565b60006020828403121561356f57600080fd5b8135610aae8161352b565b65ffffffffffff8116811461062d57600080fd5b80356135588161357a565b6000602082840312156135ab57600080fd5b8135610aae8161357a565b600080602083850312156135c957600080fd5b823567ffffffffffffffff808211156135e157600080fd5b818501915085601f8301126135f557600080fd5b81358181111561360457600080fd5b86602082850101111561361657600080fd5b60209290920196919550909350505050565b801515811461062d57600080fd5b803561355881613628565b60006020828403121561365357600080fd5b8135610aae81613628565b6000806080838503121561367157600080fd5b823591508360808401111561368557600080fd5b50926020919091019150565b600080604083850312156136a457600080fd5b82356136af8161352b565b915060208301356136bf81613628565b809150509250929050565b600080604083850312156136dd57600080fd5b8235915060208301356136bf8161352b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715613742576137426136ef565b60405290565b600060c0828403121561375a57600080fd5b82601f83011261376957600080fd5b60405160c0810181811067ffffffffffffffff8211171561378c5761378c6136ef565b6040528060c08401858111156137a157600080fd5b845b818110156137ce57803563ffffffff811681146137c05760008081fd5b8352602092830192016137a3565b509195945050505050565b6000806000606084860312156137ee57600080fd5b833592506020840135915060408401356138078161352b565b809150509250925092565b60008060006060848603121561382757600080fd5b505081359360208301359350604090920135919050565b60006101a0828403121561385157600080fd5b61385961371e565b6138628361354d565b81526138706020840161354d565b60208201526138816040840161354d565b60408201526138926060840161354d565b60608201526138a36080840161358e565b60808201526138b460a0840161358e565b60a08201526138c560c0840161358e565b60c08201526138d660e08401613636565b60e082015261010083810135908201526101206138f481850161358e565b9082015261014061390684820161358e565b9082015261016061391884820161358e565b9082015261018061392a84820161358e565b908201529392505050565b60006020828403121561394757600080fd5b8151610aae81613628565b60006020828403121561396457600080fd5b8151610aae8161357a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156139b0576139b061396f565b500390565b600082198211156139c8576139c861396f565b500190565b600065ffffffffffff838116908316818110156139ec576139ec61396f565b039392505050565b600060208284031215613a0657600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a4557613a4561396f565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082613a8857613a88613a4a565b500490565b600065ffffffffffff80831681851681830481118215151615613ab257613ab261396f565b02949350505050565b600065ffffffffffff80841680613ad457613ad4613a4a565b92169190910492915050565b600065ffffffffffff808316818516808303821115613b0157613b0161396f565b01949350505050565b600060208284031215613b1c57600080fd5b815160ff81168114610aae57600080fd5b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808103613b6257613b6261396f565b60000392915050565b60008160000b8360000b80613b8257613b82613a4a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083141615613bd657613bd661396f565b90059392505050565b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001831281151615613c2257613c2261396f565b81607f018313811615613c3757613c3761396f565b5090039392505050565b600181815b80851115613c9a57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115613c8057613c8061396f565b80851615613c8d57918102915b93841c9390800290613c46565b509250929050565b600082613cb157506001610a68565b81613cbe57506000610a68565b8160018114613cd45760028114613cde57613cfa565b6001915050610a68565b60ff841115613cef57613cef61396f565b50506001821b610a68565b5060208310610133831016604e8410600b8410161715613d1d575081810a610a68565b613d278383613c41565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115613d5957613d5961396f565b029392505050565b6000610aae60ff841683613ca2565b60008160000b8360000b6000821282607f03821381151615613d9457613d9461396f565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80038212811615613dc857613dc861396f565b50019392505050565b60008160000b607f8103613de757613de761396f565b6001019291505056fea26469706673582212201bb90a04526531e05fbc98cd48056cc254ed364e6289eefca3ea3ed72c6a9a4964736f6c634300080f0033",
    "sourceMap": "1227:928:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13199:183:43;;;;;;:::i;:::-;;:::i;:::-;;1936:147:22;;;;;;:::i;:::-;;:::i;26992:124:43:-;;;;;;:::i;:::-;27062:7;27088:12;;;:7;:12;;;;;:21;;;;26992:124;;;;895:25:124;;;883:2;868:18;26992:124:43;;;;;;;;26266:239;;;;;;:::i;:::-;;:::i;:::-;;;1096:14:124;;1089:22;1071:41;;1059:2;1044:18;26266:239:43;931:187:124;26841:109:43;26932:11;26841:109;;;1324:42:124;1312:55;;;1294:74;;1282:2;1267:18;26841:109:43;1123:251:124;23015:207:43;;;;;;:::i;:::-;;:::i;13418:365::-;;;;;;:::i;:::-;;:::i;1609:544:37:-;;;;;;:::i;:::-;;:::i;24099:589:43:-;;;;;;:::i;:::-;;:::i;3469:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14526:196;;;;;;:::i;:::-;;:::i;26547:113::-;;;;;;:::i;:::-;26609:7;26635:12;;;:7;:12;;;;;:18;;;;26547:113;3328:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14282:86;;;;;;:::i;:::-;;;;1496:434:22;;;;;;:::i;:::-;;:::i;26020:204:43:-;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;;;;;23264:115:43;;;;;;:::i;:::-;23330:7;23356:10;;;:5;:10;;;;;;;;:16;;;23264:115;26702:97;26785:7;26702:97;;22407:572;;;;;;:::i;:::-;;:::i;:::-;;;;4398:42:124;4467:15;;;4449:34;;4519:15;;;4514:2;4499:18;;4492:43;4571:15;;;4551:18;;;4544:43;;;;4623:15;;4618:2;4603:18;;4596:43;4688:14;4676:27;;;4670:3;4655:19;;4648:56;4735:3;4720:19;;4713:35;;;;4375:3;4360:19;22407:572:43;4073:681:124;15036:163:43;;;;;;:::i;:::-;;:::i;3695:27::-;;;;;;;;;3047:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5164:42:124;5233:15;;;5215:34;;5285:15;;;5280:2;5265:18;;5258:43;5337:15;;;5317:18;;;5310:43;;;;5389:15;;;;5384:2;5369:18;;5362:43;5449:14;;5442:22;5436:3;5421:19;;5414:51;5496:3;5481:19;;5474:35;5540:3;5525:19;;5518:35;5584:3;5569:19;;5562:35;;;;5628:3;5613:19;;5606:35;;;;5141:3;5126:19;3047:45:43;4759:888:124;14764:230:43;;;;;;:::i;:::-;;:::i;12958:199::-;;;;;;:::i;:::-;;:::i;14415:69::-;;;;;;:::i;:::-;15036:163;;23421:642;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;;;;;3169:42:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8790::124;8778:55;;;8760:74;;8853:14;8903:15;;;8898:2;8883:18;;8876:43;8955:15;;;8935:18;;;8928:43;;;;9007:15;;;9002:2;8987:18;;8980:43;9060:15;;;9054:3;9039:19;;9032:44;9113:15;;;;9107:3;9092:19;;9085:44;9160:3;9145:19;;9138:35;;;;9204:3;9189:19;;9182:35;;;;9248:3;9233:19;;9226:35;8747:3;8732:19;3169:42:43;8378:889:124;24730:1248:43;;;;;;:::i;:::-;;:::i;3846:32::-;;;;;;;;;;;;;;;9446:14:124;9434:27;;;9416:46;;9404:2;9389:18;3846:32:43;9272:196:124;3931:31:43;;;;;;;;;;;;15291:2297;;;;;;:::i;:::-;;:::i;13819:416::-;;;;;;:::i;:::-;;:::i;13199:183::-;13281:14;;;;:9;:14;;;;;;;;13267:10;:28;13263:67;;13304:26;;;;;;;;;;;;;;13263:67;13361:14;;;;:9;:14;;;;;;;;;13340:7;:12;;;;;;:35;;;;13361:14;;;;13340:35;;;;;;13199:183::o;1936:147:22:-;875:33;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9996:2:124;867:58:22;;;9978:21:124;10035:2;10015:18;;;10008:30;10074:14;10054:18;;;10047:42;10106:18;;867:58:22;;;;;;;;;2010:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;26266:239:43:-;26325:4;26349:12;;;:7;:12;;;;;:21;;;:26;;;;:89;;-1:-1:-1;26391:10:43;;;;:5;:10;;;;;:21;:47;26422:15;26391:47;;:21;;;;;:47;26349:89;:148;;;;-1:-1:-1;26454:10:43;;;;:5;:10;;;;;:16;:43;26481:15;26454:43;;:16;;;;;:43;;26349:148;26341:157;26266:239;-1:-1:-1;;26266:239:43:o;23015:207::-;23079:7;23098:13;23114:24;23134:3;23114:19;:24::i;:::-;23165:10;;;;:5;:10;;;;;:19;;;23098:40;;-1:-1:-1;23157:27:43;;23156:59;;23196:10;;;;:5;:10;;;;;:19;;;23156:59;;;23188:5;23156:59;23149:66;23015:207;-1:-1:-1;;;23015:207:43:o;13418:365::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9996:2:124;867:58:22;;;9978:21:124;10035:2;10015:18;;;10008:30;10074:14;10054:18;;;10047:42;10106:18;;867:58:22;9794:336:124;867:58:22;13661:18:43::1;::::0;::::1;;::::0;;::::1;::::0;::::1;13649:30:::0;;::::1;;::::0;:52:::1;;;13695:6;13683:9;:18;;;13649:52;13645:91;;;13710:26;;;;;;;;;;;;;;13645:91;13747:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;13418:365::o;1609:544:37:-;1682:7;;1804:35;;;;1815:7;1804:35;:::i;:::-;1775:64;;1931:6;:14;;;:19;;1949:1;1931:19;;:83;;;;;1972:6;1955;:14;;;:23;;;:58;;;;4101:13:43;1982:31:37;;:6;:14;;;:31;;;1955:58;1927:134;;;2035:26;;;;;;;;;;;;;;1927:134;2125:21;2139:6;2125:13;:21::i;:::-;2118:28;1609:544;-1:-1:-1;;;;1609:544:37:o;24099:589:43:-;24161:7;24209:13;24225:16;24237:3;24225:11;:16::i;:::-;24209:32;;24252:24;24279:7;:12;24287:3;24279:12;;;;;;;;;;;24252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24301:21;24325:5;:10;24331:3;24325:10;;;;;;;;;;;24301:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24427:16;24446:6;:22;;;:108;;24539:6;:15;;;24446:108;;;24506:10;;;;24483:15;;;;:41;;24518:5;24483:22;:41::i;:::-;24427:127;;24643:8;24624:6;:16;;;:27;:57;;24665:6;:16;;;24624:57;;;24654:8;24624:57;24617:64;24099:589;-1:-1:-1;;;;;;24099:589:43:o;14526:196::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9996:2:124;867:58:22;;;9978:21:124;10035:2;10015:18;;;10008:30;10074:14;10054:18;;;10047:42;10106:18;;867:58:22;9794:336:124;867:58:22;14690:15:43::1;:25:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;14526:196::o;1496:434:22:-;1767:5;;;;1753:10;:19;;:76;;-1:-1:-1;1776:9:22;;:53;;;;;1794:10;1776:53;;;11641:34:124;1814:4:22;11691:18:124;;;11684:43;1776:9:22;1821:7;;;11743:18:124;;;11736:107;1776:9:22;;;;;:17;;11553:18:124;;1776:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;;;;;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:22;1496:434;:::o;26020:204:43:-;26077:4;26111:10;;;:5;:10;;;;;:18;;;;;4101:13;26147:25;;;26146:71;;26202:15;26191:7;:26;;26146:71;;;26176:12;;26139:78;-1:-1:-1;;26020:204:43:o;22407:572::-;22531:13;22751:12;;;:7;:12;;;;;;;;22724:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22916:10;;;;;;;;;;:18;;;;22531:13;;;;;;;;;;22724:39;;;;22916:18;;22948:14;22751:12;22948:9;:14::i;:::-;22773:199;;;;-1:-1:-1;22773:199:43;;-1:-1:-1;22773:199:43;-1:-1:-1;22773:199:43;-1:-1:-1;22773:199:43;;-1:-1:-1;22407:572:43;-1:-1:-1;;;22407:572:43:o;15036:163::-;15116:12;;;;:7;:12;;;;;:18;;;15102:10;:32;15098:73;;15143:28;;;;;;;;;;;;;;15098:73;15181:11;15188:3;15181:6;:11::i;14764:230::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9996:2:124;867:58:22;;;9978:21:124;10035:2;10015:18;;;10008:30;10074:14;10054:18;;;10047:42;10106:18;;867:58:22;9794:336:124;867:58:22;14949:28:43::1;::::0;;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:38;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;14764:230::o;12958:199::-;13059:12;;;;:7;:12;;;;;:18;;;13045:10;:32;13041:73;;13086:28;;;;;;;;;;;;;;13041:73;13124:14;;;;:9;:14;;;;;;:26;;;;;;;;;;;;;;12958:199::o;23421:642::-;23661:25;;;;;:14;1312:55:124;;;23661:25:43;;;1294:74:124;-1:-1:-1;;;;23646:46:43;;23661:7;:14;;;;;;1267:18:124;;23661:25:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23646:7;;:46;;23688:3;23646:14;:46::i;:::-;23702:14;23742:10;;;:5;:10;;;;;;;:16;;23632:60;;-1:-1:-1;23702:14:43;23719:58;;23760:16;23748:3;23760:11;:16::i;:::-;23720:13;23730:3;23720:7;:13;:::i;:::-;23719:22;:58;:22;:58::i;:::-;23702:75;;23935:14;23945:3;23935:9;:14::i;:::-;23926:6;:23;23922:135;;;23972:30;;;;;;;;;;;;;;23922:135;24040:6;-1:-1:-1;24033:13:43;;-1:-1:-1;24033:13:43;24730:1248;24812:7;25005:24;25032:7;:12;25040:3;25032:12;;;;;;;;;;;25005:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25054:21;25078:5;:10;25084:3;25078:10;;;;;;;;;;;25054:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25098:13;25114:16;25126:3;25114:11;:16::i;:::-;25098:32;;25140:21;25164:6;:22;;;:108;;25261:10;;;;25231:15;;;;:41;;25254:5;;25231:22;:41::i;:::-;25164:108;;;25201:6;:15;;;25164:108;25140:132;;25282:16;25301:42;25325:5;25332:4;:10;;;25301:6;:16;;;:23;;:42;;;;;:::i;:::-;25282:61;;25353:22;25394:8;25378:13;:24;:51;;25421:8;25378:51;;;25405:13;25378:51;25856:25;;;;;:14;1312:55:124;;;25856:25:43;;;1294:74:124;25353:76:43;;-1:-1:-1;;;25821:103:43;;25856:7;:14;;;;;;1267:18:124;;25856:25:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25821:14;;:103;;4167:5;25821:21;:103::i;:::-;25798:126;-1:-1:-1;25942:29:43;25798:126;25942:14;:29;:::i;:::-;25935:36;24730:1248;-1:-1:-1;;;;;;;;;;24730:1248:43:o;15291:2297::-;15423:14;15453:10;:30;15475:7;15453:30;;15449:69;;15492:26;;;;;;;;;;;;;;15449:69;15529:25;15557:12;;;:7;:12;;;;;;;;15603:5;:10;;;;;;;15579:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15712:19;;;;15557:12;;15579:34;;15712:19;:33;;;;:70;;-1:-1:-1;15769:12:43;;;;15750:32;;;;:18;:32;;;;;;;;15749:33;15712:70;15708:121;;;15803:26;;;;;;;;;;;;;;15708:121;15895:11;15902:3;15895:6;:11::i;:::-;15890:53;;15915:28;;;;;;;;;;;;;;15890:53;16001:13;16017:16;16029:3;16017:11;:16::i;:::-;16315:10;;;;16001:32;;-1:-1:-1;16300:33:43;;:7;;16001:32;16300:14;:33::i;:::-;16291:42;;16418:13;16409:6;:22;16405:69;;;16440:34;;;;;;;;;;;;;;16405:69;16651:6;:16;;;16642:6;:25;16638:68;;;16676:30;;;;;;;;;;;;;;16638:68;17066:22;;;;;;;;;:77;;17128:6;:15;;;17119:6;:24;17066:77;;;17101:6;:15;;;17091:7;:25;17066:77;17062:132;;;17164:30;;;;;;;;;;;;;;17062:132;17316:22;;;;;;;;;:41;;17351:6;17316:41;;;17341:7;17316:41;17297:15;;;:60;;;;;;;;-1:-1:-1;;17509:16:43;;;:27;;;;;;;;17550:11;;;;:21;;;;;;-1:-1:-1;17565:6:43;15291:2297;-1:-1:-1;15291:2297:43:o;13819:416::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9996:2:124;867:58:22;;;9978:21:124;10035:2;10015:18;;;10008:30;10074:14;10054:18;;;10047:42;10106:18;;867:58:22;9794:336:124;867:58:22;14086:17:43::1;::::0;::::1;::::0;;;::::1;::::0;::::1;14067:36:::0;;::::1;;::::0;:66:::1;;;14126:7;14107:16;:26;;;14067:66;14063:117;;;14154:26;;;;;;;;;;;;;;14063:117;14191:18;:37:::0;;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;13819:416::o;950:540:22:-;1070:9;;1037:4;;1070:9;;1388:27;;;;;:77;;-1:-1:-1;1419:46:22;;;;;:12;11659:15:124;;;1419:46:22;;;11641:34:124;1446:4:22;11691:18:124;;;11684:43;11775:66;11763:79;;11743:18;;;11736:107;1419:12:22;;;;;11553:18:124;;1419:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:22;;;1470:13;;;1478:5;;1470:13;1380:103;;;950:540;;;;:::o;18346:3167:43:-;18411:7;18430:24;18457:7;:12;18465:3;18457:12;;;;;;;;;;;18430:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18479:21;18503:5;:10;18509:3;18503:10;;;;;;;;;;;18479:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18616:13;18632:162;18733:4;:17;;;4167:5;18711:39;;;;:::i;:::-;18665:21;;;;18633:11;;:29;;;;;;;;895:25:124;;;18632:162:43;;;;;;4167:5;;18665:21;18633:24;;;;;868:18:124;;18633:29:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;;:::i;:::-;18632:64;:162;:64;:162::i;:::-;18616:178;;18841:5;18850:1;18841:10;18837:51;;18860:28;;;;;;;;;;;;;;18837:51;19008:23;19065:6;:22;;;:55;;19109:6;:11;;;19065:55;;;19090:6;:16;;;19065:55;19034:6;:15;;;:87;;;;:::i;:::-;19225:15;;;;19008:113;;-1:-1:-1;19217:24:43;;19196:18;19275:28;19288:15;19217:24;19275:28;:::i;:::-;19251:52;;19543:24;19570:105;19606:13;19654:4;:10;;;19646:19;;19633:10;:32;;;;:::i;:::-;19570:15;;:105;:22;:105::i;:::-;19543:132;;20761:18;20812:6;:15;;;20793:16;:34;20789:653;;;20985:15;20949:6;:15;;;20930:16;:34;;;;:::i;:::-;20911:4;:15;;;:54;;;;;;:::i;:::-;20910:90;;;;:::i;:::-;20872:128;;4167:5;20872:128;:::i;:::-;20843:157;;20789:653;;;21234:14;21326:15;21289:16;21271:6;:15;;;:34;;;;:::i;:::-;21252:4;:15;;;:54;;;;;;:::i;:::-;21251:90;;;;:::i;:::-;21234:107;-1:-1:-1;4167:5:43;21368:28;-1:-1:-1;21368:63:43;;21430:1;21368:63;;;21399:28;21421:6;4167:5;21399:28;:::i;:::-;21355:76;;21017:425;20789:653;21459:47;:5;21474:10;4167:5;21459:14;:47::i;5051:4041::-;5286:15;;5121:7;;5286:15;;5281:62;;5310:33;;;;;;;;;;;;;;5281:62;5450:10;5431:30;;;;:18;:30;;;;;;;;5430:31;:69;;;;-1:-1:-1;5465:20:43;;;;:34;;;;5430:69;5426:124;;;5524:26;;;;;;;;;;;;;;5426:124;5640:1;5624:7;:13;;;:17;;;:52;;;;;5661:15;5645:7;:13;;;:31;;;5624:52;5620:107;;;5701:26;;;;;;;;;;;;;;5620:107;5855:19;;5876:18;;;;5828:67;;;;;:26;14059:15:124;;;5828:67:43;;;14041:34:124;14111:15;;;14091:18;;;14084:43;5809:16:43;;5828:11;:26;;;;13953:18:124;;5828:67:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5939:25;5967:17;;;:7;:17;;;;;;;;5994:25;;;;;;6009:10;5994:25;;;6049:18;;;;6029:17;;;:38;;5994:25;6029:38;;;;;;;;;6098:19;;5994:25;6077:18;;:40;;;;;;;;;;;;6149:20;;;;6127:19;;;;:42;;6204:23;;;;6179:48;;;;;;;;6127:42;;;;6179:48;;;;;;;;;;5994:25;6255:16;;;6237:15;;;:34;6388:15;;;;;;;6430:20;;;;5809:86;;-1:-1:-1;5967:17:43;;4167:5;6430:43;;;;;;;;:112;;;6512:7;:30;;;6489:53;;:7;:20;;;:53;;;6430:112;6413:173;;;6560:26;;;;;;;;;;;;;;6413:173;6616:20;;;;6596:17;;;:40;;;;;;;;;;;;6808:14;;;;6836:18;;;;6868:19;;-1:-1:-1;;;;;;6757:174:43;;6786:8;;6757:15;:174::i;:::-;6955:14;;;;6941:28;;;;;;;;;;;6979:21;;;:40;;;7029:10;;;:18;;;7163:30;;;;6698:233;;-1:-1:-1;6979:40:43;;-1:-1:-1;7029:18:43;-1:-1:-1;4167:5:43;7163:52;;;;;7159:91;;;7224:26;;;;;;;;;;;;;;7159:91;7331:141;7389:7;:30;;;4167:5;7367:52;;;;:::i;:::-;7331:5;;7359:61;;4167:5;7331:14;:141::i;:::-;7315:13;;;:157;7548:17;;7529:16;;;;7548:17;;;;;;;7529:36;;;;:96;;-1:-1:-1;7607:18:43;;7581:23;;;;7607:18;;;;;;;7581:44;;;7529:96;:154;;;;7667:7;:16;;;7641:42;;:7;:23;;;:42;;;7529:154;7512:215;;;7701:26;;;;;;;;;;;;;;7512:215;7833:16;7852:7;:23;;;:302;;8138:7;:16;;;7852:302;;;7890:233;7931:5;7954:155;8020:7;:20;;;4167:5;7998:42;;;;:::i;:::-;7954:5;;7990:51;;4167:5;7954:14;:155::i;:::-;7890:16;;;;;:233;:23;:233::i;:::-;7833:321;;8183:110;8220:7;:23;;;8212:32;;8266:7;:16;;;8258:25;;8183:8;:15;;:110;;;;;:::i;:::-;8164:16;;;:129;8360:30;;;;4167:5;8360:52;;;;;8356:91;;;8421:26;;;;;;;;;;;;;;8356:91;8587:7;:23;;;8541:7;:30;;;8522:7;:16;;;:49;;;;:::i;:::-;8521:89;;;;:::i;:::-;8491:15;;;:119;;8669:15;;;;8654:30;;;;8491:119;;;;;;8654:30;;;;;;;;;8709:13;;;;-1:-1:-1;;8709:18:43;;:60;;8756:7;:13;;;8709:60;;;8737:15;8709:60;8779:18;;;;;;;;;;;;8833:16;;;;8779:18;;-1:-1:-1;8825:24:43;;8779:18;8825:24;:::i;:::-;8807:42;;;;;;;;;;;;;9001:18;;;;;8959:19;;9034:15;;;;8902:157;;9434:27:124;;9416:46;;8902:157:43;;;;;;;;8929:8;;8902:157;;9389:18:124;8902:157:43;;;;;;;-1:-1:-1;9077:8:43;;5051:4041;-1:-1:-1;;;;;;;;5051:4041:43:o;742:4147:62:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:62;;;;-1:-1:-1;1787:13:62;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;3784:1;2787;2753:31;;:35;;2752:51;;2909:22;;;;3765:1;:15;;3764:21;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;;;2737:12;3321;;;3317:23;;;3313:31;;;2490:20;;;2479:32;;;3380:12;;;;2537:21;;3053:16;;;;3371:21;;;;4834:11;;;-1:-1:-1;;;;742:4147:62:o;17782:170:43:-;17830:10;;;;:5;:10;;;;;;;;:47;;;;;17861:15;17830:47;;;;;;17887:7;:12;;;;;;:21;;:25;;;17928:17;17830:10;;17928:17;;;17782:170;:::o;5171:353:62:-;5285:14;5320:25;5327:1;5330;5333:11;5320:6;:25::i;:::-;5311:34;;5411:1;5396:11;5383:25;;;;;:::i;:::-;5393:1;5390;5383:25;:29;5379:129;;;5449:17;5440:6;:26;5432:35;;;;;;5485:8;;5171:353;;;;;:::o;9098:3818:43:-;9311:7;9332;9353;9432:25;9460:12;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9432:51;;9493:24;9520:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9493:49;;9579:1;9557:19;:23;;;:51;;;;9606:2;9584:19;:24;;;9557:51;9553:90;;;9617:26;;;;;;;;;;;;;;9553:90;9678:1;9657:18;:22;;;:49;;;;9704:2;9683:18;:23;;;9657:49;9653:88;;;9715:26;;;;;;;;;;;;;;9653:88;9834:30;;;;;:67;;-1:-1:-1;9868:28:43;;;;:33;9834:67;9830:118;;;9922:26;;;;;;;;;;;;;;9830:118;9999:54;;;;;;;;15356:25:124;;;9999:22:43;15478:15:124;;;15458:18;;;15451:43;15530:15;;;15510:18;;;15503:43;9999:22:43;;;;;15329:18:124;;9999:54:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10162:25:43;;;;;;;;895::124;;;10139:20:43;;-1:-1:-1;10162:20:43;;;;-1:-1:-1;10162:20:43;;868:18:124;;10162:25:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10139:48;;10201:12;10217:1;10201:17;10197:58;;10227:28;;;;;;;;;;;;;;10197:58;10378:21;;;;;;;;895:25:124;;;10355:20:43;;10378:16;;;;;;868:18:124;;10378:21:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10355:44;;10430:1;10413:14;:18;;;:41;;;;10452:2;10435:14;:19;;;10413:41;10409:80;;;10463:26;;;;;;;;;;;;;;10409:80;11321:18;11342:212;11373:143;11420:35;11442:13;4167:5;11420:35;:::i;:::-;11373:12;;11412:44;;4167:5;11373:21;:143::i;:::-;11530:14;11342:17;:212::i;:::-;11321:233;-1:-1:-1;11916:14:43;11321:233;11916:14;:::i;:::-;11892:38;;11897:14;11892:38;;;;:60;;;;11950:2;11934:13;:18;;;11892:60;11888:111;;;11973:26;;;;;;;;;;;;;;11888:111;12276:24;12343:14;12318:17;12334:1;12318:13;:17;:::i;:::-;12313:22;;:2;:22;:::i;:::-;:45;;;;:::i;:::-;12303:56;;:2;:56;:::i;:::-;12276:83;-1:-1:-1;12715:13:43;12815:17;12831:1;12815:13;:17;:::i;:::-;12793:18;12755:30;12765:19;12755:2;:30;:::i;:::-;:57;;;;:::i;:::-;:77;;;;:::i;:::-;12731:102;;:2;:102;:::i;:::-;12715:118;-1:-1:-1;12852:31:43;12867:16;12852:12;:31;:::i;:::-;12844:65;12885:16;;-1:-1:-1;12885:16:43;-1:-1:-1;9098:3818:43;-1:-1:-1;;;;;;;;;;;9098:3818:43:o;21824:484::-;21911:4;21927:13;21950:90;21967:2;21957:6;:12;21950:90;;21994:11;22003:2;21994:6;:11;:::i;:::-;21985:20;-1:-1:-1;22019:10:43;;;;:::i;:::-;;;;21950:90;;;22271:30;22287:13;22271:8;:30;:::i;14:180:124:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:124;;14:180;-1:-1:-1;14:180:124:o;199:154::-;285:42;278:5;274:54;267:5;264:65;254:93;;343:1;340;333:12;358:134;426:20;;455:31;426:20;455:31;:::i;:::-;358:134;;;:::o;497:247::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;664:9;651:23;683:31;708:5;683:31;:::i;1379:125::-;1464:14;1457:5;1453:26;1446:5;1443:37;1433:65;;1494:1;1491;1484:12;1509:132;1576:20;;1605:30;1576:20;1605:30;:::i;1646:245::-;1704:6;1757:2;1745:9;1736:7;1732:23;1728:32;1725:52;;;1773:1;1770;1763:12;1725:52;1812:9;1799:23;1831:30;1855:5;1831:30;:::i;1896:591::-;1966:6;1974;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2083:9;2070:23;2112:18;2153:2;2145:6;2142:14;2139:34;;;2169:1;2166;2159:12;2139:34;2207:6;2196:9;2192:22;2182:32;;2252:7;2245:4;2241:2;2237:13;2233:27;2223:55;;2274:1;2271;2264:12;2223:55;2314:2;2301:16;2340:2;2332:6;2329:14;2326:34;;;2356:1;2353;2346:12;2326:34;2401:7;2396:2;2387:6;2383:2;2379:15;2375:24;2372:37;2369:57;;;2422:1;2419;2412:12;2369:57;2453:2;2445:11;;;;;2475:6;;-1:-1:-1;1896:591:124;;-1:-1:-1;;;;1896:591:124:o;2492:118::-;2578:5;2571:13;2564:21;2557:5;2554:32;2544:60;;2600:1;2597;2590:12;2615:128;2680:20;;2709:28;2680:20;2709:28;:::i;2748:241::-;2804:6;2857:2;2845:9;2836:7;2832:23;2828:32;2825:52;;;2873:1;2870;2863:12;2825:52;2912:9;2899:23;2931:28;2953:5;2931:28;:::i;3225:320::-;3317:6;3325;3378:3;3366:9;3357:7;3353:23;3349:33;3346:53;;;3395:1;3392;3385:12;3346:53;3431:9;3418:23;3408:33;;3477:7;3471:3;3460:9;3456:19;3453:32;3450:52;;;3498:1;3495;3488:12;3450:52;-1:-1:-1;3225:320:124;3536:2;3521:18;;;;;-1:-1:-1;3225:320:124:o;5652:382::-;5717:6;5725;5778:2;5766:9;5757:7;5753:23;5749:32;5746:52;;;5794:1;5791;5784:12;5746:52;5833:9;5820:23;5852:31;5877:5;5852:31;:::i;:::-;5902:5;-1:-1:-1;5959:2:124;5944:18;;5931:32;5972:30;5931:32;5972:30;:::i;:::-;6021:7;6011:17;;;5652:382;;;;;:::o;6039:315::-;6107:6;6115;6168:2;6156:9;6147:7;6143:23;6139:32;6136:52;;;6184:1;6181;6174:12;6136:52;6220:9;6207:23;6197:33;;6280:2;6269:9;6265:18;6252:32;6293:31;6318:5;6293:31;:::i;6359:184::-;6411:77;6408:1;6401:88;6508:4;6505:1;6498:15;6532:4;6529:1;6522:15;6548:247;6615:2;6609:9;6657:3;6645:16;;6691:18;6676:34;;6712:22;;;6673:62;6670:88;;;6738:18;;:::i;:::-;6774:2;6767:22;6548:247;:::o;6800:935::-;6881:6;6934:3;6922:9;6913:7;6909:23;6905:33;6902:53;;;6951:1;6948;6941:12;6902:53;7000:7;6993:4;6982:9;6978:20;6974:34;6964:62;;7022:1;7019;7012:12;6964:62;7055:2;7049:9;7097:3;7089:6;7085:16;7167:6;7155:10;7152:22;7131:18;7119:10;7116:34;7113:62;7110:88;;;7178:18;;:::i;:::-;7214:2;7207:22;7249:6;7293:3;7278:19;;7309;;;7306:39;;;7341:1;7338;7331:12;7306:39;7365:9;7383:321;7399:6;7394:3;7391:15;7383:321;;;7481:3;7468:17;7529:10;7522:5;7518:22;7511:5;7508:33;7498:131;;7583:1;7612:2;7608;7601:14;7498:131;7642:18;;7689:4;7680:14;;;;7416;7383:321;;;-1:-1:-1;7723:6:124;;6800:935;-1:-1:-1;;;;;6800:935:124:o;7740:383::-;7817:6;7825;7833;7886:2;7874:9;7865:7;7861:23;7857:32;7854:52;;;7902:1;7899;7892:12;7854:52;7938:9;7925:23;7915:33;;7995:2;7984:9;7980:18;7967:32;7957:42;;8049:2;8038:9;8034:18;8021:32;8062:31;8087:5;8062:31;:::i;:::-;8112:5;8102:15;;;7740:383;;;;;:::o;9473:316::-;9550:6;9558;9566;9619:2;9607:9;9598:7;9594:23;9590:32;9587:52;;;9635:1;9632;9625:12;9587:52;-1:-1:-1;;9658:23:124;;;9728:2;9713:18;;9700:32;;-1:-1:-1;9779:2:124;9764:18;;;9751:32;;9473:316;-1:-1:-1;9473:316:124:o;10135:1240::-;10225:6;10278:3;10266:9;10257:7;10253:23;10249:33;10246:53;;;10295:1;10292;10285:12;10246:53;10321:17;;:::i;:::-;10361:29;10380:9;10361:29;:::i;:::-;10354:5;10347:44;10423:38;10457:2;10446:9;10442:18;10423:38;:::i;:::-;10418:2;10411:5;10407:14;10400:62;10494:38;10528:2;10517:9;10513:18;10494:38;:::i;:::-;10489:2;10482:5;10478:14;10471:62;10565:38;10599:2;10588:9;10584:18;10565:38;:::i;:::-;10560:2;10553:5;10549:14;10542:62;10637:38;10670:3;10659:9;10655:19;10637:38;:::i;:::-;10631:3;10624:5;10620:15;10613:63;10709:38;10742:3;10731:9;10727:19;10709:38;:::i;:::-;10703:3;10696:5;10692:15;10685:63;10781:38;10814:3;10803:9;10799:19;10781:38;:::i;:::-;10775:3;10768:5;10764:15;10757:63;10853:36;10884:3;10873:9;10869:19;10853:36;:::i;:::-;10847:3;10836:15;;10829:61;10909:3;10957:18;;;10944:32;10928:14;;;10921:56;10996:3;11031:37;11049:18;;;11031:37;:::i;:::-;11015:14;;;11008:61;11088:3;11123:37;11141:18;;;11123:37;:::i;:::-;11107:14;;;11100:61;11180:3;11215:37;11233:18;;;11215:37;:::i;:::-;11199:14;;;11192:61;11272:3;11307:37;11325:18;;;11307:37;:::i;:::-;11291:14;;;11284:61;11295:5;10135:1240;-1:-1:-1;;;10135:1240:124:o;11854:245::-;11921:6;11974:2;11962:9;11953:7;11949:23;11945:32;11942:52;;;11990:1;11987;11980:12;11942:52;12022:9;12016:16;12041:28;12063:5;12041:28;:::i;12104:249::-;12173:6;12226:2;12214:9;12205:7;12201:23;12197:32;12194:52;;;12242:1;12239;12232:12;12194:52;12274:9;12268:16;12293:30;12317:5;12293:30;:::i;12358:184::-;12410:77;12407:1;12400:88;12507:4;12504:1;12497:15;12531:4;12528:1;12521:15;12547:125;12587:4;12615:1;12612;12609:8;12606:34;;;12620:18;;:::i;:::-;-1:-1:-1;12657:9:124;;12547:125::o;12677:128::-;12717:3;12748:1;12744:6;12741:1;12738:13;12735:39;;;12754:18;;:::i;:::-;-1:-1:-1;12790:9:124;;12677:128::o;12810:225::-;12849:4;12878:14;12942:10;;;;12912;;12964:12;;;12961:38;;;12979:18;;:::i;:::-;13016:13;;12810:225;-1:-1:-1;;;12810:225:124:o;13040:184::-;13110:6;13163:2;13151:9;13142:7;13138:23;13134:32;13131:52;;;13179:1;13176;13169:12;13131:52;-1:-1:-1;13202:16:124;;13040:184;-1:-1:-1;13040:184:124:o;13229:228::-;13269:7;13395:1;13327:66;13323:74;13320:1;13317:81;13312:1;13305:9;13298:17;13294:105;13291:131;;;13402:18;;:::i;:::-;-1:-1:-1;13442:9:124;;13229:228::o;13462:184::-;13514:77;13511:1;13504:88;13611:4;13608:1;13601:15;13635:4;13632:1;13625:15;13651:120;13691:1;13717;13707:35;;13722:18;;:::i;:::-;-1:-1:-1;13756:9:124;;13651:120::o;14138:266::-;14177:7;14209:14;14250:2;14247:1;14243:10;14280:2;14277:1;14273:10;14336:3;14332:2;14328:12;14323:3;14320:21;14313:3;14306:11;14299:19;14295:47;14292:73;;;14345:18;;:::i;:::-;14385:13;;14138:266;-1:-1:-1;;;;14138:266:124:o;14409:195::-;14448:1;14474:14;14515:2;14512:1;14508:10;14537:3;14527:37;;14544:18;;:::i;:::-;14582:10;;14578:20;;;;;14409:195;-1:-1:-1;;14409:195:124:o;14609:232::-;14648:3;14676:14;14717:2;14714:1;14710:10;14747:2;14744:1;14740:10;14778:3;14774:2;14770:12;14765:3;14762:21;14759:47;;;14786:18;;:::i;:::-;14822:13;;14609:232;-1:-1:-1;;;;14609:232:124:o;14846:273::-;14914:6;14967:2;14955:9;14946:7;14942:23;14938:32;14935:52;;;14983:1;14980;14973:12;14935:52;15015:9;15009:16;15065:4;15058:5;15054:16;15047:5;15044:27;15034:55;;15085:1;15082;15075:12;15557:237;15590:3;15637:5;15634:1;15623:20;15667:66;15658:7;15655:79;15652:105;;15737:18;;:::i;:::-;15777:1;15773:15;;15557:237;-1:-1:-1;;15557:237:124:o;15799:388::-;15836:1;15877;15874;15863:16;15913:1;15910;15899:16;15934:3;15924:37;;15941:18;;:::i;:::-;16062:66;16057:3;16054:75;15985:66;15980:3;15977:75;15973:157;15970:183;;;16133:18;;:::i;:::-;16167:14;;;15799:388;-1:-1:-1;;;15799:388:124:o;16192:391::-;16229:4;16273:1;16270;16259:16;16309:1;16306;16295:16;16339:1;16334:3;16330:11;16450:3;16382:66;16378:76;16373:3;16369:86;16364:2;16357:10;16353:103;16350:129;;;16459:18;;:::i;:::-;16518:3;16512:4;16508:14;16503:3;16499:24;16495:2;16491:33;16488:59;;;16527:18;;:::i;:::-;-1:-1:-1;16564:13:124;;;16192:391;-1:-1:-1;;;16192:391:124:o;16588:482::-;16677:1;16720:5;16677:1;16734:330;16755:7;16745:8;16742:21;16734:330;;;16874:4;16806:66;16802:77;16796:4;16793:87;16790:113;;;16883:18;;:::i;:::-;16933:7;16923:8;16919:22;16916:55;;;16953:16;;;;16916:55;17032:22;;;;16992:15;;;;16734:330;;;16738:3;16588:482;;;;;:::o;17075:866::-;17124:5;17154:8;17144:80;;-1:-1:-1;17195:1:124;17209:5;;17144:80;17243:4;17233:76;;-1:-1:-1;17280:1:124;17294:5;;17233:76;17325:4;17343:1;17338:59;;;;17411:1;17406:130;;;;17318:218;;17338:59;17368:1;17359:10;;17382:5;;;17406:130;17443:3;17433:8;17430:17;17427:43;;;17450:18;;:::i;:::-;-1:-1:-1;;17506:1:124;17492:16;;17521:5;;17318:218;;17620:2;17610:8;17607:16;17601:3;17595:4;17592:13;17588:36;17582:2;17572:8;17569:16;17564:2;17558:4;17555:12;17551:35;17548:77;17545:159;;;-1:-1:-1;17657:19:124;;;17689:5;;17545:159;17736:34;17761:8;17755:4;17736:34;:::i;:::-;17866:6;17798:66;17794:79;17785:7;17782:92;17779:118;;;17877:18;;:::i;:::-;17915:20;;17075:866;-1:-1:-1;;;17075:866:124:o;17946:140::-;18004:5;18033:47;18074:4;18064:8;18060:19;18054:4;18033:47;:::i;18091:389::-;18128:3;18171:1;18168;18157:16;18207:1;18204;18193:16;18237:1;18232:3;18228:11;18286:3;18280:4;18276:14;18271:3;18267:24;18262:2;18255:10;18251:41;18248:67;;;18295:18;;:::i;:::-;18416:3;18348:66;18344:76;18339:3;18335:86;18331:2;18327:95;18324:121;;;18425:18;;:::i;:::-;-1:-1:-1;18461:13:124;;18091:389;-1:-1:-1;;;18091:389:124:o;18485:178::-;18521:3;18568:5;18565:1;18554:20;18598:4;18589:7;18586:17;18583:43;;18606:18;;:::i;:::-;18655:1;18642:15;;18485:178;-1:-1:-1;;18485:178:124:o",
    "linkReferences": {},
    "immutableReferences": {
      "38006": [
        {
          "start": 686,
          "length": 32
        },
        {
          "start": 10177,
          "length": 32
        }
      ],
      "38009": [
        {
          "start": 1119,
          "length": 32
        },
        {
          "start": 5560,
          "length": 32
        },
        {
          "start": 6822,
          "length": 32
        },
        {
          "start": 7002,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowNewMarkets()": "afa9d3b0",
    "authority()": "bf7e214f",
    "callbackAuthorized(address)": "5dc4d16b",
    "closeMarket(uint256)": "ae418095",
    "createMarket(bytes)": "53c7f8e0",
    "currentCapacity(uint256)": "1c063a6c",
    "getAggregator()": "3ad59dbc",
    "getMarketInfoForPurchase(uint256)": "acc5570c",
    "getTeller()": "9787d107",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "markets(uint256)": "b1283e77",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "maxPayout(uint256)": "57e333ba",
    "minDepositInterval()": "d2040687",
    "minMarketDuration()": "d2bee323",
    "newOwners(uint256)": "6729a41e",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "pullOwnership(uint256)": "10b05317",
    "purchaseBond(uint256,uint256,uint256)": "e007fa97",
    "pushOwnership(uint256,address)": "bcf6cde8",
    "setAllowNewMarkets(bool)": "5f77274e",
    "setAuthority(address)": "7a9e5e4b",
    "setCallbackAuthStatus(address,bool)": "bbbdd95a",
    "setDefaults(uint32[6])": "bd1f3a5e",
    "setIntervals(uint256,uint32[3])": "699e17d9",
    "setMinDepositInterval(uint48)": "f61338f6",
    "setMinMarketDuration(uint48)": "44ee0172",
    "setOwner(address)": "13af4035",
    "terms(uint256)": "c0aa0e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"teller_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auctioneer_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_BadExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InitialPriceLessThanMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MarketNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MaxPayoutExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NewMarketsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotEnoughCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OnlyMarketOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OraclePriceZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldControlVariable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newControlVariable\",\"type\":\"uint256\"}],\"name\":\"Tuned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowNewMarkets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callbackAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAggregator\",\"outputs\":[{\"internalType\":\"contract IBondAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getMarketInfoForPurchase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"maxPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInterval\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketDuration\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchaseBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setAllowNewMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setCallbackAuthStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[6]\",\"name\":\"defaults_\",\"type\":\"uint32[6]\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint32[3]\",\"name\":\"intervals_\",\"type\":\"uint32[3]\"}],\"name\":\"setIntervals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"depositInterval_\",\"type\":\"uint48\"}],\"name\":\"setMinDepositInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"}],\"name\":\"setMinMarketDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"contract IBondOracle\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"baseDiscount\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"decaySpeed\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleConversion\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Fixed-Term Oracle-based SDA is an implementation of the      Bond Base OSDA contract specific to creating bond markets where      purchases vest in a fixed amount of time after purchased (rounded to the day).\",\"kind\":\"dev\",\"methods\":{\"closeMarket(uint256)\":{\"params\":{\"id_\":\"ID of market to close\"}},\"createMarket(bytes)\":{\"details\":\"See specific auctioneer implementations for details on encoding the parameters.\",\"params\":{\"params_\":\"Configuration data needed for market creation, encoded in a bytes array\"},\"returns\":{\"_0\":\"id              ID of new bond market\"}},\"getMarketInfoForPurchase(uint256)\":{\"params\":{\"id_\":\"Market ID\"},\"returns\":{\"callbackAddr\":\"   Address of the callback contract to get tokens for payouts\",\"maxPayout_\":\"      Maximum amount of payout tokens you can purchase in one transaction\",\"owner\":\"          Address of the market owner (tokens transferred from this address if no callback)\",\"payoutToken\":\"    Payout Token (token paid out) for the Market\",\"quoteToken\":\"     Quote Token (token received) for the Market\",\"vesting\":\"        Timestamp or duration for vesting, implementation-dependent\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"marketPrice(uint256)\":{\"details\":\"price is derived from the equation\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market in configured decimals (see MarketParams)\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"maxPayout(uint256)\":{\"details\":\"Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current max payout for the market in payout tokens\"}},\"ownerOf(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"pullOwnership(uint256)\":{\"details\":\"The existing owner must call pushOwnership prior to the newOwner calling this function\",\"params\":{\"id_\":\"Market ID\"}},\"purchaseBond(uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond (after fee has been deducted)\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\"},\"returns\":{\"payout\":\"         Amount of payout token to be received from the bond\"}},\"pushOwnership(uint256,address)\":{\"details\":\"Doesn't change permissions until newOwner calls pullOwnership\",\"params\":{\"id_\":\"Market ID\",\"newOwner_\":\"New address to give ownership to\"}},\"setAllowNewMarkets(bool)\":{\"details\":\"Setting to false and allowing active markets to end will sunset the auctioneer\",\"params\":{\"status_\":\"Allow market creation (true) : Disallow market creation (false)\"}},\"setCallbackAuthStatus(address,bool)\":{\"details\":\"Callback is believed to be safe, but a whitelist is implemented to prevent abuse\",\"params\":{\"creator_\":\"Address of market creator\",\"status_\":\"Allow callback (true) : Disallow callback (false)\"}},\"setDefaults(uint32[6])\":{\"details\":\"The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change\",\"params\":{\"defaults_\":\"Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown\"}},\"setIntervals(uint256,uint32[3])\":{\"details\":\"Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay\",\"params\":{\"id_\":\"Market ID\",\"intervals_\":\"Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely\"}},\"setMinDepositInterval(uint48)\":{\"params\":{\"depositInterval_\":\"Minimum deposit interval in seconds\"}},\"setMinMarketDuration(uint48)\":{\"params\":{\"duration_\":\"Minimum market duration in seconds\"}}},\"title\":\"Bond Fixed-Term Oracle-based Sequential Dutch Auctioneer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowNewMarkets()\":{\"notice\":\"Whether or not the auctioneer allows new markets to be created\"},\"callbackAuthorized(address)\":{\"notice\":\"Whether or not the market creator is authorized to use a callback address\"},\"closeMarket(uint256)\":{\"notice\":\"Disable existing bond marketMust be market owner\"},\"createMarket(bytes)\":{\"notice\":\"Creates a new bond market\"},\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"getAggregator()\":{\"notice\":\"Returns the Aggregator that services the Auctioneer\"},\"getMarketInfoForPurchase(uint256)\":{\"notice\":\"Provides information for the Teller to execute purchases on a Market\"},\"getTeller()\":{\"notice\":\"Returns the Teller that services the Auctioneer\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"markets(uint256)\":{\"notice\":\"Main information pertaining to bond market\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"maxPayout(uint256)\":{\"notice\":\"Calculate max payout of the market in payout tokens\"},\"minDepositInterval()\":{\"notice\":\"Minimum deposit interval for a market\"},\"minMarketDuration()\":{\"notice\":\"Minimum duration for a market\"},\"newOwners(uint256)\":{\"notice\":\"New address to designate as market owner. They must accept ownership to transfer permissions.\"},\"ownerOf(uint256)\":{\"notice\":\"Returns the address of the market owner\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"pullOwnership(uint256)\":{\"notice\":\"Accept ownership of a marketMust be market newOwner\"},\"purchaseBond(uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified marketMust be teller\"},\"pushOwnership(uint256,address)\":{\"notice\":\"Designate a new owner of a marketMust be market owner\"},\"setAllowNewMarkets(bool)\":{\"notice\":\"Change the status of the auctioneer to allow creation of new markets\"},\"setCallbackAuthStatus(address,bool)\":{\"notice\":\"Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian\"},\"setDefaults(uint32[6])\":{\"notice\":\"Set the auctioneer defaultsMust be policy\"},\"setIntervals(uint256,uint32[3])\":{\"notice\":\"Set market intervals to different values than the defaultsMust be market owner\"},\"setMinDepositInterval(uint48)\":{\"notice\":\"Set the minimum deposit intervalAccess controlled\"},\"setMinMarketDuration(uint48)\":{\"notice\":\"Set the minimum market durationAccess controlled\"},\"terms(uint256)\":{\"notice\":\"Information used to control how a bond market changes\"}},\"notice\":\"Bond Fixed-Term Oracle-based Sequential Dutch Auctioneer Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondFixedTermOSDA.sol\":\"BondFixedTermOSDA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":clones/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a\",\"dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da\",\"dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw\"]},\"src/BondFixedTermOSDA.sol\":{\"keccak256\":\"0x3c923ef1d954a849afef7134ef3209352cbdef032add925879d68cb57e63f5ce\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://78fd50169a1a943fabc1204c7932f4cf7168833e871ff5fb95f14aca669825c8\",\"dweb:/ipfs/QmRn9UQqkfMCn8qVtWmTvqwo32ezg94AuSwGd4RF9ieKeS\"]},\"src/bases/BondBaseOSDA.sol\":{\"keccak256\":\"0xa5e2978b7e3ff12259f427f57ef261527edfb7290614c3586c282bdf2f2a36a1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4793434fb29877bd8c8164fbd083baf35610dfe913a9fdd5956e49c80460a6ab\",\"dweb:/ipfs/QmSgXyUGVbeFRfbg7dbFMBgBwrzW797LPtozYWwX5E8xEy\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/interfaces/IBondOSDA.sol\":{\"keccak256\":\"0x3ecac9249871898dc63b1db1fb522e8930fd9b45335b8708c715cfa01cfe6a7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://bb59c4b5d072ed5070e7842af385ce03868958894157c5e6aef885e2b6babf06\",\"dweb:/ipfs/QmSntMni4xCWviPXmNWGp3TqpyaLUaFpomzvSYHfNv5nVR\"]},\"src/interfaces/IBondOracle.sol\":{\"keccak256\":\"0x7a88cb925d998d049fee844aa714b2b6e8255475f2c5f0b309a5c9213f28d532\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d0777ceee20b5aa166a35b0ecdb394f7abb36bbcbec48b5f885c92269a16ebcd\",\"dweb:/ipfs/QmQpMZEAMmzbo3b1jYfit7s4JHE2KjBd6DQxfaHC9tHNxC\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/lib/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb\",\"dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "teller_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_BadExpiry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InitialPriceLessThanMin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MarketNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MaxPayoutExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NewMarketsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotEnoughCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OnlyMarketOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OraclePriceZero"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketClosed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payoutToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldControlVariable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newControlVariable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Tuned",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowNewMarkets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "callbackAuthorized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "params_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAggregator",
          "outputs": [
            {
              "internalType": "contract IBondAggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfoForPurchase",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPayout",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositInterval",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minMarketDuration",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "newOwners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowNewMarkets"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCallbackAuthStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[6]",
              "name": "defaults_",
              "type": "uint32[6]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaults"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint32[3]",
              "name": "intervals_",
              "type": "uint32[3]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntervals"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "depositInterval_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDepositInterval"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "duration_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinMarketDuration"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "terms",
          "outputs": [
            {
              "internalType": "contract IBondOracle",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "baseDiscount",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "decaySpeed",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleConversion",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "closeMarket(uint256)": {
            "params": {
              "id_": "ID of market to close"
            }
          },
          "createMarket(bytes)": {
            "details": "See specific auctioneer implementations for details on encoding the parameters.",
            "params": {
              "params_": "Configuration data needed for market creation, encoded in a bytes array"
            },
            "returns": {
              "_0": "id              ID of new bond market"
            }
          },
          "getMarketInfoForPurchase(uint256)": {
            "params": {
              "id_": "Market ID"
            },
            "returns": {
              "callbackAddr": "   Address of the callback contract to get tokens for payouts",
              "maxPayout_": "      Maximum amount of payout tokens you can purchase in one transaction",
              "owner": "          Address of the market owner (tokens transferred from this address if no callback)",
              "payoutToken": "    Payout Token (token paid out) for the Market",
              "quoteToken": "     Quote Token (token received) for the Market",
              "vesting": "        Timestamp or duration for vesting, implementation-dependent"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "marketPrice(uint256)": {
            "details": "price is derived from the equation",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market in configured decimals (see MarketParams)"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "maxPayout(uint256)": {
            "details": "Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current max payout for the market in payout tokens"
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "pullOwnership(uint256)": {
            "details": "The existing owner must call pushOwnership prior to the newOwner calling this function",
            "params": {
              "id_": "Market ID"
            }
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond (after fee has been deducted)",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning"
            },
            "returns": {
              "payout": "         Amount of payout token to be received from the bond"
            }
          },
          "pushOwnership(uint256,address)": {
            "details": "Doesn't change permissions until newOwner calls pullOwnership",
            "params": {
              "id_": "Market ID",
              "newOwner_": "New address to give ownership to"
            }
          },
          "setAllowNewMarkets(bool)": {
            "details": "Setting to false and allowing active markets to end will sunset the auctioneer",
            "params": {
              "status_": "Allow market creation (true) : Disallow market creation (false)"
            }
          },
          "setCallbackAuthStatus(address,bool)": {
            "details": "Callback is believed to be safe, but a whitelist is implemented to prevent abuse",
            "params": {
              "creator_": "Address of market creator",
              "status_": "Allow callback (true) : Disallow callback (false)"
            }
          },
          "setDefaults(uint32[6])": {
            "details": "The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change",
            "params": {
              "defaults_": "Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown"
            }
          },
          "setIntervals(uint256,uint32[3])": {
            "details": "Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay",
            "params": {
              "id_": "Market ID",
              "intervals_": "Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely"
            }
          },
          "setMinDepositInterval(uint48)": {
            "params": {
              "depositInterval_": "Minimum deposit interval in seconds"
            }
          },
          "setMinMarketDuration(uint48)": {
            "params": {
              "duration_": "Minimum market duration in seconds"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowNewMarkets()": {
            "notice": "Whether or not the auctioneer allows new markets to be created"
          },
          "callbackAuthorized(address)": {
            "notice": "Whether or not the market creator is authorized to use a callback address"
          },
          "closeMarket(uint256)": {
            "notice": "Disable existing bond marketMust be market owner"
          },
          "createMarket(bytes)": {
            "notice": "Creates a new bond market"
          },
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "getAggregator()": {
            "notice": "Returns the Aggregator that services the Auctioneer"
          },
          "getMarketInfoForPurchase(uint256)": {
            "notice": "Provides information for the Teller to execute purchases on a Market"
          },
          "getTeller()": {
            "notice": "Returns the Teller that services the Auctioneer"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "markets(uint256)": {
            "notice": "Main information pertaining to bond market"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "maxPayout(uint256)": {
            "notice": "Calculate max payout of the market in payout tokens"
          },
          "minDepositInterval()": {
            "notice": "Minimum deposit interval for a market"
          },
          "minMarketDuration()": {
            "notice": "Minimum duration for a market"
          },
          "newOwners(uint256)": {
            "notice": "New address to designate as market owner. They must accept ownership to transfer permissions."
          },
          "ownerOf(uint256)": {
            "notice": "Returns the address of the market owner"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "pullOwnership(uint256)": {
            "notice": "Accept ownership of a marketMust be market newOwner"
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified marketMust be teller"
          },
          "pushOwnership(uint256,address)": {
            "notice": "Designate a new owner of a marketMust be market owner"
          },
          "setAllowNewMarkets(bool)": {
            "notice": "Change the status of the auctioneer to allow creation of new markets"
          },
          "setCallbackAuthStatus(address,bool)": {
            "notice": "Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian"
          },
          "setDefaults(uint32[6])": {
            "notice": "Set the auctioneer defaultsMust be policy"
          },
          "setIntervals(uint256,uint32[3])": {
            "notice": "Set market intervals to different values than the defaultsMust be market owner"
          },
          "setMinDepositInterval(uint48)": {
            "notice": "Set the minimum deposit intervalAccess controlled"
          },
          "setMinMarketDuration(uint48)": {
            "notice": "Set the minimum market durationAccess controlled"
          },
          "terms(uint256)": {
            "notice": "Information used to control how a bond market changes"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "clones/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondFixedTermOSDA.sol": "BondFixedTermOSDA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a",
        "urls": [
          "bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a",
          "dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee",
        "urls": [
          "bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da",
          "dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/BondFixedTermOSDA.sol": {
        "keccak256": "0x3c923ef1d954a849afef7134ef3209352cbdef032add925879d68cb57e63f5ce",
        "urls": [
          "bzz-raw://78fd50169a1a943fabc1204c7932f4cf7168833e871ff5fb95f14aca669825c8",
          "dweb:/ipfs/QmRn9UQqkfMCn8qVtWmTvqwo32ezg94AuSwGd4RF9ieKeS"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/bases/BondBaseOSDA.sol": {
        "keccak256": "0xa5e2978b7e3ff12259f427f57ef261527edfb7290614c3586c282bdf2f2a36a1",
        "urls": [
          "bzz-raw://4793434fb29877bd8c8164fbd083baf35610dfe913a9fdd5956e49c80460a6ab",
          "dweb:/ipfs/QmSgXyUGVbeFRfbg7dbFMBgBwrzW797LPtozYWwX5E8xEy"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondOSDA.sol": {
        "keccak256": "0x3ecac9249871898dc63b1db1fb522e8930fd9b45335b8708c715cfa01cfe6a7c",
        "urls": [
          "bzz-raw://bb59c4b5d072ed5070e7842af385ce03868958894157c5e6aef885e2b6babf06",
          "dweb:/ipfs/QmSntMni4xCWviPXmNWGp3TqpyaLUaFpomzvSYHfNv5nVR"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondOracle.sol": {
        "keccak256": "0x7a88cb925d998d049fee844aa714b2b6e8255475f2c5f0b309a5c9213f28d532",
        "urls": [
          "bzz-raw://d0777ceee20b5aa166a35b0ecdb394f7abb36bbcbec48b5f885c92269a16ebcd",
          "dweb:/ipfs/QmQpMZEAMmzbo3b1jYfit7s4JHE2KjBd6DQxfaHC9tHNxC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/lib/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20",
        "urls": [
          "bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb",
          "dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondFixedTermOSDA.sol",
    "id": 34524,
    "exportedSymbols": {
      "Authority": [
        29632
      ],
      "BondBaseOSDA": [
        39524
      ],
      "BondFixedTermOSDA": [
        34523
      ],
      "IBondAggregator": [
        42920
      ],
      "IBondTeller": [
        44166
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2110:37",
    "nodes": [
      {
        "id": 34449,
        "nodeType": "PragmaDirective",
        "src": "46:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 34453,
        "nodeType": "ImportDirective",
        "src": "72:82:37",
        "nodes": [],
        "absolutePath": "src/bases/BondBaseOSDA.sol",
        "file": "./bases/BondBaseOSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34524,
        "sourceUnit": 39525,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34450,
              "name": "BondBaseOSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39524,
              "src": "80:12:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34451,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42920,
              "src": "94:15:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34452,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29632,
              "src": "111:9:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34455,
        "nodeType": "ImportDirective",
        "src": "155:57:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondTeller.sol",
        "file": "./interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34524,
        "sourceUnit": 44167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34454,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44166,
              "src": "163:11:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34523,
        "nodeType": "ContractDefinition",
        "src": "1227:928:37",
        "nodes": [
          {
            "id": 34479,
            "nodeType": "FunctionDefinition",
            "src": "1320:201:37",
            "nodes": [],
            "body": {
              "id": 34478,
              "nodeType": "Block",
              "src": "1519:2:37",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34472,
                    "name": "teller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34461,
                    "src": "1474:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  {
                    "id": 34473,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34464,
                    "src": "1483:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 34474,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34466,
                    "src": "1496:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 34475,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34469,
                    "src": "1507:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 34476,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34471,
                  "name": "BondBaseOSDA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39524,
                  "src": "1461:12:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "1461:57:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34461,
                  "mutability": "mutable",
                  "name": "teller_",
                  "nameLocation": "1353:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34479,
                  "src": "1341:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$44166",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 34460,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34459,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44166,
                      "src": "1341:11:37"
                    },
                    "referencedDeclaration": 44166,
                    "src": "1341:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34464,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1386:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34479,
                  "src": "1370:27:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 34463,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34462,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42920,
                      "src": "1370:15:37"
                    },
                    "referencedDeclaration": 42920,
                    "src": "1370:15:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34466,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1415:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34479,
                  "src": "1407:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34469,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "1444:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34479,
                  "src": "1434:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$29632",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 34468,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34467,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29632,
                      "src": "1434:9:37"
                    },
                    "referencedDeclaration": 29632,
                    "src": "1434:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:129:37"
            },
            "returnParameters": {
              "id": 34477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1519:0:37"
            },
            "scope": 34523,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34522,
            "nodeType": "FunctionDefinition",
            "src": "1609:544:37",
            "nodes": [],
            "body": {
              "id": 34521,
              "nodeType": "Block",
              "src": "1691:462:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34490,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1795:6:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 34521,
                      "src": "1775:26:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                        "typeString": "struct IBondOSDA.MarketParams"
                      },
                      "typeName": {
                        "id": 34489,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34488,
                          "name": "MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43883,
                          "src": "1775:12:37"
                        },
                        "referencedDeclaration": 43883,
                        "src": "1775:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43883_storage_ptr",
                          "typeString": "struct IBondOSDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34493,
                        "name": "params_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34482,
                        "src": "1815:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 34494,
                            "name": "MarketParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43883,
                            "src": "1825:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MarketParams_$43883_storage_ptr_$",
                              "typeString": "type(struct IBondOSDA.MarketParams storage pointer)"
                            }
                          }
                        ],
                        "id": 34495,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1824:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$43883_storage_ptr_$",
                          "typeString": "type(struct IBondOSDA.MarketParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$43883_storage_ptr_$",
                          "typeString": "type(struct IBondOSDA.MarketParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 34491,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1804:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1804:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 34496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1804:35:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                      "typeString": "struct IBondOSDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1775:64:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 34501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34498,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34490,
                          "src": "1931:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                            "typeString": "struct IBondOSDA.MarketParams memory"
                          }
                        },
                        "id": 34499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43878,
                        "src": "1931:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1949:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1931:19:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 34510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 34505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 34502,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34490,
                                "src": "1955:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                                  "typeString": "struct IBondOSDA.MarketParams memory"
                                }
                              },
                              "id": 34503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43878,
                              "src": "1955:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 34504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1972:6:37",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "1955:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 34509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 34506,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34490,
                                "src": "1982:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                                  "typeString": "struct IBondOSDA.MarketParams memory"
                                }
                              },
                              "id": 34507,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43878,
                              "src": "1982:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 34508,
                              "name": "MAX_FIXED_TERM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38000,
                              "src": "1999:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "1982:31:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1955:58:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 34511,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1954:60:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1931:83:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34516,
                  "nodeType": "IfStatement",
                  "src": "1927:134:37",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34513,
                        "name": "Auctioneer_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37936,
                        "src": "2035:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2035:26:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34515,
                    "nodeType": "RevertStatement",
                    "src": "2028:33:37"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34518,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34490,
                        "src": "2139:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                          "typeString": "struct IBondOSDA.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$43883_memory_ptr",
                          "typeString": "struct IBondOSDA.MarketParams memory"
                        }
                      ],
                      "id": 34517,
                      "name": "_createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38396,
                      "src": "2125:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParams_$43883_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondOSDA.MarketParams memory) returns (uint256)"
                      }
                    },
                    "id": 34519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:21:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34487,
                  "id": 34520,
                  "nodeType": "Return",
                  "src": "2118:28:37"
                }
              ]
            },
            "baseFunctions": [
              38056
            ],
            "documentation": {
              "id": 34480,
              "nodeType": "StructuredDocumentation",
              "src": "1576:28:37",
              "text": "@inheritdoc BondBaseOSDA"
            },
            "functionSelector": "53c7f8e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "1618:12:37",
            "overrides": {
              "id": 34484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1664:8:37"
            },
            "parameters": {
              "id": 34483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34482,
                  "mutability": "mutable",
                  "name": "params_",
                  "nameLocation": "1646:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34522,
                  "src": "1631:22:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34481,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:24:37"
            },
            "returnParameters": {
              "id": 34487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34522,
                  "src": "1682:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1681:9:37"
            },
            "scope": 34523,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34457,
              "name": "BondBaseOSDA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39524,
              "src": "1257:12:37"
            },
            "id": 34458,
            "nodeType": "InheritanceSpecifier",
            "src": "1257:12:37"
          }
        ],
        "canonicalName": "BondFixedTermOSDA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34456,
          "nodeType": "StructuredDocumentation",
          "src": "214:1013:37",
          "text": "@title Bond Fixed-Term Oracle-based Sequential Dutch Auctioneer\n @notice Bond Fixed-Term Oracle-based Sequential Dutch Auctioneer Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Fixed-Term Oracle-based SDA is an implementation of the\n      Bond Base OSDA contract specific to creating bond markets where\n      purchases vest in a fixed amount of time after purchased (rounded to the day).\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34523,
          39524,
          29619,
          43913,
          43105
        ],
        "name": "BondFixedTermOSDA",
        "nameLocation": "1236:17:37",
        "scope": 34524,
        "usedErrors": [
          37920,
          37922,
          37924,
          37926,
          37928,
          37930,
          37932,
          37934,
          37936,
          37938,
          37940,
          37942
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 37
}