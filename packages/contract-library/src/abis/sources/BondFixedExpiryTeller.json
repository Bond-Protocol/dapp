{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocol_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CreateFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "maturesOn",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Bonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ERC20BondToken",
          "name": "bondToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "ERC20BondTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondTokenImplementation",
      "outputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "name": "bondTokens",
      "outputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        }
      ],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFeeDiscount",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "getBondToken",
      "outputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getBondTokenForMarket",
      "outputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20BondToken",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "discount_",
          "type": "uint48"
        }
      ],
      "name": "setCreateFeeDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405260016002553480156200001657600080fd5b5060405162004a7b38038062004a7b833981016040819052620000399162000164565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a052600480546001600160601b031916905560405162000108906200013d565b604051809103906000f08015801562000125573d6000803e3d6000fd5b506001600160a01b031660c05250620001cc92505050565b610af48062003f8783390190565b6001600160a01b03811681146200016157600080fd5b50565b600080600080608085870312156200017b57600080fd5b845162000188816200014b565b60208601519094506200019b816200014b565b6040860151909350620001ae816200014b565b6060860151909250620001c1816200014b565b939692955090935050565b60805160a05160c051613d686200021f600039600081816102120152611a72015260008181610bb901528181611c4f01528181611d5001526121fc015260008181610e1d01526115f50152613d686000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063b0e21e8a116100d8578063c23135dd1161008c578063e70b9e2711610066578063e70b9e27146103eb578063fa922c2614610424578063fcdc31261461043757600080fd5b8063c23135dd146103a6578063c6e38a4b146103ce578063ccf288c6146103e157600080fd5b8063b7314ef9116100bd578063b7314ef914610334578063b88c914814610373578063bf7e214f1461038657600080fd5b8063b0e21e8a1461030f578063b1e555291461032157600080fd5b80636c436dd51161013a5780637a9e5e4b116101145780637a9e5e4b146102c957806381690927146102dc5780638da5cb5b146102ef57600080fd5b80636c436dd51461020d5780636de5b4cd14610259578063709ea8651461028857600080fd5b806313af40351161016b57806313af4035146101d45780631e9a6950146101e75780632f6fa94e146101fa57600080fd5b806306692a37146101875780630d4dfc21146101bf575b600080fd5b6004546101a3906601000000000000900465ffffffffffff1681565b60405165ffffffffffff90911681526020015b60405180910390f35b6101d26101cd366004613249565b61044a565b005b6101d26101e2366004613298565b61054e565b6101d26101f53660046132b5565b610652565b6101d261020836600461335f565b610929565b6102347f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b6565b61026c610267366004613423565b610a51565b6040805192835265ffffffffffff9091166020830152016101b6565b610234610296366004613474565b600660209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b6101d26102d7366004613298565b610f08565b6101d26102ea366004613249565b611065565b6000546102349073ffffffffffffffffffffffffffffffffffffffff1681565b6004546101a39065ffffffffffff1681565b6101d261032f366004613249565b611184565b6103476103423660046134ad565b611295565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016101b6565b6101a3610381366004613298565b6117ae565b6001546102349073ffffffffffffffffffffffffffffffffffffffff1681565b6101a36103b4366004613298565b60036020526000908152604090205465ffffffffffff1681565b6102346103dc366004613474565b6117f2565b6101a3620186a081565b6104166103f93660046134ee565b600560209081526000928352604080842090915290825290205481565b6040519081526020016101b6565b610234610432366004613474565b611b46565b61023461044536600461351c565b611c06565b6002546001146104bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610503576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b61057c336000357fffffffff0000000000000000000000000000000000000000000000000000000016611e7f565b6105e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104b2565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6002546001146106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002808190555060008273ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190613535565b905060008373ffffffffffffffffffffffffffffffffffffffff1663e184c9be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a99190613552565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260066020908152604080832065ffffffffffff86168452909152902054919250858116911614610822576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8065ffffffffffff164265ffffffffffff161015610876576040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff821660048201526024016104b2565b6040517f9dc29fac0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff851690639dc29fac90604401600060405180830381600087803b1580156108e457600080fd5b505af11580156108f8573d6000803e3d6000fd5b5061091e9250505073ffffffffffffffffffffffffffffffffffffffff83163385611f8f565b505060016002555050565b600254600114610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b60028055815160005b8181101561091e5760008482815181106109ba576109ba61356f565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610a3e5733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610a3e908683611f8f565b505080610a4a906135cd565b905061099e565b600080600254600114610ac0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002805573ffffffffffffffffffffffffffffffffffffffff86166000908152600360205260408120548190819081908190610b09908a9065ffffffffffff16620186a0612122565b73ffffffffffffffffffffffffffffffffffffffff8c1660009081526003602052604081205460045492935090918391610b6591610b529165ffffffffffff9081169116613605565b8c9065ffffffffffff16620186a0612122565b610b6f919061362f565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c249190613535565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb99190613646565b50919b50995097509091506000905083610cd3868f61362f565b610cdd919061362f565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401610d2d939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7091906136c3565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0191906136dc565b909155505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290610e6a9084906136dc565b90915550610e8590508b8b85610e8085876136dc565b6121f4565b6000610e938e85898861289c565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d87604051610ee7929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331480610feb57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610feb91906136f4565b610ff457600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b611093336000357fffffffff0000000000000000000000000000000000000000000000000000000016611e7f565b6110f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104b2565b60045465ffffffffffff9081169082161115611141576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b6111b2336000357fffffffff0000000000000000000000000000000000000000000000000000000016611e7f565b611218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104b2565b6113888165ffffffffffff16111561125c576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002805560006113176201518086613745565b611324906201518061376a565b9050428165ffffffffffff161015611368576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808716600090815260066020908152604080832065ffffffffffff861684529091529020541680611400576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff831660248201526044016104b2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa15801561146d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149191906136c3565b90506114b573ffffffffffffffffffffffffffffffffffffffff891633308961298f565b6114bf86826136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d91906136c3565b1015611585576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611710576004546000906115de906115cb9065ffffffffffff6601000000000000820481169116613798565b889065ffffffffffff16620186a0612122565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e168352929052908120805492935083929091906116479084906136dc565b909155505073ffffffffffffffffffffffffffffffffffffffff83166340c10f1933611673848b61362f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b1580156116de57600080fd5b505af11580156116f2573d6000803e3d6000fd5b50505050828188611703919061362f565b955095505050505061179f565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff8316906340c10f1990604401600060405180830381600087803b15801561177e57600080fd5b505af1158015611792573d6000803e3d6000fd5b5093965087955050505050505b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546117ec9165ffffffffffff9081169116613605565b92915050565b6000600254600114611860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002805560006118736201518084613745565b611880906201518061376a565b9050428165ffffffffffff1610156118c4576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808516600090815260066020908152604080832065ffffffffffff861684529091529020541680611b3957600080611919878565ffffffffffff16612b2b565b91509150600082611929906137bf565b611932836137bf565b8973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a19190613804565b60408051602081019490945283019190915260f81b7fff000000000000000000000000000000000000000000000000000000000000001660608083019190915289811b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116606184015265ffffffffffff881660758401523090911b16609582015260a901604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529050611a9873ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682612ecc565b73ffffffffffffffffffffffffffffffffffffffff898116600081815260066020908152604080832065ffffffffffff8c168085529083529281902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169587169586179055519384529397509290917f4fd9a46575749d9ddf290fadaa5729fc640790e2b6360df8cc8af35e418dcec0910160405180910390a35050505b6001600255949350505050565b600080611b566201518084613745565b611b63906201518061376a565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260066020908152604080832065ffffffffffff861684529091529020549192501680611bfe576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015265ffffffffffff831660248201526044016104b2565b949350505050565b6040517f78b5a87a00000000000000000000000000000000000000000000000000000000815260048101829052600090309073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906378b5a87a90602401602060405180830381865afa158015611c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cba9190613535565b73ffffffffffffffffffffffffffffffffffffffff1614611d07576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5204794200000000000000000000000000000000000000000000000000000000815260048101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190613535565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c856040518263ffffffff1660e01b8152600401611df591815260200190565b60c060405180830381865afa158015611e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e369190613646565b5073ffffffffffffffffffffffffffffffffffffffff928316600090815260066020908152604080832065ffffffffffff90941683529290522054909116979650505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590611f6357506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6391906136f4565b80611bfe575060005473ffffffffffffffffffffffffffffffffffffffff858116911614949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916120269190613857565b6000604051808303816000865af19150503d8060008114612063576040519150601f19603f3d011682016040523d82523d6000602084013e612068565b606091505b509150915081801561209257508051158061209257508080602001905181019061209291906136f4565b80156120b5575060008573ffffffffffffffffffffffffffffffffffffffff163b115b61211b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104b2565b5050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612179576000841161216e57600080fd5b5082900490506121ed565b80841161218557600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b815260040161225591815260200190565b602060405180830381865afa158015612272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122969190613535565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b81526004016122d091815260200190565b60c060405180830381865afa1580156122ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123119190613646565b5050935093509350935060008588612329919061362f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bd91906136c3565b90506123e173ffffffffffffffffffffffffffffffffffffffff841633308c61298f565b6123eb89826136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612455573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247991906136c3565b10156124b1576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516156126e8576124ee73ffffffffffffffffffffffffffffffffffffffff84168684611f8f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa15801561255b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257f91906136c3565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b1580156125f857600080fd5b505af115801561260c573d6000803e3d6000fd5b50505050888161261c91906136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126aa91906136c3565b10156126e2576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50612890565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612755573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277991906136c3565b905061279d73ffffffffffffffffffffffffffffffffffffffff861688308c61298f565b6127a789826136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283591906136c3565b101561286d576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61288e73ffffffffffffffffffffffffffffffffffffffff85168885611f8f565b505b50505050505050505050565b60004265ffffffffffff168265ffffffffffff16111561296e575073ffffffffffffffffffffffffffffffffffffffff828116600090815260066020908152604080832065ffffffffffff86168452909152908190205490517f40c10f19000000000000000000000000000000000000000000000000000000008152868316600482015260248101869052839291909116906340c10f1990604401600060405180830381600087803b15801561295157600080fd5b505af1158015612965573d6000803e3d6000fd5b50505050611bfe565b611bfe73ffffffffffffffffffffffffffffffffffffffff84168686611f8f565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691612a2e9190613857565b6000604051808303816000865af19150503d8060008114612a6b576040519150601f19603f3d011682016040523d82523d6000602084013e612a70565b606091505b5091509150818015612a9a575080511580612a9a575080806020019051810190612a9a91906136f4565b8015612abd575060008673ffffffffffffffffffffffffffffffffffffffff163b115b612b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104b2565b505050505050565b6060806000808080612b406201518088613873565b90506000612b518262010bd9613887565b612b5e9062253d8c613887565b9050600062023ab1612b718360046138fb565b612b7b91906139b7565b90506004612b8c8262023ab16138fb565b612b97906003613887565b612ba191906139b7565b612bab9083613a1f565b9150600062164b09612bbe846001613887565b612bca90610fa06138fb565b612bd491906139b7565b90506004612be4826105b56138fb565b612bee91906139b7565b612bf89084613a1f565b612c0390601f613887565b9250600061098f612c158560506138fb565b612c1f91906139b7565b905060006050612c318361098f6138fb565b612c3b91906139b7565b612c459086613a1f565b9050612c52600b836139b7565b9450612c5f85600c6138fb565b612c6a836002613887565b612c749190613a1f565b91508483612c83603187613a1f565b612c8e9060646138fb565b612c989190613887565b612ca29190613887565b9850909650945060009350612cc79250612cc29150612710905086613a93565b6130d2565b90506000600a8410612ce157612cdc846130d2565b612d0a565b612cea846130d2565b604051602001612cfa9190613aa7565b6040516020818303038152906040525b90506000600a8410612d2457612d1f846130d2565b612d4d565b612d2d846130d2565b604051602001612d3d9190613aa7565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612d9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612de09190810190613aec565b838383604051602001612df69493929190613b95565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015612e52573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612e989190810190613aec565b838383604051602001612eae9493929190613c4a565b60405160208183030381529060405296505050505050509250929050565b80516040517f3d610000000000000000000000000000000000000000000000000000000000008152603a820160f081811b6002848101919091527f80600b3d3981f30000000000000000000000000000000000000000000000000060048501527f363d3d3761000000000000000000000000000000000000000000000000000000600b8501528401901b601083018190527f603836393d3d3d366100000000000000000000000000000000000000000000006012840152601b8301527f013d730000000000000000000000000000000000000000000000000000000000601d830152606085901b6020808401919091527f5af43d82803e903d91603657fd5bf3000000000000000000000000000000000060348401526000939260458401929186019084604382015b6020821061303257835181526020938401937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019101612ff5565b83517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60208490036101000a0119908116825260f088901b91830191825286846000f0985073ffffffffffffffffffffffffffffffffffffffff89166130c4576040517febfef18800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505092915050565b60608160000361311557505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561313f5780613129816135cd565b91506131389050600a83613873565b9150613119565b60008167ffffffffffffffff81111561315a5761315a6132e1565b6040519080825280601f01601f191660200182016040528015613184576020820181803683370190505b509050815b85156132295761319a60018261362f565b905060006131a9600a88613873565b6131b490600a613cd0565b6131be908861362f565b6131c9906030613d0d565b905060008160f81b9050808484815181106131e6576131e661356f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613220600a89613873565b97505050613189565b50949350505050565b65ffffffffffff8116811461324657600080fd5b50565b60006020828403121561325b57600080fd5b81356121ed81613232565b73ffffffffffffffffffffffffffffffffffffffff8116811461324657600080fd5b803561329381613266565b919050565b6000602082840312156132aa57600080fd5b81356121ed81613266565b600080604083850312156132c857600080fd5b82356132d381613266565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613357576133576132e1565b604052919050565b6000806040838503121561337257600080fd5b823567ffffffffffffffff8082111561338a57600080fd5b818501915085601f83011261339e57600080fd5b81356020828211156133b2576133b26132e1565b8160051b92506133c3818401613310565b82815292840181019281810190898511156133dd57600080fd5b948201945b8486101561340757853593506133f784613266565b83825294820194908201906133e2565b96506134169050878201613288565b9450505050509250929050565b600080600080600060a0868803121561343b57600080fd5b853561344681613266565b9450602086013561345681613266565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561348757600080fd5b823561349281613266565b915060208301356134a281613232565b809150509250929050565b6000806000606084860312156134c257600080fd5b83356134cd81613266565b925060208401356134dd81613232565b929592945050506040919091013590565b6000806040838503121561350157600080fd5b823561350c81613266565b915060208301356134a281613266565b60006020828403121561352e57600080fd5b5035919050565b60006020828403121561354757600080fd5b81516121ed81613266565b60006020828403121561356457600080fd5b81516121ed81613232565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135fe576135fe61359e565b5060010190565b600065ffffffffffff8083168185168083038211156136265761362661359e565b01949350505050565b6000828210156136415761364161359e565b500390565b60008060008060008060c0878903121561365f57600080fd5b865161366a81613266565b602088015190965061367b81613266565b604088015190955061368c81613266565b606088015190945061369d81613266565b60808801519093506136ae81613232565b8092505060a087015190509295509295509295565b6000602082840312156136d557600080fd5b5051919050565b600082198211156136ef576136ef61359e565b500190565b60006020828403121561370657600080fd5b815180151581146121ed57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff8084168061375e5761375e613716565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561378f5761378f61359e565b02949350505050565b600065ffffffffffff838116908316818110156137b7576137b761359e565b039392505050565b805160208083015191908110156137fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b60006020828403121561381657600080fd5b815160ff811681146121ed57600080fd5b60005b8381101561384257818101518382015260200161382a565b83811115613851576000848401525b50505050565b60008251613869818460208701613827565b9190910192915050565b60008261388257613882613716565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038413811516156138c1576138c161359e565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156138f5576138f561359e565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561393c5761393c61359e565b7f800000000000000000000000000000000000000000000000000000000000000060008712868205881281841616156139775761397761359e565b600087129250878205871284841616156139935761399361359e565b878505871281841616156139a9576139a961359e565b505050929093029392505050565b6000826139c6576139c6613716565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615613a1a57613a1a61359e565b500590565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615613a5957613a5961359e565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615613a8d57613a8d61359e565b50500390565b600082613aa257613aa2613716565b500690565b7f3000000000000000000000000000000000000000000000000000000000000000815260008251613adf816001850160208701613827565b9190910160010192915050565b600060208284031215613afe57600080fd5b815167ffffffffffffffff80821115613b1657600080fd5b818401915084601f830112613b2a57600080fd5b815181811115613b3c57613b3c6132e1565b613b6d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613310565b9150808252856020828501011115613b8457600080fd5b613229816020840160208601613827565b60008551613ba7818460208a01613827565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551613be1816001840160208a01613827565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551613c21816002850160208a01613827565b60029201918201528351613c3c816003840160208801613827565b016003019695505050505050565b60008551613c5c818460208a01613827565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551613c96816001840160208a01613827565b8551910190613cac816001840160208901613827565b8451910190613cc2816001840160208801613827565b016001019695505050505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613d0857613d0861359e565b500290565b600060ff821660ff84168060ff03821115613d2a57613d2a61359e565b01939250505056fea264697066735822122049d67935b2554c1dbfa203460385304801a914146613d59e03a4ebc55842868664736f6c634300080f0033608060405234801561001057600080fd5b50610ad4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636f307dc311610097578063a457c2d711610066578063a457c2d714610222578063a9059cbb14610235578063dd62ed3e14610248578063e184c9be1461027357600080fd5b80636f307dc3146101df57806370a08231146101e757806395d89b41146102075780639dc29fac1461020f57600080fd5b8063313ce567116100d3578063313ce56714610170578063395093511461018a57806340c10f191461019d57806357edab4e146101b257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd1461015d575b600080fd5b61010d610292565b60405161011a91906108e9565b60405180910390f35b610136610131366004610985565b6102c4565b604051901515815260200161011a565b61014f60005481565b60405190815260200161011a565b61013661016b3660046109af565b61033d565b610178610481565b60405160ff909116815260200161011a565b610136610198366004610985565b610492565b6101b06101ab366004610985565b61053d565b005b6101ba6105b7565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011a565b6101ba6105c3565b61014f6101f53660046109eb565b60016020526000908152604090205481565b61010d6105cf565b6101b061021d366004610985565b6105db565b610136610230366004610985565b610651565b610136610243366004610985565b610693565b61014f610256366004610a0d565b600260209081526000928352604080842090915290825290205481565b61027b610718565b60405165ffffffffffff909116815260200161011a565b606061029e6000610720565b6040516020016102b091815260200190565b604051602081830303815290604052905090565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061032c9086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103d15761039f8382610a6f565b73ffffffffffffffffffffffffffffffffffffffff861660009081526002602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602052604081208054859290610406908490610a6f565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260016020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061046e9087815260200190565b60405180910390a3506001949350505050565b600061048d6040610760565b905090565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120805483919083906104d4908490610a86565b909155505033600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8816808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910161032c565b6105456105b7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a9576040517f5451629900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105b382826107a3565b5050565b600061048d607561081b565b600061048d604161081b565b606061029e6020610720565b6105e36105b7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f5451629900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105b3828261085e565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120805483919083906104d4908490610a6f565b336000908152600160205260408120805483919083906106b4908490610a6f565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260016020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061032c9086815260200190565b600061048d60555b6000806107557ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe368181013560f01c90030190565b929092013592915050565b6000806107957ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe368181013560f01c90030190565b929092013560f81c92915050565b806000808282546107b49190610a86565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6000806108507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe368181013560f01c90030190565b929092013560601c92915050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839290610893908490610a6f565b909155505060008054829003815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161080f565b600060208083528351808285015260005b81811015610916578581018301518582016040015282016108fa565b81811115610928576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461098057600080fd5b919050565b6000806040838503121561099857600080fd5b6109a18361095c565b946020939093013593505050565b6000806000606084860312156109c457600080fd5b6109cd8461095c565b92506109db6020850161095c565b9150604084013590509250925092565b6000602082840312156109fd57600080fd5b610a068261095c565b9392505050565b60008060408385031215610a2057600080fd5b610a298361095c565b9150610a376020840161095c565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610a8157610a81610a40565b500390565b60008219821115610a9957610a99610a40565b50019056fea264697066735822122011bcf909503e5cb35b234242b937e745be1e4e2bab32f4f8e121a5924268ac5464736f6c634300080f0033",
    "sourceMap": "1602:7900:34:-:0;;;451:1:26;426:26;;2368:264:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;2522:9:34;;2533:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;3871:21:45;;::::1;;::::0;-1:-1:-1;3902:25:45::1;;::::0;4001:11:::1;:15:::0;;-1:-1:-1;;;;;;4026:21:45;;;2605:20:34::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;2579:46:34::1;;::::0;-1:-1:-1;1602:7900:34;;-1:-1:-1;;;1602:7900:34;;;;;;;;;:::o;14:131:124:-;-1:-1:-1;;;;;89:31:124;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:698::-;291:6;299;307;315;368:3;356:9;347:7;343:23;339:33;336:53;;;385:1;382;375:12;336:53;417:9;411:16;436:31;461:5;436:31;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:33:124;515:25;549:33;:::i;:::-;653:2;638:18;;632:25;601:7;;-1:-1:-1;666:33:124;632:25;666:33;:::i;:::-;770:2;755:18;;749:25;718:7;;-1:-1:-1;783:33:124;749:25;783:33;:::i;:::-;150:698;;;;-1:-1:-1;150:698:124;;-1:-1:-1;;150:698:124:o;:::-;1602:7900:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101825760003560e01c8063b0e21e8a116100d8578063c23135dd1161008c578063e70b9e2711610066578063e70b9e27146103eb578063fa922c2614610424578063fcdc31261461043757600080fd5b8063c23135dd146103a6578063c6e38a4b146103ce578063ccf288c6146103e157600080fd5b8063b7314ef9116100bd578063b7314ef914610334578063b88c914814610373578063bf7e214f1461038657600080fd5b8063b0e21e8a1461030f578063b1e555291461032157600080fd5b80636c436dd51161013a5780637a9e5e4b116101145780637a9e5e4b146102c957806381690927146102dc5780638da5cb5b146102ef57600080fd5b80636c436dd51461020d5780636de5b4cd14610259578063709ea8651461028857600080fd5b806313af40351161016b57806313af4035146101d45780631e9a6950146101e75780632f6fa94e146101fa57600080fd5b806306692a37146101875780630d4dfc21146101bf575b600080fd5b6004546101a3906601000000000000900465ffffffffffff1681565b60405165ffffffffffff90911681526020015b60405180910390f35b6101d26101cd366004613249565b61044a565b005b6101d26101e2366004613298565b61054e565b6101d26101f53660046132b5565b610652565b6101d261020836600461335f565b610929565b6102347f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b6565b61026c610267366004613423565b610a51565b6040805192835265ffffffffffff9091166020830152016101b6565b610234610296366004613474565b600660209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b6101d26102d7366004613298565b610f08565b6101d26102ea366004613249565b611065565b6000546102349073ffffffffffffffffffffffffffffffffffffffff1681565b6004546101a39065ffffffffffff1681565b6101d261032f366004613249565b611184565b6103476103423660046134ad565b611295565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016101b6565b6101a3610381366004613298565b6117ae565b6001546102349073ffffffffffffffffffffffffffffffffffffffff1681565b6101a36103b4366004613298565b60036020526000908152604090205465ffffffffffff1681565b6102346103dc366004613474565b6117f2565b6101a3620186a081565b6104166103f93660046134ee565b600560209081526000928352604080842090915290825290205481565b6040519081526020016101b6565b610234610432366004613474565b611b46565b61023461044536600461351c565b611c06565b6002546001146104bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610503576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b61057c336000357fffffffff0000000000000000000000000000000000000000000000000000000016611e7f565b6105e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104b2565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6002546001146106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002808190555060008273ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190613535565b905060008373ffffffffffffffffffffffffffffffffffffffff1663e184c9be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a99190613552565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260066020908152604080832065ffffffffffff86168452909152902054919250858116911614610822576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8065ffffffffffff164265ffffffffffff161015610876576040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff821660048201526024016104b2565b6040517f9dc29fac0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff851690639dc29fac90604401600060405180830381600087803b1580156108e457600080fd5b505af11580156108f8573d6000803e3d6000fd5b5061091e9250505073ffffffffffffffffffffffffffffffffffffffff83163385611f8f565b505060016002555050565b600254600114610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b60028055815160005b8181101561091e5760008482815181106109ba576109ba61356f565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610a3e5733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610a3e908683611f8f565b505080610a4a906135cd565b905061099e565b600080600254600114610ac0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002805573ffffffffffffffffffffffffffffffffffffffff86166000908152600360205260408120548190819081908190610b09908a9065ffffffffffff16620186a0612122565b73ffffffffffffffffffffffffffffffffffffffff8c1660009081526003602052604081205460045492935090918391610b6591610b529165ffffffffffff9081169116613605565b8c9065ffffffffffff16620186a0612122565b610b6f919061362f565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c249190613535565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb99190613646565b50919b50995097509091506000905083610cd3868f61362f565b610cdd919061362f565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401610d2d939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7091906136c3565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0191906136dc565b909155505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290610e6a9084906136dc565b90915550610e8590508b8b85610e8085876136dc565b6121f4565b6000610e938e85898861289c565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d87604051610ee7929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331480610feb57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610feb91906136f4565b610ff457600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b611093336000357fffffffff0000000000000000000000000000000000000000000000000000000016611e7f565b6110f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104b2565b60045465ffffffffffff9081169082161115611141576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b6111b2336000357fffffffff0000000000000000000000000000000000000000000000000000000016611e7f565b611218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104b2565b6113888165ffffffffffff16111561125c576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002805560006113176201518086613745565b611324906201518061376a565b9050428165ffffffffffff161015611368576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808716600090815260066020908152604080832065ffffffffffff861684529091529020541680611400576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff831660248201526044016104b2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa15801561146d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149191906136c3565b90506114b573ffffffffffffffffffffffffffffffffffffffff891633308961298f565b6114bf86826136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d91906136c3565b1015611585576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611710576004546000906115de906115cb9065ffffffffffff6601000000000000820481169116613798565b889065ffffffffffff16620186a0612122565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e168352929052908120805492935083929091906116479084906136dc565b909155505073ffffffffffffffffffffffffffffffffffffffff83166340c10f1933611673848b61362f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b1580156116de57600080fd5b505af11580156116f2573d6000803e3d6000fd5b50505050828188611703919061362f565b955095505050505061179f565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff8316906340c10f1990604401600060405180830381600087803b15801561177e57600080fd5b505af1158015611792573d6000803e3d6000fd5b5093965087955050505050505b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546117ec9165ffffffffffff9081169116613605565b92915050565b6000600254600114611860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104b2565b6002805560006118736201518084613745565b611880906201518061376a565b9050428165ffffffffffff1610156118c4576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808516600090815260066020908152604080832065ffffffffffff861684529091529020541680611b3957600080611919878565ffffffffffff16612b2b565b91509150600082611929906137bf565b611932836137bf565b8973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a19190613804565b60408051602081019490945283019190915260f81b7fff000000000000000000000000000000000000000000000000000000000000001660608083019190915289811b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116606184015265ffffffffffff881660758401523090911b16609582015260a901604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529050611a9873ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682612ecc565b73ffffffffffffffffffffffffffffffffffffffff898116600081815260066020908152604080832065ffffffffffff8c168085529083529281902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169587169586179055519384529397509290917f4fd9a46575749d9ddf290fadaa5729fc640790e2b6360df8cc8af35e418dcec0910160405180910390a35050505b6001600255949350505050565b600080611b566201518084613745565b611b63906201518061376a565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260066020908152604080832065ffffffffffff861684529091529020549192501680611bfe576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015265ffffffffffff831660248201526044016104b2565b949350505050565b6040517f78b5a87a00000000000000000000000000000000000000000000000000000000815260048101829052600090309073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906378b5a87a90602401602060405180830381865afa158015611c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cba9190613535565b73ffffffffffffffffffffffffffffffffffffffff1614611d07576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5204794200000000000000000000000000000000000000000000000000000000815260048101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190613535565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c856040518263ffffffff1660e01b8152600401611df591815260200190565b60c060405180830381865afa158015611e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e369190613646565b5073ffffffffffffffffffffffffffffffffffffffff928316600090815260066020908152604080832065ffffffffffff90941683529290522054909116979650505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590611f6357506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6391906136f4565b80611bfe575060005473ffffffffffffffffffffffffffffffffffffffff858116911614949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916120269190613857565b6000604051808303816000865af19150503d8060008114612063576040519150601f19603f3d011682016040523d82523d6000602084013e612068565b606091505b509150915081801561209257508051158061209257508080602001905181019061209291906136f4565b80156120b5575060008573ffffffffffffffffffffffffffffffffffffffff163b115b61211b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016104b2565b5050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612179576000841161216e57600080fd5b5082900490506121ed565b80841161218557600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b815260040161225591815260200190565b602060405180830381865afa158015612272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122969190613535565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b81526004016122d091815260200190565b60c060405180830381865afa1580156122ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123119190613646565b5050935093509350935060008588612329919061362f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bd91906136c3565b90506123e173ffffffffffffffffffffffffffffffffffffffff841633308c61298f565b6123eb89826136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612455573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247991906136c3565b10156124b1576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516156126e8576124ee73ffffffffffffffffffffffffffffffffffffffff84168684611f8f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa15801561255b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257f91906136c3565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b1580156125f857600080fd5b505af115801561260c573d6000803e3d6000fd5b50505050888161261c91906136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126aa91906136c3565b10156126e2576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50612890565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612755573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277991906136c3565b905061279d73ffffffffffffffffffffffffffffffffffffffff861688308c61298f565b6127a789826136dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283591906136c3565b101561286d576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61288e73ffffffffffffffffffffffffffffffffffffffff85168885611f8f565b505b50505050505050505050565b60004265ffffffffffff168265ffffffffffff16111561296e575073ffffffffffffffffffffffffffffffffffffffff828116600090815260066020908152604080832065ffffffffffff86168452909152908190205490517f40c10f19000000000000000000000000000000000000000000000000000000008152868316600482015260248101869052839291909116906340c10f1990604401600060405180830381600087803b15801561295157600080fd5b505af1158015612965573d6000803e3d6000fd5b50505050611bfe565b611bfe73ffffffffffffffffffffffffffffffffffffffff84168686611f8f565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691612a2e9190613857565b6000604051808303816000865af19150503d8060008114612a6b576040519150601f19603f3d011682016040523d82523d6000602084013e612a70565b606091505b5091509150818015612a9a575080511580612a9a575080806020019051810190612a9a91906136f4565b8015612abd575060008673ffffffffffffffffffffffffffffffffffffffff163b115b612b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104b2565b505050505050565b6060806000808080612b406201518088613873565b90506000612b518262010bd9613887565b612b5e9062253d8c613887565b9050600062023ab1612b718360046138fb565b612b7b91906139b7565b90506004612b8c8262023ab16138fb565b612b97906003613887565b612ba191906139b7565b612bab9083613a1f565b9150600062164b09612bbe846001613887565b612bca90610fa06138fb565b612bd491906139b7565b90506004612be4826105b56138fb565b612bee91906139b7565b612bf89084613a1f565b612c0390601f613887565b9250600061098f612c158560506138fb565b612c1f91906139b7565b905060006050612c318361098f6138fb565b612c3b91906139b7565b612c459086613a1f565b9050612c52600b836139b7565b9450612c5f85600c6138fb565b612c6a836002613887565b612c749190613a1f565b91508483612c83603187613a1f565b612c8e9060646138fb565b612c989190613887565b612ca29190613887565b9850909650945060009350612cc79250612cc29150612710905086613a93565b6130d2565b90506000600a8410612ce157612cdc846130d2565b612d0a565b612cea846130d2565b604051602001612cfa9190613aa7565b6040516020818303038152906040525b90506000600a8410612d2457612d1f846130d2565b612d4d565b612d2d846130d2565b604051602001612d3d9190613aa7565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612d9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612de09190810190613aec565b838383604051602001612df69493929190613b95565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015612e52573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612e989190810190613aec565b838383604051602001612eae9493929190613c4a565b60405160208183030381529060405296505050505050509250929050565b80516040517f3d610000000000000000000000000000000000000000000000000000000000008152603a820160f081811b6002848101919091527f80600b3d3981f30000000000000000000000000000000000000000000000000060048501527f363d3d3761000000000000000000000000000000000000000000000000000000600b8501528401901b601083018190527f603836393d3d3d366100000000000000000000000000000000000000000000006012840152601b8301527f013d730000000000000000000000000000000000000000000000000000000000601d830152606085901b6020808401919091527f5af43d82803e903d91603657fd5bf3000000000000000000000000000000000060348401526000939260458401929186019084604382015b6020821061303257835181526020938401937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019101612ff5565b83517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60208490036101000a0119908116825260f088901b91830191825286846000f0985073ffffffffffffffffffffffffffffffffffffffff89166130c4576040517febfef18800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505092915050565b60608160000361311557505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561313f5780613129816135cd565b91506131389050600a83613873565b9150613119565b60008167ffffffffffffffff81111561315a5761315a6132e1565b6040519080825280601f01601f191660200182016040528015613184576020820181803683370190505b509050815b85156132295761319a60018261362f565b905060006131a9600a88613873565b6131b490600a613cd0565b6131be908861362f565b6131c9906030613d0d565b905060008160f81b9050808484815181106131e6576131e661356f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613220600a89613873565b97505050613189565b50949350505050565b65ffffffffffff8116811461324657600080fd5b50565b60006020828403121561325b57600080fd5b81356121ed81613232565b73ffffffffffffffffffffffffffffffffffffffff8116811461324657600080fd5b803561329381613266565b919050565b6000602082840312156132aa57600080fd5b81356121ed81613266565b600080604083850312156132c857600080fd5b82356132d381613266565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613357576133576132e1565b604052919050565b6000806040838503121561337257600080fd5b823567ffffffffffffffff8082111561338a57600080fd5b818501915085601f83011261339e57600080fd5b81356020828211156133b2576133b26132e1565b8160051b92506133c3818401613310565b82815292840181019281810190898511156133dd57600080fd5b948201945b8486101561340757853593506133f784613266565b83825294820194908201906133e2565b96506134169050878201613288565b9450505050509250929050565b600080600080600060a0868803121561343b57600080fd5b853561344681613266565b9450602086013561345681613266565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561348757600080fd5b823561349281613266565b915060208301356134a281613232565b809150509250929050565b6000806000606084860312156134c257600080fd5b83356134cd81613266565b925060208401356134dd81613232565b929592945050506040919091013590565b6000806040838503121561350157600080fd5b823561350c81613266565b915060208301356134a281613266565b60006020828403121561352e57600080fd5b5035919050565b60006020828403121561354757600080fd5b81516121ed81613266565b60006020828403121561356457600080fd5b81516121ed81613232565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135fe576135fe61359e565b5060010190565b600065ffffffffffff8083168185168083038211156136265761362661359e565b01949350505050565b6000828210156136415761364161359e565b500390565b60008060008060008060c0878903121561365f57600080fd5b865161366a81613266565b602088015190965061367b81613266565b604088015190955061368c81613266565b606088015190945061369d81613266565b60808801519093506136ae81613232565b8092505060a087015190509295509295509295565b6000602082840312156136d557600080fd5b5051919050565b600082198211156136ef576136ef61359e565b500190565b60006020828403121561370657600080fd5b815180151581146121ed57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff8084168061375e5761375e613716565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561378f5761378f61359e565b02949350505050565b600065ffffffffffff838116908316818110156137b7576137b761359e565b039392505050565b805160208083015191908110156137fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b60006020828403121561381657600080fd5b815160ff811681146121ed57600080fd5b60005b8381101561384257818101518382015260200161382a565b83811115613851576000848401525b50505050565b60008251613869818460208701613827565b9190910192915050565b60008261388257613882613716565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038413811516156138c1576138c161359e565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156138f5576138f561359e565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561393c5761393c61359e565b7f800000000000000000000000000000000000000000000000000000000000000060008712868205881281841616156139775761397761359e565b600087129250878205871284841616156139935761399361359e565b878505871281841616156139a9576139a961359e565b505050929093029392505050565b6000826139c6576139c6613716565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615613a1a57613a1a61359e565b500590565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615613a5957613a5961359e565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615613a8d57613a8d61359e565b50500390565b600082613aa257613aa2613716565b500690565b7f3000000000000000000000000000000000000000000000000000000000000000815260008251613adf816001850160208701613827565b9190910160010192915050565b600060208284031215613afe57600080fd5b815167ffffffffffffffff80821115613b1657600080fd5b818401915084601f830112613b2a57600080fd5b815181811115613b3c57613b3c6132e1565b613b6d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613310565b9150808252856020828501011115613b8457600080fd5b613229816020840160208601613827565b60008551613ba7818460208a01613827565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551613be1816001840160208a01613827565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551613c21816002850160208a01613827565b60029201918201528351613c3c816003840160208801613827565b016003019695505050505050565b60008551613c5c818460208a01613827565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551613c96816001840160208a01613827565b8551910190613cac816001840160208901613827565b8451910190613cc2816001840160208801613827565b016001019695505050505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613d0857613d0861359e565b500290565b600060ff821660ff84168060ff03821115613d2a57613d2a61359e565b01939250505056fea264697066735822122049d67935b2554c1dbfa203460385304801a914146613d59e03a4ebc55842868664736f6c634300080f0033",
    "sourceMap": "1602:7900:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3266:31:45;;;;;;;;;;;;;;;188:14:124;176:27;;;158:46;;146:2;131:18;3266:31:45;;;;;;;;4092:171;;;;;;:::i;:::-;;:::i;:::-;;1936:147:22;;;;;;:::i;:::-;;:::i;6291:601:34:-;;;;;;:::i;:::-;;:::i;4728:414:45:-;;;;;;:::i;:::-;;:::i;2262:55:34:-;;;;;;;;3334:42:124;3322:55;;;3304:74;;3292:2;3277:18;2262:55:34;3134:250:124;5393:1838:45;;;;;;:::i;:::-;;:::i;:::-;;;;4160:25:124;;;4233:14;4221:27;;;4216:2;4201:18;;4194:55;4133:18;5393:1838:45;3988:267:124;2093:69:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:434:22;;;;;;:::i;:::-;;:::i;4497:193:45:-;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;;;;;3039:25:45;;;;;;;;;4301:158;;;;;;:::i;:::-;;:::i;4325:1877:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;5870:42:124;5858:55;;;5840:74;;5945:2;5930:18;;5923:34;;;;5813:18;4325:1877:34;5642:321:124;5180:127:45;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;;;;;2913:46:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6987:1307:34;;;;;;:::i;:::-;;:::i;3304:41:45:-;;3342:3;3304:41;;3432:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6772:25:124;;;6760:2;6745:18;3432:60:45;6626:177:124;8900:600:34;;;;;;:::i;:::-;;:::i;8343:508::-;;;;;;:::i;:::-;;:::i;4092:171:45:-;501:6:26;;511:1;501:11;493:34;;;;;;;7195:2:124;493:34:26;;;7177:21:124;7234:2;7214:18;;;7207:30;7273:12;7253:18;;;7246:40;7303:18;;493:34:26;;;;;;;;;547:1;538:10;;4181:3:45::1;4174:10;::::0;::::1;;4170:45;;;4193:22;;;;;;;;;;;;;;4170:45;4238:10;4225:24;::::0;;;:12:::1;:24;::::0;;;;:31;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;571:6:26;:10;4092:171:45:o;1936:147:22:-;875:33;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;7534:2:124;867:58:22;;;7516:21:124;7573:2;7553:18;;;7546:30;7612:14;7592:18;;;7585:42;7644:18;;867:58:22;7332:336:124;867:58:22;2010:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;6291:601:34:-;501:6:26;;511:1;501:11;493:34;;;;;;;7195:2:124;493:34:26;;;7177:21:124;7234:2;7214:18;;;7207:30;7273:12;7253:18;;;7246:40;7303:18;;493:34:26;6993:334:124;493:34:26;547:1;538:6;:10;;;;6439:16:34::1;6458:6;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6439:38;;6487:13;6503:6;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6543:22;::::0;;::::1;;::::0;;;:10:::1;:22;::::0;;;;;;;:30:::1;::::0;::::1;::::0;;;;;;;;6487:31;;-1:-1:-1;6533:40:34;;::::1;6543:30:::0;::::1;6533:40;6529:78;;6582:25;;;;;;;;;;;;;;6529:78;6692:6;6666:32;;6673:15;6666:32;;;6662:75;;;6707:30;::::0;::::1;::::0;;188:14:124;176:27;;6707:30:34::1;::::0;::::1;158:46:124::0;131:18;;6707:30:34::1;14:196:124::0;6662:75:34::1;6799:32;::::0;;;;6811:10:::1;6799:32;::::0;::::1;5840:74:124::0;5930:18;;;5923:34;;;6799:11:34::1;::::0;::::1;::::0;::::1;::::0;5813:18:124;;6799:32:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6841:44:34::1;::::0;-1:-1:-1;;;6841:23:34::1;::::0;::::1;6865:10;6877:7:::0;6841:23:::1;:44::i;:::-;-1:-1:-1::0;;580:1:26;571:6;:10;-1:-1:-1;;6291:601:34:o;4728:414:45:-;501:6:26;;511:1;501:11;493:34;;;;;;;7195:2:124;493:34:26;;;7177:21:124;7234:2;7214:18;;;7207:30;7273:12;7253:18;;;7246:40;7303:18;;493:34:26;6993:334:124;493:34:26;547:1;538:10;;4839:14:45;;4825:11:::1;4863:273;4883:3;4879:1;:7;4863:273;;;4907:11;4921:7;4929:1;4921:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4968::::1;4945:12;4960:19:::0;;;:7:::1;:19:::0;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;;;;4921:10;;-1:-1:-1;5005:9:45;;5001:125:::1;;5042:10;5063:1;5034:19:::0;;;:7:::1;:19;::::0;;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;:30;;;;5082:29:::1;::::0;5101:3;5106:4;5082:18:::1;:29::i;:::-;4893:243;;4888:3;;;;:::i;:::-;;;4863:273;;5393:1838:::0;5588:7;5597:6;501::26;;511:1;501:11;493:34;;;;;;;7195:2:124;493:34:26;;;7177:21:124;7234:2;7214:18;;;7207:30;7273:12;7253:18;;;7246:40;7303:18;;493:34:26;6993:334:124;493:34:26;547:1;538:10;;5997:23:45::1;::::0;::::1;5615:17;5997:23:::0;;;:12:::1;:23;::::0;;;;;5615:17;;;;;;;;5982:53:::1;::::0;:7;;5997:23:::1;;3342:3;5982:14;:53::i;:::-;6095:23;::::0;::::1;6045:18;6095:23:::0;;;:12:::1;:23;::::0;;;;;6081:11:::1;::::0;5961:74;;-1:-1:-1;6045:18:45;;5961:74;;6066:67:::1;::::0;6081:37:::1;::::0;6095:23:::1;::::0;;::::1;::::0;6081:11:::1;:37;:::i;:::-;6066:7:::0;;:67:::1;;3342:3;6066:14;:67::i;:::-;:92;;;;:::i;:::-;6212:30;::::0;;;;::::1;::::0;::::1;6772:25:124::0;;;6045:113:45;;-1:-1:-1;6183:26:45::1;::::0;6212:25:::1;:11;:25;::::0;::::1;::::0;6745:18:124;;6212:30:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6331:70;::::0;;;;::::1;::::0;::::1;6772:25:124::0;;;6183:59:45;;-1:-1:-1;6256:13:45::1;::::0;6331:35:::1;::::0;::::1;::::0;::::1;::::0;6745:18:124;;6331:70:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6283:118:45;;-1:-1:-1;6283:118:45;-1:-1:-1;6283:118:45;-1:-1:-1;6283:118:45;;-1:-1:-1;6487:21:45::1;::::0;-1:-1:-1;6534:10:45;6511:20:::1;6521:10:::0;6511:7;:20:::1;:::i;:::-;:33;;;;:::i;:::-;6487:57;;6567:10;:23;;;6591:3;6596:13;6611;6567:58;;;;;;;;;;;;;;;;10812:25:124::0;;;10868:2;10853:18;;10846:34;;;;10911:2;10896:18;;10889:34;10800:2;10785:18;;10610:319;6567:58:45::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6558:67;;6169:467;;;6730:10;6696:7;:18;6704:9;6696:18;;;;;;;;;;;;;;;:30;6715:10;6696:30;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6750:18:45::1;6758:9;6750:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:44;;6784:10;;6750:18;:44:::1;::::0;6784:10;;6750:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6896:63:45::1;::::0;-1:-1:-1;6913:3:45;6918:7;6927:6;6935:23:::1;6948:10:::0;6935;:23:::1;:::i;:::-;6896:16;:63::i;:::-;7064:13;7080:55;7094:10;7106:6;7114:11;7127:7;7080:13;:55::i;:::-;7064:71;;7163:9;7151:39;;7158:3;7151:39;7174:7;7183:6;7151:39;;;;;;11430:25:124::0;;;11486:2;11471:18;;11464:34;11418:2;11403:18;;11256:248;7151:39:45::1;;;;;;;;580:1:26::0;571:6;:10;7209:6:45;;;;-1:-1:-1;5393:1838:45;;-1:-1:-1;;;;;;;;;;;5393:1838:45:o;1496:434:22:-;1767:5;;;;1753:10;:19;;:76;;-1:-1:-1;1776:9:22;;:53;;;;;1794:10;1776:53;;;11770:34:124;1814:4:22;11820:18:124;;;11813:43;1776:9:22;1821:7;;;11872:18:124;;;11865:107;1776:9:22;;;;;:17;;11682:18:124;;1776:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;;;;;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:22;1496:434;:::o;4497:193:45:-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;7534:2:124;867:58:22;;;7516:21:124;7573:2;7553:18;;;7546:30;7612:14;7592:18;;;7585:42;7644:18;;867:58:22;7332:336:124;867:58:22;4602:11:45::1;::::0;::::1;::::0;;::::1;4590:23:::0;;::::1;;4586:58;;;4622:22;;;;;;;;;;;;;;4586:58;4654:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4497:193::o;4301:158::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;7534:2:124;867:58:22;;;7516:21:124;7573:2;7553:18;;;7546:30;7612:14;7592:18;;;7585:42;7644:18;;867:58:22;7332:336:124;867:58:22;4390:3:45::1;4383:4;:10;;;4379:45;;;4402:22;;;;;;;;;;;;;;4379:45;4434:11;:18:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4301:158::o;4325:1877:34:-;4463:14;4479:7;501:6:26;;511:1;501:11;493:34;;;;;;;7195:2:124;493:34:26;;;7177:21:124;7234:2;7214:18;;;7207:30;7273:12;7253:18;;;7246:40;7303:18;;493:34:26;6993:334:124;493:34:26;547:1;538:10;;4652:13:34::1;4675:16;4685:6;4675:7:::0;:16:::1;:::i;:::-;4668:33;::::0;4695:6:::1;4668:33;:::i;:::-;4652:49;;4777:15;4767:6;4759:15;;:33;4755:68;;;4801:22;;;;;;;;;;;;;;4755:68;4861:23;::::0;;::::1;4834:24;4861:23:::0;;;:10:::1;:23;::::0;;;;;;;:31:::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;4964:112:::1;;5031:45;::::0;::::1;::::0;;13142:42:124;13130:55;;5031:45:34::1;::::0;::::1;13112:74:124::0;13234:14;13222:27;;13202:18;;;13195:55;13085:18;;5031:45:34::1;12925:331:124::0;4964:112:34::1;5297:36;::::0;;;;5327:4:::1;5297:36;::::0;::::1;3304:74:124::0;5276:18:34::1;::::0;5297:21:::1;::::0;::::1;::::0;::::1;::::0;3277:18:124;;5297:36:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5276:57:::0;-1:-1:-1;5343:64:34::1;:28;::::0;::::1;5372:10;5392:4;5399:7:::0;5343:28:::1;:64::i;:::-;5460:20;5473:7:::0;5460:10;:20:::1;:::i;:::-;5421:36;::::0;;;;5451:4:::1;5421:36;::::0;::::1;3304:74:124::0;5421:21:34::1;::::0;::::1;::::0;::::1;::::0;3277:18:124;;5421:36:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;5417:109;;;5501:25;;;;;;;;;;;;;;5417:109;5681:17;::::0;::::1;::::0;;::::1;::::0;::::1;5667:11:::0;::::1;:31;5663:533;;;5799:17;::::0;5750::::1;::::0;5770:61:::1;::::0;5785:31:::1;::::0;5799:17:::1;::::0;;::::1;::::0;::::1;::::0;5785:11:::1;:31;:::i;:::-;5770:7:::0;;:61:::1;;3342:3:45;5770:14:34;:61::i;:::-;5845:18;5853:9;5845:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:44;;5750:81;;-1:-1:-1;5750:81:34;;5845:31;;:18;:44:::1;::::0;5750:81;;5845:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;5940:14:34::1;::::0;::::1;;5955:10;5967:19;5977:9:::0;5967:7;:19:::1;:::i;:::-;5940:47;::::0;;::::1;::::0;;;;;;5870:42:124;5858:55;;;5940:47:34::1;::::0;::::1;5840:74:124::0;5930:18;;;5923:34;5813:18;;5940:47:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6010:9;6031;6021:7;:19;;;;:::i;:::-;6002:39;;;;;;;;;;5663:533;6108:35;::::0;;;;6123:10:::1;6108:35;::::0;::::1;5840:74:124::0;5930:18;;;5923:34;;;6108:14:34::1;::::0;::::1;::::0;::::1;::::0;5813:18:124;;6108:35:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6166:9:34;;-1:-1:-1;6177:7:34;;-1:-1:-1;;;;;;559:1:26::1;580::::0;571:6;:10;4325:1877:34;;;;-1:-1:-1;4325:1877:34;-1:-1:-1;;4325:1877:34:o;5180:127:45:-;5277:23;;;5238:6;5277:23;;;:12;:23;;;;;;5263:11;;:37;;5277:23;;;;;5263:11;:37;:::i;:::-;5256:44;5180:127;-1:-1:-1;;5180:127:45:o;6987:1307:34:-;7110:14;501:6:26;;511:1;501:11;493:34;;;;;;;7195:2:124;493:34:26;;;7177:21:124;7234:2;7214:18;;;7207:30;7273:12;7253:18;;;7246:40;7303:18;;493:34:26;6993:334:124;493:34:26;547:1;538:10;;7294:13:34::1;7317:16;7327:6;7317:7:::0;:16:::1;:::i;:::-;7310:33;::::0;7337:6:::1;7310:33;:::i;:::-;7294:49;;7419:15;7409:6;7401:15;;:33;7397:68;;;7443:22;;;;;;;;;;;;;;7397:68;7561:23;::::0;;::::1;7534:24;7561:23:::0;;;:10:::1;:23;::::0;;;;;;;:31:::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;7602:660:::1;;7662:18;7682:20:::0;7706:38:::1;7724:11;7737:6;7706:38;;:17;:38::i;:::-;7661:83;;;;7758:22;7831:4;7817:20;;;:::i;:::-;7855:22;7869:6:::0;7855:22:::1;:::i;:::-;7901:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7783:248;::::0;;::::1;::::0;::::1;14411:19:124::0;;;;14446:12;;14439:28;;;;14505:3;14501:16;14519:66;14497:89;14483:12;;;;14476:111;;;;14706:15;;;14606:66;14702:24;;;14688:12;;;14681:46;7971:15:34::1;::::0;::::1;14743:12:124::0;;;14736:28;8012:4:34::1;14799:15:124::0;;;14795:24;14780:13;;;14773:47;14836:13;;7783:248:34::1;::::0;;;;;::::1;::::0;;;;;;;-1:-1:-1;8072:49:34::1;:38;8080:23;8072:38;7783:248:::0;8072:38:::1;:49::i;:::-;8136:23;::::0;;::::1;;::::0;;;:10:::1;:23;::::0;;;;;;;:31:::1;::::0;::::1;::::0;;;;;;;;;;:43;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;8198:53;3304:74:124;;;8136:43:34;;-1:-1:-1;8136:31:34;:23;;8198:53:::1;::::0;3277:18:124;8198:53:34::1;;;;;;;7647:615;;;7602:660;580:1:26::0;571:6;:10;8278:9:34;6987:1307;-1:-1:-1;;;;6987:1307:34:o;8900:600::-;9021:14;;9228:16;9238:6;9228:7;:16;:::i;:::-;9221:33;;9248:6;9221:33;:::i;:::-;9292:23;;;;9265:24;9292:23;;;:10;:23;;;;;;;;:31;;;;;;;;;;;9205:49;;-1:-1:-1;9292:31:34;;9376:90;;9421:45;;;;;13142:42:124;13130:55;;9421:45:34;;;13112:74:124;13234:14;13222:27;;13202:18;;;13195:55;13085:18;;9421:45:34;12925:331:124;9376:90:34;9484:9;8900:600;-1:-1:-1;;;;8900:600:34:o;8343:508::-;8524:26;;;;;;;;6772:25:124;;;8419:14:34;;8563:4;;8516:52;8524:11;:21;;;;6745:18:124;;8524:26:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8516:52;;;8512:87;;8577:22;;;;;;;;;;;;;;8512:87;8710:43;;;;;;;;6772:25:124;;;8671:16:34;;;;8710:38;:11;:38;;;;6745:18:124;;8710:43:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;8792:3;8710:86;;;;;;;;;;;;;6772:25:124;;6760:2;6745:18;;6626:177;8710:86:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8814:22:34;;;;;;;;:10;:22;;;;;;;;:30;;;;;;;;;;;;;;;8343:508;-1:-1:-1;;;;;;;8343:508:34:o;950:540:22:-;1070:9;;1037:4;;1070:9;;1388:27;;;;;:77;;-1:-1:-1;1419:46:22;;;;;:12;11788:15:124;;;1419:46:22;;;11770:34:124;1446:4:22;11820:18:124;;;11813:43;11904:66;11892:79;;11872:18;;;11865:107;1419:12:22;;;;;11682:18:124;;1419:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:22;;;1470:13;;;1478:5;;1470:13;1380:103;950:540;-1:-1:-1;;;;950:540:22:o;902:453:63:-;1083:59;;;1050:19;5858:55:124;;;1083:59:63;;;5840:74:124;5930:18;;;;5923:34;;;1083:59:63;;;;;;;;;;5813:18:124;;;;1083:59:63;;;;;;;;;1106:23;1083:59;;;1050:102;;-1:-1:-1;;;;1050:19:63;;;;:102;;1083:59;1050:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:138;;;;1184:7;:73;;;;-1:-1:-1;1212:11:63;;:16;;:44;;;1243:4;1232:24;;;;;;;;;;;;:::i;:::-;1184:123;;;;;1306:1;1285:5;1277:26;;;:30;1184:123;1163:185;;;;;;;15881:2:124;1163:185:63;;;15863:21:124;15920:2;15900:18;;;15893:30;15959:17;15939:18;;;15932:45;15994:18;;1163:185:63;15679:339:124;1163:185:63;1004:351;;902:453;;;:::o;742:4147:62:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:62;;;;-1:-1:-1;1787:13:62;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;2753:31;;2787:1;2753:35;;;2752:51;;2909:22;;;;;2537:21;;;3053:16;;;2490:20;;;;2479:32;;;2737:12;3321;;;3317:23;;;;3313:31;;;3380:12;;;;3371:21;;;;3765:1;:15;;3784:1;3764:21;;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;4834:11;;-1:-1:-1;;742:4147:62;;;;;;:::o;7319:2480:45:-;7504:13;7519:20;7541:17;7560:16;7584:11;:38;;;7623:3;7584:43;;;;;;;;;;;;;6772:25:124;;6760:2;6745:18;;6626:177;7584:43:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;7666:3;7584:86;;;;;;;;;;;;;6772:25:124;;6760:2;6745:18;;6626:177;7584:86:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7503:167;;;;;;;;;;7721:21;7755:8;7745:7;:18;;;;:::i;:::-;8041:35;;;;;8070:4;8041:35;;;3304:74:124;7721:42:45;;-1:-1:-1;8018:20:45;;8041;;;;;;3277:18:124;;8041:35:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8018:58;-1:-1:-1;8086:63:45;:27;;;8114:10;8134:4;8141:7;8086:27;:63::i;:::-;8201:22;8216:7;8201:12;:22;:::i;:::-;8163:35;;;;;8192:4;8163:35;;;3304:74:124;8163:20:45;;;;;;3277:18:124;;8163:35:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;8159:110;;;8244:25;;;;;;;;;;;;;;8159:110;8460:26;;;;8456:1337;;8598:52;:23;;;8622:12;8636:13;8598:23;:52::i;:::-;8767:36;;;;;8797:4;8767:36;;;3304:74:124;8743:21:45;;8767;;;;;;3277:18:124;;8767:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8817:65;;;;;;;;10812:25:124;;;10853:18;;;10846:34;;;10896:18;;;10889:34;;;8743:60:45;;-1:-1:-1;8817:36:45;;;;;;10785:18:124;;8817:65:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9068:7;9052:13;:23;;;;:::i;:::-;9012:36;;;;;9042:4;9012:36;;;3304:74:124;9012:21:45;;;;;;3277:18:124;;9012:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9008:117;;;9101:24;;;;;;;;;;;;;;9008:117;8488:648;8456:1337;;;9481:36;;;;;9511:4;9481:36;;;3304:74:124;9457:21:45;;9481;;;;;;3277:18:124;;9481:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9457:60;-1:-1:-1;9531:59:45;:28;;;9560:5;9575:4;9582:7;9531:28;:59::i;:::-;9648:23;9664:7;9648:13;:23;:::i;:::-;9608:36;;;;;9638:4;9608:36;;;3304:74:124;9608:21:45;;;;;;3277:18:124;;9608:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9604:118;;;9697:25;;;;;;;;;;;;;;9604:118;9737:45;:23;;;9761:5;9768:13;9737:23;:45::i;:::-;9142:651;8456:1337;7457:2342;;;;;;7319:2480;;;;:::o;3028:1202:34:-;3189:13;3897:15;3879:34;;:8;:34;;;3875:349;;;-1:-1:-1;4013:23:34;;;;;;;;:10;:23;;;;;;;;:31;;;;;;;;;;;;;:57;;;;;5858:55:124;;;4013:57:34;;;5840:74:124;5930:18;;;5923:34;;;4013:31:34;;;;;;;:36;;5813:18:124;;4013:57:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:349;;;4168:45;:24;;;4193:10;4205:7;4168:24;:45::i;402:494:63:-;609:69;;;576:19;16304:15:124;;;609:69:63;;;16286:34:124;16356:15;;;16336:18;;;16329:43;16388:18;;;;16381:34;;;609:69:63;;;;;;;;;;16198:18:124;;;;609:69:63;;;;;;;;;632:27;609:69;;;576:112;;-1:-1:-1;;;;576:19:63;;;;:112;;609:69;576:112;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:148;;;;720:7;:73;;;;-1:-1:-1;748:11:63;;:16;;:44;;;779:4;768:24;;;;;;;;;;;;:::i;:::-;720:123;;;;;842:1;821:5;813:26;;;:30;720:123;699:190;;;;;;;16628:2:124;699:190:63;;;16610:21:124;16667:2;16647:18;;;16640:30;16706:22;16686:18;;;16679:50;16746:18;;699:190:63;16426:344:124;699:190:63;530:366;;402:494;;;;:::o;10979:1744:45:-;11089:18;;11367:12;;;;11470:16;11480:6;11470:7;:16;:::i;:::-;11447:40;-1:-1:-1;11502:11:45;11516:14;11447:40;11525:5;11516:14;:::i;:::-;:24;;11533:7;11516:24;:::i;:::-;11502:38;-1:-1:-1;11582:11:45;11609:6;11597:8;11502:38;11597:1;:8;:::i;:::-;11596:19;;;;:::i;:::-;11582:33;-1:-1:-1;11665:1:45;11644:13;11582:33;11644:6;:13;:::i;:::-;:17;;11660:1;11644:17;:::i;:::-;11643:23;;;;:::i;:::-;11636:30;;:4;:30;:::i;:::-;11629:37;-1:-1:-1;11680:12:45;11717:7;11704:8;11629:37;11711:1;11704:8;:::i;:::-;11696:17;;:4;:17;:::i;:::-;11695:29;;;;:::i;:::-;11680:44;-1:-1:-1;11769:1:45;11753:12;11680:44;11753:4;:12;:::i;:::-;11752:18;;;;:::i;:::-;11745:25;;:4;:25;:::i;:::-;:30;;11773:2;11745:30;:::i;:::-;11738:37;-1:-1:-1;11789:13:45;11819:4;11806:9;11738:37;11806:2;:9;:::i;:::-;11805:18;;;;:::i;:::-;11789:34;-1:-1:-1;11837:11:45;11876:2;11859:13;11789:34;11859:4;:13;:::i;:::-;11858:20;;;;:::i;:::-;11851:27;;:4;:27;:::i;:::-;11837:41;-1:-1:-1;11899:11:45;11908:2;11899:6;:11;:::i;:::-;11892:18;-1:-1:-1;11946:9:45;11892:18;11946:2;:9;:::i;:::-;11933:10;:6;11942:1;11933:10;:::i;:::-;:22;;;;:::i;:::-;11924:31;-1:-1:-1;12005:4:45;11997:5;11984:9;11991:2;11984:4;:9;:::i;:::-;11977:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;11969:40;-1:-1:-1;12075:6:45;;-1:-1:-1;12110:4:45;-1:-1:-1;12136:21:45;;-1:-1:-1;12160:23:45;;-1:-1:-1;12170:12:45;;-1:-1:-1;12177:5:45;;-1:-1:-1;11969:40:45;12170:12;:::i;:::-;12160:9;:23::i;:::-;12136:47;;12193:22;12226:2;12218:5;:10;:103;;12305:16;12315:5;12305:9;:16::i;:::-;12218:103;;;12272:16;12282:5;12272:9;:16::i;:::-;12250:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;12218:103;12193:128;;12331:20;12360:2;12354:3;:8;:97;;12437:14;12447:3;12437:9;:14::i;:::-;12354:97;;;12406:14;12416:3;12406:9;:14::i;:::-;12384:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;12354:97;12331:120;;12548:11;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12573:7;12587:8;12602:6;12531:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12504:115;;12662:11;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12689:7;12698:8;12708:6;12645:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12629:87;;11135:1588;;;;;;10979:1744;;;;;:::o;605:8041:1:-;847:11;;1202:4;1196:11;1750:66;1697:137;;1017:17;;;1878:3;1874:17;;;861:1;1858:14;;;1851:41;;;;2636:66;2609:4;2600:14;;2572:148;3557:66;1032:2;3521:14;;3493:148;847:15;;3681:21;;3674:4;3665:14;;3658:45;;;4645:66;4618:4;4609:14;;4581:148;4762:4;4753:14;;4746:45;5184:66;5157:4;5148:14;;5120:148;5312:4;5308:25;;;5301:4;5292:14;;;5285:49;;;;6969:66;6942:4;6933:14;;6905:148;697:16;;847:11;967:18;;;;1017:17;7672:13;;;847:11;967:4;7550:10;;7712:276;7730:2;7719:7;:13;7712:276;;7878:14;;7862:31;;7940:2;7960:13;;;;7734;;;;;7929;7712:276;;;8163:14;;8018:23;8024:2;:12;;;8018:3;:19;:23;8016:26;8159:25;;;8143:42;;8351:3;8347:21;;;8212:18;;;8331:38;;;8510:12;8505:3;8001:12;8495:28;8483:40;-1:-1:-1;8554:22:1;;;8550:80;;8603:12;;;;;;;;;;;;;;8550:80;801:7839;;;;;;;;605:8041;;;;:::o;12941:556:45:-;12995:13;13024:2;13030:1;13024:7;13020:48;;-1:-1:-1;;13047:10:45;;;;;;;;;;;;;;;;;;12941:556::o;13020:48::-;13089:2;13077:9;13122:66;13129:6;;13122:66;;13151:5;;;;:::i;:::-;;-1:-1:-1;13170:7:45;;-1:-1:-1;13175:2:45;13170:7;;:::i;:::-;;;13122:66;;;13197:17;13227:3;13217:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13217:14:45;-1:-1:-1;13197:34:45;-1:-1:-1;13253:3:45;13266:196;13273:7;;13266:196;;13300:5;13304:1;13300;:5;:::i;:::-;13296:9;-1:-1:-1;13319:10:45;13350:7;13355:2;13350;:7;:::i;:::-;13349:14;;13361:2;13349:14;:::i;:::-;13344:19;;:2;:19;:::i;:::-;13333:31;;:2;:31;:::i;:::-;13319:46;;13379:9;13398:4;13391:12;;13379:24;;13427:2;13417:4;13422:1;13417:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;13443:8:45;13449:2;13443:8;;:::i;:::-;;;13282:180;;13266:196;;;-1:-1:-1;13485:4:45;12941:556;-1:-1:-1;;;;12941:556:45:o;215:125:124:-;300:14;293:5;289:26;282:5;279:37;269:65;;330:1;327;320:12;269:65;215:125;:::o;345:245::-;403:6;456:2;444:9;435:7;431:23;427:32;424:52;;;472:1;469;462:12;424:52;511:9;498:23;530:30;554:5;530:30;:::i;595:154::-;681:42;674:5;670:54;663:5;660:65;650:93;;739:1;736;729:12;754:134;822:20;;851:31;822:20;851:31;:::i;:::-;754:134;;;:::o;893:247::-;952:6;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1060:9;1047:23;1079:31;1104:5;1079:31;:::i;1145:339::-;1237:6;1245;1298:2;1286:9;1277:7;1273:23;1269:32;1266:52;;;1314:1;1311;1304:12;1266:52;1353:9;1340:23;1372:31;1397:5;1372:31;:::i;:::-;1422:5;1474:2;1459:18;;;;1446:32;;-1:-1:-1;;;1145:339:124:o;1489:184::-;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1678:334;1749:2;1743:9;1805:2;1795:13;;1810:66;1791:86;1779:99;;1908:18;1893:34;;1929:22;;;1890:62;1887:88;;;1955:18;;:::i;:::-;1991:2;1984:22;1678:334;;-1:-1:-1;1678:334:124:o;2017:1112::-;2125:6;2133;2186:2;2174:9;2165:7;2161:23;2157:32;2154:52;;;2202:1;2199;2192:12;2154:52;2242:9;2229:23;2271:18;2312:2;2304:6;2301:14;2298:34;;;2328:1;2325;2318:12;2298:34;2366:6;2355:9;2351:22;2341:32;;2411:7;2404:4;2400:2;2396:13;2392:27;2382:55;;2433:1;2430;2423:12;2382:55;2469:2;2456:16;2491:4;2514:2;2510;2507:10;2504:36;;;2520:18;;:::i;:::-;2566:2;2563:1;2559:10;2549:20;;2589:28;2613:2;2609;2605:11;2589:28;:::i;:::-;2651:15;;;2721:11;;;2717:20;;;2682:12;;;;2749:19;;;2746:39;;;2781:1;2778;2771:12;2746:39;2805:11;;;;2825:217;2841:6;2836:3;2833:15;2825:217;;;2921:3;2908:17;2895:30;;2938:31;2963:5;2938:31;:::i;:::-;2982:18;;;2858:12;;;;3020;;;;2825:217;;;3061:5;-1:-1:-1;3085:38:124;;-1:-1:-1;3104:18:124;;;3085:38;:::i;:::-;3075:48;;;;;;2017:1112;;;;;:::o;3389:594::-;3484:6;3492;3500;3508;3516;3569:3;3557:9;3548:7;3544:23;3540:33;3537:53;;;3586:1;3583;3576:12;3537:53;3625:9;3612:23;3644:31;3669:5;3644:31;:::i;:::-;3694:5;-1:-1:-1;3751:2:124;3736:18;;3723:32;3764:33;3723:32;3764:33;:::i;:::-;3389:594;;3816:7;;-1:-1:-1;;;;3870:2:124;3855:18;;3842:32;;3921:2;3906:18;;3893:32;;3972:3;3957:19;;;3944:33;;-1:-1:-1;3389:594:124:o;4260:401::-;4342:6;4350;4403:2;4391:9;4382:7;4378:23;4374:32;4371:52;;;4419:1;4416;4409:12;4371:52;4458:9;4445:23;4477:31;4502:5;4477:31;:::i;:::-;4527:5;-1:-1:-1;4584:2:124;4569:18;;4556:32;4597;4556;4597;:::i;:::-;4648:7;4638:17;;;4260:401;;;;;:::o;5168:469::-;5259:6;5267;5275;5328:2;5316:9;5307:7;5303:23;5299:32;5296:52;;;5344:1;5341;5334:12;5296:52;5383:9;5370:23;5402:31;5427:5;5402:31;:::i;:::-;5452:5;-1:-1:-1;5509:2:124;5494:18;;5481:32;5522;5481;5522;:::i;:::-;5168:469;;5573:7;;-1:-1:-1;;;5627:2:124;5612:18;;;;5599:32;;5168:469::o;6218:403::-;6301:6;6309;6362:2;6350:9;6341:7;6337:23;6333:32;6330:52;;;6378:1;6375;6368:12;6330:52;6417:9;6404:23;6436:31;6461:5;6436:31;:::i;:::-;6486:5;-1:-1:-1;6543:2:124;6528:18;;6515:32;6556:33;6515:32;6556:33;:::i;6808:180::-;6867:6;6920:2;6908:9;6899:7;6895:23;6891:32;6888:52;;;6936:1;6933;6926:12;6888:52;-1:-1:-1;6959:23:124;;6808:180;-1:-1:-1;6808:180:124:o;7673:266::-;7758:6;7811:2;7799:9;7790:7;7786:23;7782:32;7779:52;;;7827:1;7824;7817:12;7779:52;7859:9;7853:16;7878:31;7903:5;7878:31;:::i;7944:249::-;8013:6;8066:2;8054:9;8045:7;8041:23;8037:32;8034:52;;;8082:1;8079;8072:12;8034:52;8114:9;8108:16;8133:30;8157:5;8133:30;:::i;8500:184::-;8552:77;8549:1;8542:88;8649:4;8646:1;8639:15;8673:4;8670:1;8663:15;8689:184;8741:77;8738:1;8731:88;8838:4;8835:1;8828:15;8862:4;8859:1;8852:15;8878:195;8917:3;8948:66;8941:5;8938:77;8935:103;;9018:18;;:::i;:::-;-1:-1:-1;9065:1:124;9054:13;;8878:195::o;9078:232::-;9117:3;9145:14;9186:2;9183:1;9179:10;9216:2;9213:1;9209:10;9247:3;9243:2;9239:12;9234:3;9231:21;9228:47;;;9255:18;;:::i;:::-;9291:13;;9078:232;-1:-1:-1;;;;9078:232:124:o;9315:125::-;9355:4;9383:1;9380;9377:8;9374:34;;;9388:18;;:::i;:::-;-1:-1:-1;9425:9:124;;9315:125::o;9726:879::-;9870:6;9878;9886;9894;9902;9910;9963:3;9951:9;9942:7;9938:23;9934:33;9931:53;;;9980:1;9977;9970:12;9931:53;10012:9;10006:16;10031:31;10056:5;10031:31;:::i;:::-;10131:2;10116:18;;10110:25;10081:5;;-1:-1:-1;10144:33:124;10110:25;10144:33;:::i;:::-;10248:2;10233:18;;10227:25;10196:7;;-1:-1:-1;10261:33:124;10227:25;10261:33;:::i;:::-;10365:2;10350:18;;10344:25;10313:7;;-1:-1:-1;10378:33:124;10344:25;10378:33;:::i;:::-;10482:3;10467:19;;10461:26;10430:7;;-1:-1:-1;10496:32:124;10461:26;10496:32;:::i;:::-;10547:7;10537:17;;;10594:3;10583:9;10579:19;10573:26;10563:36;;9726:879;;;;;;;;:::o;10934:184::-;11004:6;11057:2;11045:9;11036:7;11032:23;11028:32;11025:52;;;11073:1;11070;11063:12;11025:52;-1:-1:-1;11096:16:124;;10934:184;-1:-1:-1;10934:184:124:o;11123:128::-;11163:3;11194:1;11190:6;11187:1;11184:13;11181:39;;;11200:18;;:::i;:::-;-1:-1:-1;11236:9:124;;11123:128::o;11983:277::-;12050:6;12103:2;12091:9;12082:7;12078:23;12074:32;12071:52;;;12119:1;12116;12109:12;12071:52;12151:9;12145:16;12204:5;12197:13;12190:21;12183:5;12180:32;12170:60;;12226:1;12223;12216:12;12265:184;12317:77;12314:1;12307:88;12414:4;12411:1;12404:15;12438:4;12435:1;12428:15;12454:195;12493:1;12519:14;12560:2;12557:1;12553:10;12582:3;12572:37;;12589:18;;:::i;:::-;12627:10;;12623:20;;;;;12454:195;-1:-1:-1;;12454:195:124:o;12654:266::-;12693:7;12725:14;12766:2;12763:1;12759:10;12796:2;12793:1;12789:10;12852:3;12848:2;12844:12;12839:3;12836:21;12829:3;12822:11;12815:19;12811:47;12808:73;;;12861:18;;:::i;:::-;12901:13;;12654:266;-1:-1:-1;;;;12654:266:124:o;13261:225::-;13300:4;13329:14;13393:10;;;;13363;;13415:12;;;13412:38;;;13430:18;;:::i;:::-;13467:13;;13261:225;-1:-1:-1;;;13261:225:124:o;13491:357::-;13609:12;;13656:4;13645:16;;;13639:23;;13609:12;13674:16;;13671:171;;;13764:66;13754:6;13748:4;13744:17;13741:1;13737:25;13733:98;13726:5;13722:110;13713:119;;13671:171;;13491:357;;;:::o;13853:273::-;13921:6;13974:2;13962:9;13953:7;13949:23;13945:32;13942:52;;;13990:1;13987;13980:12;13942:52;14022:9;14016:16;14072:4;14065:5;14061:16;14054:5;14051:27;14041:55;;14092:1;14089;14082:12;15137:258;15209:1;15219:113;15233:6;15230:1;15227:13;15219:113;;;15309:11;;;15303:18;15290:11;;;15283:39;15255:2;15248:10;15219:113;;;15350:6;15347:1;15344:13;15341:48;;;15385:1;15376:6;15371:3;15367:16;15360:27;15341:48;;15137:258;;;:::o;15400:274::-;15529:3;15567:6;15561:13;15583:53;15629:6;15624:3;15617:4;15609:6;15605:17;15583:53;:::i;:::-;15652:16;;;;;15400:274;-1:-1:-1;;15400:274:124:o;16775:120::-;16815:1;16841;16831:35;;16846:18;;:::i;:::-;-1:-1:-1;16880:9:124;;16775:120::o;16900:367::-;16939:3;16974:1;16971;16967:9;17083:1;17015:66;17011:74;17008:1;17004:82;16999:2;16992:10;16988:99;16985:125;;;17090:18;;:::i;:::-;17209:1;17141:66;17137:74;17134:1;17130:82;17126:2;17122:91;17119:117;;;17216:18;;:::i;:::-;-1:-1:-1;;17252:9:124;;16900:367::o;17272:655::-;17311:7;17343:66;17435:1;17432;17428:9;17463:1;17460;17456:9;17508:1;17504:2;17500:10;17497:1;17494:17;17489:2;17485;17481:11;17477:35;17474:61;;;17515:18;;:::i;:::-;17554:66;17646:1;17643;17639:9;17693:1;17689:2;17684:11;17681:1;17677:19;17672:2;17668;17664:11;17660:37;17657:63;;;17700:18;;:::i;:::-;17746:1;17743;17739:9;17729:19;;17793:1;17789:2;17784:11;17781:1;17777:19;17772:2;17768;17764:11;17760:37;17757:63;;;17800:18;;:::i;:::-;17865:1;17861:2;17856:11;17853:1;17849:19;17844:2;17840;17836:11;17832:37;17829:63;;;17872:18;;:::i;:::-;-1:-1:-1;;;17912:9:124;;;;;17272:655;-1:-1:-1;;;17272:655:124:o;17932:308::-;17971:1;17997;17987:35;;18002:18;;:::i;:::-;18119:66;18116:1;18113:73;18044:66;18041:1;18038:73;18034:153;18031:179;;;18190:18;;:::i;:::-;-1:-1:-1;18224:10:124;;17932:308::o;18245:369::-;18284:4;18320:1;18317;18313:9;18429:1;18361:66;18357:74;18354:1;18350:82;18345:2;18338:10;18334:99;18331:125;;;18436:18;;:::i;:::-;18555:1;18487:66;18483:74;18480:1;18476:82;18472:2;18468:91;18465:117;;;18562:18;;:::i;:::-;-1:-1:-1;;18599:9:124;;18245:369::o;18619:112::-;18651:1;18677;18667:35;;18682:18;;:::i;:::-;-1:-1:-1;18716:9:124;;18619:112::o;18736:418::-;18998:3;18993;18986:16;18968:3;19031:6;19025:13;19047:61;19101:6;19097:1;19092:3;19088:11;19081:4;19073:6;19069:17;19047:61;:::i;:::-;19128:16;;;;19146:1;19124:24;;18736:418;-1:-1:-1;;18736:418:124:o;19159:765::-;19239:6;19292:2;19280:9;19271:7;19267:23;19263:32;19260:52;;;19308:1;19305;19298:12;19260:52;19341:9;19335:16;19370:18;19411:2;19403:6;19400:14;19397:34;;;19427:1;19424;19417:12;19397:34;19465:6;19454:9;19450:22;19440:32;;19510:7;19503:4;19499:2;19495:13;19491:27;19481:55;;19532:1;19529;19522:12;19481:55;19561:2;19555:9;19583:2;19579;19576:10;19573:36;;;19589:18;;:::i;:::-;19631:112;19739:2;19670:66;19663:4;19659:2;19655:13;19651:86;19647:95;19631:112;:::i;:::-;19618:125;;19766:2;19759:5;19752:17;19806:7;19801:2;19796;19792;19788:11;19784:20;19781:33;19778:53;;;19827:1;19824;19817:12;19778:53;19840:54;19891:2;19886;19879:5;19875:14;19870:2;19866;19862:11;19840:54;:::i;19929:1294::-;20507:3;20545:6;20539:13;20561:53;20607:6;20602:3;20595:4;20587:6;20583:17;20561:53;:::i;:::-;20675:3;20636:16;;;20661:18;;;20704:13;;20726:65;20704:13;20778:1;20767:13;;20760:4;20748:17;;20726:65;:::i;:::-;20821:8;20814:5;20810:20;20800:30;;;20849:3;20880:2;20876:1;20872:2;20868:10;20861:22;20914:6;20908:13;20930:62;20983:8;20979:1;20975:2;20971:10;20964:4;20956:6;20952:17;20930:62;:::i;:::-;21052:1;21011:17;;21044:10;;;21037:22;21084:13;;21106:62;21084:13;21155:1;21147:10;;21140:4;21128:17;;21106:62;:::i;:::-;21192:17;21184:33;;;;-1:-1:-1;;;;;;19929:1294:124:o;21228:1000::-;21604:3;21642:6;21636:13;21658:53;21704:6;21699:3;21692:4;21684:6;21680:17;21658:53;:::i;:::-;21772:3;21733:16;;;21758:18;;;21801:13;;21823:65;21801:13;21875:1;21864:13;;21857:4;21845:17;;21823:65;:::i;:::-;21952:13;;21907:20;;;21974:62;21952:13;22023:1;22015:10;;22008:4;21996:17;;21974:62;:::i;:::-;22097:13;;22055:17;;;22119:62;22097:13;22168:1;22160:10;;22153:4;22141:17;;22119:62;:::i;:::-;22201:17;22220:1;22197:25;;21228:1000;-1:-1:-1;;;;;;21228:1000:124:o;22233:228::-;22273:7;22399:1;22331:66;22327:74;22324:1;22321:81;22316:1;22309:9;22302:17;22298:105;22295:131;;;22406:18;;:::i;:::-;-1:-1:-1;22446:9:124;;22233:228::o;22466:204::-;22504:3;22540:4;22537:1;22533:12;22572:4;22569:1;22565:12;22607:3;22601:4;22597:14;22592:3;22589:23;22586:49;;;22615:18;;:::i;:::-;22651:13;;22466:204;-1:-1:-1;;;22466:204:124:o",
    "linkReferences": {},
    "immutableReferences": {
      "33774": [
        {
          "start": 530,
          "length": 32
        },
        {
          "start": 6770,
          "length": 32
        }
      ],
      "41901": [
        {
          "start": 3613,
          "length": 32
        },
        {
          "start": 5621,
          "length": 32
        }
      ],
      "41904": [
        {
          "start": 3001,
          "length": 32
        },
        {
          "start": 7247,
          "length": 32
        },
        {
          "start": 7504,
          "length": 32
        },
        {
          "start": 8700,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEE_DECIMALS()": "ccf288c6",
    "authority()": "bf7e214f",
    "bondTokenImplementation()": "6c436dd5",
    "bondTokens(address,uint48)": "709ea865",
    "claimFees(address[],address)": "2f6fa94e",
    "create(address,uint48,uint256)": "b7314ef9",
    "createFeeDiscount()": "06692a37",
    "deploy(address,uint48)": "c6e38a4b",
    "getBondToken(address,uint48)": "fa922c26",
    "getBondTokenForMarket(uint256)": "fcdc3126",
    "getFee(address)": "b88c9148",
    "owner()": "8da5cb5b",
    "protocolFee()": "b0e21e8a",
    "purchase(address,address,uint256,uint256,uint256)": "6de5b4cd",
    "redeem(address,uint256)": "1e9a6950",
    "referrerFees(address)": "c23135dd",
    "rewards(address,address)": "e70b9e27",
    "setAuthority(address)": "7a9e5e4b",
    "setCreateFeeDiscount(uint48)": "81690927",
    "setOwner(address)": "13af4035",
    "setProtocolFee(uint48)": "b1e55529",
    "setReferrerFee(uint48)": "0d4dfc21"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocol_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CreateFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"maturesOn\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Bonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ERC20BondToken\",\"name\":\"bondToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"ERC20BondTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondTokenImplementation\",\"outputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"name\":\"bondTokens\",\"outputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFeeDiscount\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"getBondToken\",\"outputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getBondTokenForMarket\",\"outputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20BondToken\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"discount_\",\"type\":\"uint48\"}],\"name\":\"setCreateFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Bond Fixed Expiry Teller is an implementation of the      Bond Base Teller contract specific to handling user bond transactions      and tokenizing bond markets where all purchases vest at the same timestamp      as ERC20 tokens. Vesting timestamps are rounded to the nearest day to avoid      duplicate tokens with the same name/symbol.\",\"kind\":\"dev\",\"methods\":{\"claimFees(address[],address)\":{\"params\":{\"to_\":\"Address to send fees to\",\"tokens_\":\"Array of tokens to claim fees for\"}},\"create(address,uint48,uint256)\":{\"params\":{\"amount_\":\"Amount of underlying tokens to deposit\",\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"Address of the ERC20 bond token received\",\"_1\":\"Amount of the ERC20 bond token received\"}},\"deploy(address,uint48)\":{\"details\":\"ERC20 used for fixed-expiryIf a bond token exists for the (underlying, expiry) pair, it returns that address\",\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"Address of the ERC20 bond token being created\"}},\"getBondToken(address,uint48)\":{\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token (this is rounded to the nearest day)\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ERC20BondToken contract address\"}},\"getBondTokenForMarket(uint256)\":{\"params\":{\"id_\":\"ID of the market\"},\"returns\":{\"_0\":\"ERC20BondToken contract address\"}},\"getFee(address)\":{\"params\":{\"referrer_\":\"Address of the referrer\"},\"returns\":{\"_0\":\"Fee in basis points (3 decimal places)\"}},\"purchase(address,address,uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\",\"recipient_\":\"Address of recipient of bond. Allows deposits for other addresses\",\"referrer_\":\"Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee.\"},\"returns\":{\"_0\":\"Amount of payout token to be received from the bond\",\"_1\":\"Timestamp at which the bond token can be redeemed for the underlying token\"}},\"redeem(address,uint256)\":{\"params\":{\"amount_\":\"Amount to redeem\",\"token_\":\"Token to redeem\"}},\"setCreateFeeDiscount(uint48)\":{\"details\":\"The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer\",\"params\":{\"discount_\":\"Create Fee Discount in basis points (3 decimal places)\"}},\"setProtocolFee(uint48)\":{\"params\":{\"fee_\":\"Protocol fee in basis points (3 decimal places)\"}},\"setReferrerFee(uint48)\":{\"params\":{\"fee_\":\"Referrer fee in basis points (3 decimal places)\"}}},\"title\":\"Bond Fixed Expiry Teller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bondTokenImplementation()\":{\"notice\":\"ERC20BondToken reference implementation (deployed on creation to clone from)\"},\"bondTokens(address,uint48)\":{\"notice\":\"ERC20 bond tokens (unique to a underlying and expiry)\"},\"claimFees(address[],address)\":{\"notice\":\"Claim fees accrued by sender in the input tokens and sends them to the provided address\"},\"create(address,uint48,uint256)\":{\"notice\":\"Deposit an ERC20 token and mint a future-dated ERC20 bond token\"},\"createFeeDiscount()\":{\"notice\":\"'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens.\"},\"deploy(address,uint48)\":{\"notice\":\"Deploy a new ERC20 bond token for an (underlying, expiry) pair and return its address\"},\"getBondToken(address,uint48)\":{\"notice\":\"Get the ERC20BondToken contract corresponding to an (underlying, expiry) pair, reverts if no token exists\"},\"getBondTokenForMarket(uint256)\":{\"notice\":\"Get the ERC20BondToken contract corresponding to a market\"},\"getFee(address)\":{\"notice\":\"Get current fee charged by the teller based on the combined protocol and referrer fee\"},\"protocolFee()\":{\"notice\":\"Fee paid to protocol in basis points (3 decimal places).\"},\"purchase(address,address,uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified market\"},\"redeem(address,uint256)\":{\"notice\":\"Redeem a fixed-expiry bond token for the underlying token (bond token must have matured)\"},\"referrerFees(address)\":{\"notice\":\"Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3).\"},\"rewards(address,address)\":{\"notice\":\"Fees earned by an address, by token\"},\"setCreateFeeDiscount(uint48)\":{\"notice\":\"Set the discount for creating bond tokens from the base protocol fee\"},\"setProtocolFee(uint48)\":{\"notice\":\"Set protocol feeMust be guardian\"},\"setReferrerFee(uint48)\":{\"notice\":\"Set your fee as a referrer to the protocolFee is set for sending address\"}},\"notice\":\"Bond Fixed Expiry Teller Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondFixedExpiryTeller.sol\":\"BondFixedExpiryTeller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":clones/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x8f569b077d99ec821c2750c52094b59b3505fb6ca3e6eac9009092bf86c5452d\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://d0f3966d1f97959f6512ee5bc4b73487bf5ce593880e3c1dbf97ed50d49402a0\",\"dweb:/ipfs/QmSAtFtA28Mja6f6FfET26B38XEgrLgqRezNLo3AsXyjVB\"]},\"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol\":{\"keccak256\":\"0x0c6a218a9724ce6d754db22b162600adbdbac41bfe4dd4eecf6b6d77c74eefe7\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://9b05614d01be2267ebb94ae587deb2588e903c101f9a2106230f551bf27faa98\",\"dweb:/ipfs/QmQbRMeckjgCiFp5UXCBwoYiE41o63Wv79s2qeGeCvGSYX\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a\",\"dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da\",\"dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw\"]},\"src/BondFixedExpiryTeller.sol\":{\"keccak256\":\"0xef4108d60ebc80df5190d401a20d906a259c17e78b935ace7864cc8082c4f680\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5e164bf6bcf368e947eed78562ecb7c26e4abcf00dd2141abeb6c0697b1261b8\",\"dweb:/ipfs/QmcuEDU3bc9iS2yrk2fNuS2nbimtVWrqdNyeN1jESJbBb9\"]},\"src/ERC20BondToken.sol\":{\"keccak256\":\"0x14b11e975c3fb2f8aee2962e46aa1ab7c3ba145351f1c8f26e7f234fba9f4410\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://b766eb91df473cd1be260b7ab4198eaef69e6f71f01572e113efb67043d11279\",\"dweb:/ipfs/QmSkaFo1ciHD7Dbdt5u8uinQdtmNg9GWCwFpcsuwb4R5HF\"]},\"src/bases/BondBaseTeller.sol\":{\"keccak256\":\"0x39335b2245d6f1db888127cb326aa7b052c5009e0f4d6ec5e861e9297d7dae83\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af6d750745c512e8b6b212a822d3f52a25be44c3266b0f951c780319f3eac68a\",\"dweb:/ipfs/QmcyA7vvJvbKmchzo44FDPQk4udmmuWqYj7FKfsBsHr2md\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/interfaces/IBondFixedExpiryTeller.sol\":{\"keccak256\":\"0x4530df5a76e94da12895a0d1912388700b17bee34c6c71c3762c5ae8dd5bbfe1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c32dfd7b2803ec73451bba008ed427ce888215b0039e7a871247ed591d4ed373\",\"dweb:/ipfs/QmenLrALRdCMu8ttfyVwiSubM6vzCmAn1cL7vJgAcM76ag\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/lib/CloneERC20.sol\":{\"keccak256\":\"0x44cf60ce8aab43c31e8b6641c417e6a26c3242847c267435906ddb46b37b82c4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f8867033f95983416889a931bfe0396c29be883d62a8330668fadeb06b937fdf\",\"dweb:/ipfs/QmUUKxS87nt3mxZuwCMZrMgLBco3ZRcz4p69hVPuZ7RJ3h\"]},\"src/lib/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb\",\"dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocol_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreateFail"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "maturesOn",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "bondToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ERC20BondTokenCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_DECIMALS",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bondTokenImplementation",
          "outputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bondTokens",
          "outputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "createFeeDiscount",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBondToken",
          "outputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBondTokenForMarket",
          "outputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20BondToken",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referrerFees",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "discount_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCreateFeeDiscount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferrerFee"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimFees(address[],address)": {
            "params": {
              "to_": "Address to send fees to",
              "tokens_": "Array of tokens to claim fees for"
            }
          },
          "create(address,uint48,uint256)": {
            "params": {
              "amount_": "Amount of underlying tokens to deposit",
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "Address of the ERC20 bond token received",
              "_1": "Amount of the ERC20 bond token received"
            }
          },
          "deploy(address,uint48)": {
            "details": "ERC20 used for fixed-expiryIf a bond token exists for the (underlying, expiry) pair, it returns that address",
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "Address of the ERC20 bond token being created"
            }
          },
          "getBondToken(address,uint48)": {
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token (this is rounded to the nearest day)",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ERC20BondToken contract address"
            }
          },
          "getBondTokenForMarket(uint256)": {
            "params": {
              "id_": "ID of the market"
            },
            "returns": {
              "_0": "ERC20BondToken contract address"
            }
          },
          "getFee(address)": {
            "params": {
              "referrer_": "Address of the referrer"
            },
            "returns": {
              "_0": "Fee in basis points (3 decimal places)"
            }
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning",
              "recipient_": "Address of recipient of bond. Allows deposits for other addresses",
              "referrer_": "Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee."
            },
            "returns": {
              "_0": "Amount of payout token to be received from the bond",
              "_1": "Timestamp at which the bond token can be redeemed for the underlying token"
            }
          },
          "redeem(address,uint256)": {
            "params": {
              "amount_": "Amount to redeem",
              "token_": "Token to redeem"
            }
          },
          "setCreateFeeDiscount(uint48)": {
            "details": "The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer",
            "params": {
              "discount_": "Create Fee Discount in basis points (3 decimal places)"
            }
          },
          "setProtocolFee(uint48)": {
            "params": {
              "fee_": "Protocol fee in basis points (3 decimal places)"
            }
          },
          "setReferrerFee(uint48)": {
            "params": {
              "fee_": "Referrer fee in basis points (3 decimal places)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "bondTokenImplementation()": {
            "notice": "ERC20BondToken reference implementation (deployed on creation to clone from)"
          },
          "bondTokens(address,uint48)": {
            "notice": "ERC20 bond tokens (unique to a underlying and expiry)"
          },
          "claimFees(address[],address)": {
            "notice": "Claim fees accrued by sender in the input tokens and sends them to the provided address"
          },
          "create(address,uint48,uint256)": {
            "notice": "Deposit an ERC20 token and mint a future-dated ERC20 bond token"
          },
          "createFeeDiscount()": {
            "notice": "'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens."
          },
          "deploy(address,uint48)": {
            "notice": "Deploy a new ERC20 bond token for an (underlying, expiry) pair and return its address"
          },
          "getBondToken(address,uint48)": {
            "notice": "Get the ERC20BondToken contract corresponding to an (underlying, expiry) pair, reverts if no token exists"
          },
          "getBondTokenForMarket(uint256)": {
            "notice": "Get the ERC20BondToken contract corresponding to a market"
          },
          "getFee(address)": {
            "notice": "Get current fee charged by the teller based on the combined protocol and referrer fee"
          },
          "protocolFee()": {
            "notice": "Fee paid to protocol in basis points (3 decimal places)."
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified market"
          },
          "redeem(address,uint256)": {
            "notice": "Redeem a fixed-expiry bond token for the underlying token (bond token must have matured)"
          },
          "referrerFees(address)": {
            "notice": "Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3)."
          },
          "rewards(address,address)": {
            "notice": "Fees earned by an address, by token"
          },
          "setCreateFeeDiscount(uint48)": {
            "notice": "Set the discount for creating bond tokens from the base protocol fee"
          },
          "setProtocolFee(uint48)": {
            "notice": "Set protocol feeMust be guardian"
          },
          "setReferrerFee(uint48)": {
            "notice": "Set your fee as a referrer to the protocolFee is set for sending address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "clones/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondFixedExpiryTeller.sol": "BondFixedExpiryTeller"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x8f569b077d99ec821c2750c52094b59b3505fb6ca3e6eac9009092bf86c5452d",
        "urls": [
          "bzz-raw://d0f3966d1f97959f6512ee5bc4b73487bf5ce593880e3c1dbf97ed50d49402a0",
          "dweb:/ipfs/QmSAtFtA28Mja6f6FfET26B38XEgrLgqRezNLo3AsXyjVB"
        ],
        "license": "BSD"
      },
      "lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol": {
        "keccak256": "0x0c6a218a9724ce6d754db22b162600adbdbac41bfe4dd4eecf6b6d77c74eefe7",
        "urls": [
          "bzz-raw://9b05614d01be2267ebb94ae587deb2588e903c101f9a2106230f551bf27faa98",
          "dweb:/ipfs/QmQbRMeckjgCiFp5UXCBwoYiE41o63Wv79s2qeGeCvGSYX"
        ],
        "license": "BSD"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a",
        "urls": [
          "bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a",
          "dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee",
        "urls": [
          "bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da",
          "dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/BondFixedExpiryTeller.sol": {
        "keccak256": "0xef4108d60ebc80df5190d401a20d906a259c17e78b935ace7864cc8082c4f680",
        "urls": [
          "bzz-raw://5e164bf6bcf368e947eed78562ecb7c26e4abcf00dd2141abeb6c0697b1261b8",
          "dweb:/ipfs/QmcuEDU3bc9iS2yrk2fNuS2nbimtVWrqdNyeN1jESJbBb9"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/ERC20BondToken.sol": {
        "keccak256": "0x14b11e975c3fb2f8aee2962e46aa1ab7c3ba145351f1c8f26e7f234fba9f4410",
        "urls": [
          "bzz-raw://b766eb91df473cd1be260b7ab4198eaef69e6f71f01572e113efb67043d11279",
          "dweb:/ipfs/QmSkaFo1ciHD7Dbdt5u8uinQdtmNg9GWCwFpcsuwb4R5HF"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/bases/BondBaseTeller.sol": {
        "keccak256": "0x39335b2245d6f1db888127cb326aa7b052c5009e0f4d6ec5e861e9297d7dae83",
        "urls": [
          "bzz-raw://af6d750745c512e8b6b212a822d3f52a25be44c3266b0f951c780319f3eac68a",
          "dweb:/ipfs/QmcyA7vvJvbKmchzo44FDPQk4udmmuWqYj7FKfsBsHr2md"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFixedExpiryTeller.sol": {
        "keccak256": "0x4530df5a76e94da12895a0d1912388700b17bee34c6c71c3762c5ae8dd5bbfe1",
        "urls": [
          "bzz-raw://c32dfd7b2803ec73451bba008ed427ce888215b0039e7a871247ed591d4ed373",
          "dweb:/ipfs/QmenLrALRdCMu8ttfyVwiSubM6vzCmAn1cL7vJgAcM76ag"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/lib/CloneERC20.sol": {
        "keccak256": "0x44cf60ce8aab43c31e8b6641c417e6a26c3242847c267435906ddb46b37b82c4",
        "urls": [
          "bzz-raw://f8867033f95983416889a931bfe0396c29be883d62a8330668fadeb06b937fdf",
          "dweb:/ipfs/QmUUKxS87nt3mxZuwCMZrMgLBco3ZRcz4p69hVPuZ7RJ3h"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20",
        "urls": [
          "bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb",
          "dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondFixedExpiryTeller.sol",
    "id": 34296,
    "exportedSymbols": {
      "Authority": [
        29632
      ],
      "BondBaseTeller": [
        42750
      ],
      "BondFixedExpiryTeller": [
        34295
      ],
      "ClonesWithImmutableArgs": [
        179
      ],
      "ERC20": [
        30350
      ],
      "ERC20BondToken": [
        35309
      ],
      "FullMath": [
        45487
      ],
      "IBondAggregator": [
        42920
      ],
      "IBondFixedExpiryTeller": [
        43613
      ],
      "TransferHelper": [
        45612
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:9457:34",
    "nodes": [
      {
        "id": 33720,
        "nodeType": "PragmaDirective",
        "src": "46:23:34",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33722,
        "nodeType": "ImportDirective",
        "src": "71:47:34",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 30351,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33721,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30350,
              "src": "79:5:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33724,
        "nodeType": "ImportDirective",
        "src": "119:75:34",
        "nodes": [],
        "absolutePath": "lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol",
        "file": "clones/ClonesWithImmutableArgs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 180,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33723,
              "name": "ClonesWithImmutableArgs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 179,
              "src": "127:23:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33728,
        "nodeType": "ImportDirective",
        "src": "196:86:34",
        "nodes": [],
        "absolutePath": "src/bases/BondBaseTeller.sol",
        "file": "./bases/BondBaseTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 42751,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33725,
              "name": "BondBaseTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42750,
              "src": "204:14:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33726,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42920,
              "src": "220:15:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33727,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29632,
              "src": "237:9:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33730,
        "nodeType": "ImportDirective",
        "src": "283:79:34",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondFixedExpiryTeller.sol",
        "file": "./interfaces/IBondFixedExpiryTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 43614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33729,
              "name": "IBondFixedExpiryTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43613,
              "src": "291:22:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33732,
        "nodeType": "ImportDirective",
        "src": "363:52:34",
        "nodes": [],
        "absolutePath": "src/ERC20BondToken.sol",
        "file": "./ERC20BondToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 35310,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33731,
              "name": "ERC20BondToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35309,
              "src": "371:14:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33734,
        "nodeType": "ImportDirective",
        "src": "417:56:34",
        "nodes": [],
        "absolutePath": "src/lib/TransferHelper.sol",
        "file": "./lib/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 45613,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33733,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45612,
              "src": "425:14:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33736,
        "nodeType": "ImportDirective",
        "src": "474:44:34",
        "nodes": [],
        "absolutePath": "src/lib/FullMath.sol",
        "file": "./lib/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34296,
        "sourceUnit": 45488,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33735,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45487,
              "src": "482:8:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34295,
        "nodeType": "ContractDefinition",
        "src": "1602:7900:34",
        "nodes": [
          {
            "id": 33745,
            "nodeType": "UsingForDirective",
            "src": "1681:31:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33742,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45612,
              "src": "1687:14:34"
            },
            "typeName": {
              "id": 33744,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33743,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30350,
                "src": "1706:5:34"
              },
              "referencedDeclaration": 30350,
              "src": "1706:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$30350",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 33748,
            "nodeType": "UsingForDirective",
            "src": "1717:27:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33746,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45487,
              "src": "1723:8:34"
            },
            "typeName": {
              "id": 33747,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1736:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 33751,
            "nodeType": "UsingForDirective",
            "src": "1749:42:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33749,
              "name": "ClonesWithImmutableArgs",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 179,
              "src": "1755:23:34"
            },
            "typeName": {
              "id": 33750,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1783:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 33761,
            "nodeType": "EventDefinition",
            "src": "1836:133:34",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4fd9a46575749d9ddf290fadaa5729fc640790e2b6360df8cc8af35e418dcec0",
            "name": "ERC20BondTokenCreated",
            "nameLocation": "1842:21:34",
            "parameters": {
              "id": 33760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33754,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bondToken",
                  "nameLocation": "1888:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33761,
                  "src": "1873:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  },
                  "typeName": {
                    "id": 33753,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33752,
                      "name": "ERC20BondToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35309,
                      "src": "1873:14:34"
                    },
                    "referencedDeclaration": 35309,
                    "src": "1873:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33757,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1921:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33761,
                  "src": "1907:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 33756,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33755,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "1907:5:34"
                    },
                    "referencedDeclaration": 30350,
                    "src": "1907:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33759,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1956:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33761,
                  "src": "1941:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 33758,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1863:105:34"
            }
          },
          {
            "id": 33770,
            "nodeType": "VariableDeclaration",
            "src": "2093:69:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 33762,
              "nodeType": "StructuredDocumentation",
              "src": "2023:65:34",
              "text": "@notice ERC20 bond tokens (unique to a underlying and expiry)"
            },
            "functionSelector": "709ea865",
            "mutability": "mutable",
            "name": "bondTokens",
            "nameLocation": "2152:10:34",
            "scope": 34295,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
              "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
            },
            "typeName": {
              "id": 33769,
              "keyType": {
                "id": 33764,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 33763,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30350,
                  "src": "2101:5:34"
                },
                "referencedDeclaration": 30350,
                "src": "2101:5:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$30350",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "2093:51:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
              },
              "valueType": {
                "id": 33768,
                "keyType": {
                  "id": 33765,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "2118:6:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "nodeType": "Mapping",
                "src": "2110:33:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                  "typeString": "mapping(uint48 => contract ERC20BondToken)"
                },
                "valueType": {
                  "id": 33767,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 33766,
                    "name": "ERC20BondToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 35309,
                    "src": "2128:14:34"
                  },
                  "referencedDeclaration": 35309,
                  "src": "2128:14:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 33774,
            "nodeType": "VariableDeclaration",
            "src": "2262:55:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 33771,
              "nodeType": "StructuredDocumentation",
              "src": "2169:88:34",
              "text": "@notice ERC20BondToken reference implementation (deployed on creation to clone from)"
            },
            "functionSelector": "6c436dd5",
            "mutability": "immutable",
            "name": "bondTokenImplementation",
            "nameLocation": "2294:23:34",
            "scope": 34295,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
              "typeString": "contract ERC20BondToken"
            },
            "typeName": {
              "id": 33773,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33772,
                "name": "ERC20BondToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35309,
                "src": "2262:14:34"
              },
              "referencedDeclaration": 35309,
              "src": "2262:14:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                "typeString": "contract ERC20BondToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33801,
            "nodeType": "FunctionDefinition",
            "src": "2368:264:34",
            "nodes": [],
            "body": {
              "id": 33800,
              "nodeType": "Block",
              "src": "2569:63:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33793,
                      "name": "bondTokenImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33774,
                      "src": "2579:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2605:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20BondToken_$35309_$",
                          "typeString": "function () returns (contract ERC20BondToken)"
                        },
                        "typeName": {
                          "id": 33795,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33794,
                            "name": "ERC20BondToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 35309,
                            "src": "2609:14:34"
                          },
                          "referencedDeclaration": 35309,
                          "src": "2609:14:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                            "typeString": "contract ERC20BondToken"
                          }
                        }
                      },
                      "id": 33797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2605:20:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "src": "2579:46:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "id": 33799,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:46:34"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33787,
                    "name": "protocol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33776,
                    "src": "2522:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 33788,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33779,
                    "src": "2533:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 33789,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33781,
                    "src": "2546:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 33790,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33784,
                    "src": "2557:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 33791,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33786,
                  "name": "BondBaseTeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42750,
                  "src": "2507:14:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "2507:61:34"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33776,
                  "mutability": "mutable",
                  "name": "protocol_",
                  "nameLocation": "2397:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33801,
                  "src": "2389:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33779,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "2432:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33801,
                  "src": "2416:27:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 33778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33777,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42920,
                      "src": "2416:15:34"
                    },
                    "referencedDeclaration": 42920,
                    "src": "2416:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33781,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "2461:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33801,
                  "src": "2453:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2453:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33784,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "2490:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33801,
                  "src": "2480:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$29632",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 33783,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33782,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29632,
                      "src": "2480:9:34"
                    },
                    "referencedDeclaration": 29632,
                    "src": "2480:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2379:127:34"
            },
            "returnParameters": {
              "id": 33792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2569:0:34"
            },
            "scope": 34295,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33849,
            "nodeType": "FunctionDefinition",
            "src": "3028:1202:34",
            "nodes": [],
            "body": {
              "id": 33848,
              "nodeType": "Block",
              "src": "3204:1026:34",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33817,
                      "name": "vesting_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33811,
                      "src": "3879:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 33820,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3897:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 33821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3897:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 33819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3890:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 33818,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "3890:6:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3890:23:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "3879:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33846,
                    "nodeType": "Block",
                    "src": "4087:137:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33842,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33804,
                              "src": "4193:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33843,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33806,
                              "src": "4205:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33839,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33809,
                              "src": "4168:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 33841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45611,
                            "src": "4168:24:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$30350_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$30350_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 33844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4168:45:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33845,
                        "nodeType": "ExpressionStatement",
                        "src": "4168:45:34"
                      }
                    ]
                  },
                  "id": 33847,
                  "nodeType": "IfStatement",
                  "src": "3875:349:34",
                  "trueBody": {
                    "id": 33838,
                    "nodeType": "Block",
                    "src": "3915:166:34",
                    "statements": [
                      {
                        "expression": {
                          "id": 33826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33824,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33815,
                            "src": "3929:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 33825,
                            "name": "vesting_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33811,
                            "src": "3938:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "3929:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 33827,
                        "nodeType": "ExpressionStatement",
                        "src": "3929:17:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33834,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33804,
                              "src": "4050:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33835,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33806,
                              "src": "4062:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 33828,
                                  "name": "bondTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33770,
                                  "src": "4013:10:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                                    "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                                  }
                                },
                                "id": 33831,
                                "indexExpression": {
                                  "id": 33829,
                                  "name": "underlying_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33809,
                                  "src": "4024:11:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$30350",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4013:23:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                                  "typeString": "mapping(uint48 => contract ERC20BondToken)"
                                }
                              },
                              "id": 33832,
                              "indexExpression": {
                                "id": 33830,
                                "name": "expiry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33815,
                                "src": "4037:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4013:31:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              }
                            },
                            "id": 33833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35286,
                            "src": "4013:36:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 33836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4013:57:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33837,
                        "nodeType": "ExpressionStatement",
                        "src": "4013:57:34"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              42414
            ],
            "documentation": {
              "id": 33802,
              "nodeType": "StructuredDocumentation",
              "src": "2680:343:34",
              "text": "@notice             Handle payout to recipient\n @param recipient_   Address to receive payout\n @param payout_      Amount of payoutToken to be paid\n @param underlying_   Token to be paid out\n @param vesting_     Timestamp when the payout will vest\n @return expiry      Timestamp when the payout will vest"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handlePayout",
            "nameLocation": "3037:13:34",
            "overrides": {
              "id": 33813,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3171:8:34"
            },
            "parameters": {
              "id": 33812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33804,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nameLocation": "3068:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33849,
                  "src": "3060:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3060:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33806,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "3096:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33849,
                  "src": "3088:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3088:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33809,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "3119:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33849,
                  "src": "3113:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 33808,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33807,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "3113:5:34"
                    },
                    "referencedDeclaration": 30350,
                    "src": "3113:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33811,
                  "mutability": "mutable",
                  "name": "vesting_",
                  "nameLocation": "3147:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33849,
                  "src": "3140:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 33810,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3050:111:34"
            },
            "returnParameters": {
              "id": 33816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33815,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "3196:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 33849,
                  "src": "3189:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 33814,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:15:34"
            },
            "scope": 34295,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34003,
            "nodeType": "FunctionDefinition",
            "src": "4325:1877:34",
            "nodes": [],
            "body": {
              "id": 34002,
              "nodeType": "Block",
              "src": "4488:1714:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33869,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "4659:6:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34002,
                      "src": "4652:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 33868,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "4652:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33878,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 33874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33872,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33855,
                            "src": "4675:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4685:6:34",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4675:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 33871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4668:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 33870,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "4668:6:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4668:24:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 33876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4695:6:34",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4668:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:49:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 33881,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33869,
                          "src": "4767:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 33880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4759:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 33879,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4759:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4759:15:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 33883,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4777:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 33884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4777:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4759:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33889,
                  "nodeType": "IfStatement",
                  "src": "4755:68:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33886,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "4801:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4801:22:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33888,
                    "nodeType": "RevertStatement",
                    "src": "4794:29:34"
                  }
                },
                {
                  "assignments": [
                    33892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33892,
                      "mutability": "mutable",
                      "name": "bondToken",
                      "nameLocation": "4849:9:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34002,
                      "src": "4834:24:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      },
                      "typeName": {
                        "id": 33891,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33890,
                          "name": "ERC20BondToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35309,
                          "src": "4834:14:34"
                        },
                        "referencedDeclaration": 35309,
                        "src": "4834:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                          "typeString": "contract ERC20BondToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33898,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 33893,
                        "name": "bondTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33770,
                        "src": "4861:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                          "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                        }
                      },
                      "id": 33895,
                      "indexExpression": {
                        "id": 33894,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33853,
                        "src": "4872:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4861:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                        "typeString": "mapping(uint48 => contract ERC20BondToken)"
                      }
                    },
                    "id": 33897,
                    "indexExpression": {
                      "id": 33896,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33869,
                      "src": "4885:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4861:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4834:58:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    },
                    "id": 33906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33899,
                      "name": "bondToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33892,
                      "src": "4968:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30783030",
                              "id": 33903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5004:4:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x00"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4996:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33901,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4996:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4996:13:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33900,
                        "name": "ERC20BondToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35309,
                        "src": "4981:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20BondToken_$35309_$",
                          "typeString": "type(contract ERC20BondToken)"
                        }
                      },
                      "id": 33905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4981:29:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "src": "4968:42:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33912,
                  "nodeType": "IfStatement",
                  "src": "4964:112:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 33908,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33853,
                          "src": "5056:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 33909,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33869,
                          "src": "5069:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 33907,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41863,
                        "src": "5031:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 33910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5031:45:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33911,
                    "nodeType": "RevertStatement",
                    "src": "5024:52:34"
                  }
                },
                {
                  "assignments": [
                    33914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33914,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "5284:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34002,
                      "src": "5276:18:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5276:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33922,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33919,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5327:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                              "typeString": "contract BondFixedExpiryTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                              "typeString": "contract BondFixedExpiryTeller"
                            }
                          ],
                          "id": 33918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5319:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33917,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5319:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5319:13:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33915,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33853,
                        "src": "5297:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 33916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29986,
                      "src": "5297:21:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 33921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5297:36:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5276:57:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33926,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5372:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5372:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33930,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5392:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                              "typeString": "contract BondFixedExpiryTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                              "typeString": "contract BondFixedExpiryTeller"
                            }
                          ],
                          "id": 33929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5384:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5384:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5384:13:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33932,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33857,
                        "src": "5399:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33923,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33853,
                        "src": "5343:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 33925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45553,
                      "src": "5343:28:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$30350_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$30350_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 33933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5343:64:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33934,
                  "nodeType": "ExpressionStatement",
                  "src": "5343:64:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33939,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5451:4:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                                "typeString": "contract BondFixedExpiryTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                                "typeString": "contract BondFixedExpiryTeller"
                              }
                            ],
                            "id": 33938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5443:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33937,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5443:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5443:13:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 33935,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33853,
                          "src": "5421:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 33936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29986,
                        "src": "5421:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 33941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5421:36:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33942,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33914,
                        "src": "5460:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 33943,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33857,
                        "src": "5473:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5460:20:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5421:59:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33949,
                  "nodeType": "IfStatement",
                  "src": "5417:109:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33946,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41865,
                        "src": "5501:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5501:25:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33948,
                    "nodeType": "RevertStatement",
                    "src": "5494:32:34"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 33952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33950,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41885,
                      "src": "5667:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 33951,
                      "name": "createFeeDiscount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41888,
                      "src": "5681:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "5667:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34000,
                    "nodeType": "Block",
                    "src": "6058:138:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 33991,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6123:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 33992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6123:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33993,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33857,
                              "src": "6135:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33988,
                              "name": "bondToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33892,
                              "src": "6108:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              }
                            },
                            "id": 33990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35286,
                            "src": "6108:14:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 33994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6108:35:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33995,
                        "nodeType": "ExpressionStatement",
                        "src": "6108:35:34"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 33996,
                              "name": "bondToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33892,
                              "src": "6166:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              }
                            },
                            {
                              "id": 33997,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33857,
                              "src": "6177:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 33998,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6165:20:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_ERC20BondToken_$35309_$_t_uint256_$",
                            "typeString": "tuple(contract ERC20BondToken,uint256)"
                          }
                        },
                        "functionReturnParameters": 33867,
                        "id": 33999,
                        "nodeType": "Return",
                        "src": "6158:27:34"
                      }
                    ]
                  },
                  "id": 34001,
                  "nodeType": "IfStatement",
                  "src": "5663:533:34",
                  "trueBody": {
                    "id": 33987,
                    "nodeType": "Block",
                    "src": "5700:352:34",
                    "statements": [
                      {
                        "assignments": [
                          33954
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33954,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "5758:9:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 33987,
                            "src": "5750:17:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33953,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5750:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33962,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 33959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33957,
                                "name": "protocolFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41885,
                                "src": "5785:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 33958,
                                "name": "createFeeDiscount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41888,
                                "src": "5799:17:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "src": "5785:31:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "id": 33960,
                              "name": "FEE_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41891,
                              "src": "5818:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "id": 33955,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33857,
                              "src": "5770:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45442,
                            "src": "5770:14:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5770:61:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5750:81:34"
                      },
                      {
                        "expression": {
                          "id": 33969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 33963,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41899,
                                "src": "5845:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_ERC20_$30350_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract ERC20 => uint256))"
                                }
                              },
                              "id": 33966,
                              "indexExpression": {
                                "id": 33964,
                                "name": "_protocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41901,
                                "src": "5853:9:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5845:18:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_uint256_$",
                                "typeString": "mapping(contract ERC20 => uint256)"
                              }
                            },
                            "id": 33967,
                            "indexExpression": {
                              "id": 33965,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33853,
                              "src": "5864:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5845:31:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 33968,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33954,
                            "src": "5880:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5845:44:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33970,
                        "nodeType": "ExpressionStatement",
                        "src": "5845:44:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 33974,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5955:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 33975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5955:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33976,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33857,
                                "src": "5967:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 33977,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33954,
                                "src": "5977:9:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5967:19:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33971,
                              "name": "bondToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33892,
                              "src": "5940:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              }
                            },
                            "id": 33973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35286,
                            "src": "5940:14:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 33979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5940:47:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33980,
                        "nodeType": "ExpressionStatement",
                        "src": "5940:47:34"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 33981,
                              "name": "bondToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33892,
                              "src": "6010:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33982,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33857,
                                "src": "6021:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 33983,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33954,
                                "src": "6031:9:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6021:19:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 33985,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6009:32:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_ERC20BondToken_$35309_$_t_uint256_$",
                            "typeString": "tuple(contract ERC20BondToken,uint256)"
                          }
                        },
                        "functionReturnParameters": 33867,
                        "id": 33986,
                        "nodeType": "Return",
                        "src": "6002:39:34"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              43579
            ],
            "documentation": {
              "id": 33850,
              "nodeType": "StructuredDocumentation",
              "src": "4282:38:34",
              "text": "@inheritdoc IBondFixedExpiryTeller"
            },
            "functionSelector": "b7314ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33861,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33860,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "4441:12:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "4441:12:34"
              }
            ],
            "name": "create",
            "nameLocation": "4334:6:34",
            "overrides": {
              "id": 33859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4432:8:34"
            },
            "parameters": {
              "id": 33858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33853,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "4356:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34003,
                  "src": "4350:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 33852,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33851,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "4350:5:34"
                    },
                    "referencedDeclaration": 30350,
                    "src": "4350:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33855,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "4384:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34003,
                  "src": "4377:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 33854,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33857,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4409:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34003,
                  "src": "4401:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4401:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4340:82:34"
            },
            "returnParameters": {
              "id": 33867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34003,
                  "src": "4463:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  },
                  "typeName": {
                    "id": 33863,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33862,
                      "name": "ERC20BondToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35309,
                      "src": "4463:14:34"
                    },
                    "referencedDeclaration": 35309,
                    "src": "4463:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34003,
                  "src": "4479:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4462:25:34"
            },
            "scope": 34295,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34068,
            "nodeType": "FunctionDefinition",
            "src": "6291:601:34",
            "nodes": [],
            "body": {
              "id": 34067,
              "nodeType": "Block",
              "src": "6378:514:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34017,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "6445:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34067,
                      "src": "6439:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$30350",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 34016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34015,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30350,
                          "src": "6439:5:34"
                        },
                        "referencedDeclaration": 30350,
                        "src": "6439:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34021,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34018,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34007,
                        "src": "6458:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                          "typeString": "contract ERC20BondToken"
                        }
                      },
                      "id": 34019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "underlying",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35239,
                      "src": "6458:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_contract$_ERC20_$30350_$",
                        "typeString": "function () pure external returns (contract ERC20)"
                      }
                    },
                    "id": 34020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6458:19:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6439:38:34"
                },
                {
                  "assignments": [
                    34023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34023,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "6494:6:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34067,
                      "src": "6487:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 34022,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "6487:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34027,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34024,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34007,
                        "src": "6503:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                          "typeString": "contract ERC20BondToken"
                        }
                      },
                      "id": 34025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35253,
                      "src": "6503:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_uint48_$",
                        "typeString": "function () pure external returns (uint48)"
                      }
                    },
                    "id": 34026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:15:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6487:31:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    },
                    "id": 34034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34028,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34007,
                      "src": "6533:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 34029,
                          "name": "bondTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33770,
                          "src": "6543:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                            "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                          }
                        },
                        "id": 34031,
                        "indexExpression": {
                          "id": 34030,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34017,
                          "src": "6554:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6543:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                          "typeString": "mapping(uint48 => contract ERC20BondToken)"
                        }
                      },
                      "id": 34033,
                      "indexExpression": {
                        "id": 34032,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34023,
                        "src": "6566:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6543:30:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "src": "6533:40:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34038,
                  "nodeType": "IfStatement",
                  "src": "6529:78:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34035,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41865,
                        "src": "6582:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6582:25:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34037,
                    "nodeType": "RevertStatement",
                    "src": "6575:32:34"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 34045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 34041,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6673:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 34042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6673:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 34040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6666:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 34039,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "6666:6:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6666:23:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 34044,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34023,
                      "src": "6692:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "6666:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34050,
                  "nodeType": "IfStatement",
                  "src": "6662:75:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 34047,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34023,
                          "src": "6730:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34046,
                        "name": "Teller_TokenNotMatured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41854,
                        "src": "6707:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
                          "typeString": "function (uint48) pure"
                        }
                      },
                      "id": 34048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6707:30:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34049,
                    "nodeType": "RevertStatement",
                    "src": "6700:37:34"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34054,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6811:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6811:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34056,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34009,
                        "src": "6823:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34051,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34007,
                        "src": "6799:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                          "typeString": "contract ERC20BondToken"
                        }
                      },
                      "id": 34053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35308,
                      "src": "6799:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6799:32:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34058,
                  "nodeType": "ExpressionStatement",
                  "src": "6799:32:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34062,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6865:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6865:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34064,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34009,
                        "src": "6877:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34059,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34017,
                        "src": "6841:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 34061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45611,
                      "src": "6841:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$30350_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$30350_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 34065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6841:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34066,
                  "nodeType": "ExpressionStatement",
                  "src": "6841:44:34"
                }
              ]
            },
            "baseFunctions": [
              43563
            ],
            "documentation": {
              "id": 34004,
              "nodeType": "StructuredDocumentation",
              "src": "6248:38:34",
              "text": "@inheritdoc IBondFixedExpiryTeller"
            },
            "functionSelector": "1e9a6950",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34012,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "6365:12:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "6365:12:34"
              }
            ],
            "name": "redeem",
            "nameLocation": "6300:6:34",
            "overrides": {
              "id": 34011,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6356:8:34"
            },
            "parameters": {
              "id": 34010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34007,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "6322:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34068,
                  "src": "6307:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  },
                  "typeName": {
                    "id": 34006,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34005,
                      "name": "ERC20BondToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35309,
                      "src": "6307:14:34"
                    },
                    "referencedDeclaration": 35309,
                    "src": "6307:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34009,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6338:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34068,
                  "src": "6330:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6330:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6306:40:34"
            },
            "returnParameters": {
              "id": 34014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6378:0:34"
            },
            "scope": 34295,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34197,
            "nodeType": "FunctionDefinition",
            "src": "6987:1307:34",
            "nodes": [],
            "body": {
              "id": 34196,
              "nodeType": "Block",
              "src": "7130:1164:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34084,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "7301:6:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34196,
                      "src": "7294:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 34083,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "7294:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34093,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 34092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 34089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34087,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34074,
                            "src": "7317:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 34088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7327:6:34",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "7317:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7310:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 34085,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "7310:6:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7310:24:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 34091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7337:6:34",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "7310:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7294:49:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34096,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34084,
                          "src": "7409:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7401:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 34094,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7401:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7401:15:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 34098,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7419:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 34099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7419:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7401:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34104,
                  "nodeType": "IfStatement",
                  "src": "7397:68:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34101,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "7443:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7443:22:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34103,
                    "nodeType": "RevertStatement",
                    "src": "7436:29:34"
                  }
                },
                {
                  "assignments": [
                    34107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34107,
                      "mutability": "mutable",
                      "name": "bondToken",
                      "nameLocation": "7549:9:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34196,
                      "src": "7534:24:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      },
                      "typeName": {
                        "id": 34106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34105,
                          "name": "ERC20BondToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35309,
                          "src": "7534:14:34"
                        },
                        "referencedDeclaration": 35309,
                        "src": "7534:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                          "typeString": "contract ERC20BondToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34113,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 34108,
                        "name": "bondTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33770,
                        "src": "7561:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                          "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                        }
                      },
                      "id": 34110,
                      "indexExpression": {
                        "id": 34109,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34072,
                        "src": "7572:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7561:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                        "typeString": "mapping(uint48 => contract ERC20BondToken)"
                      }
                    },
                    "id": 34112,
                    "indexExpression": {
                      "id": 34111,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34084,
                      "src": "7585:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7561:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7534:58:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    },
                    "id": 34121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34114,
                      "name": "bondToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34107,
                      "src": "7606:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7642:1:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7634:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34116,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7634:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7634:10:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34115,
                        "name": "ERC20BondToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35309,
                        "src": "7619:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20BondToken_$35309_$",
                          "typeString": "type(contract ERC20BondToken)"
                        }
                      },
                      "id": 34120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7619:26:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      }
                    },
                    "src": "7606:39:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34193,
                  "nodeType": "IfStatement",
                  "src": "7602:660:34",
                  "trueBody": {
                    "id": 34192,
                    "nodeType": "Block",
                    "src": "7647:615:34",
                    "statements": [
                      {
                        "assignments": [
                          34123,
                          34125
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34123,
                            "mutability": "mutable",
                            "name": "name",
                            "nameLocation": "7676:4:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 34192,
                            "src": "7662:18:34",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 34122,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "7662:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 34125,
                            "mutability": "mutable",
                            "name": "symbol",
                            "nameLocation": "7696:6:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 34192,
                            "src": "7682:20:34",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 34124,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "7682:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34130,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 34127,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34072,
                              "src": "7724:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 34128,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34084,
                              "src": "7737:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 34126,
                            "name": "_getNameAndSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42654,
                            "src": "7706:17:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$30350_$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                              "typeString": "function (contract ERC20,uint256) view returns (string memory,string memory)"
                            }
                          },
                          "id": 34129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7706:38:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                            "typeString": "tuple(string memory,string memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7661:83:34"
                      },
                      {
                        "assignments": [
                          34132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34132,
                            "mutability": "mutable",
                            "name": "tokenData",
                            "nameLocation": "7771:9:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 34192,
                            "src": "7758:22:34",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 34131,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7758:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34165,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 34139,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34123,
                                      "src": "7831:4:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 34138,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7825:5:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 34137,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7825:5:34",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 34140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7825:11:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 34136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7817:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 34135,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7817:7:34",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7817:20:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 34146,
                                      "name": "symbol",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34125,
                                      "src": "7869:6:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 34145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7863:5:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 34144,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7863:5:34",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 34147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7863:13:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 34143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7855:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 34142,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7855:7:34",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7855:22:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 34151,
                                      "name": "underlying_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34072,
                                      "src": "7901:11:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$30350",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 34152,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29980,
                                    "src": "7901:20:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 34153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7901:22:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 34150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7895:5:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 34149,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7895:5:34",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7895:29:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 34155,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34072,
                              "src": "7942:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 34158,
                                  "name": "expiry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34084,
                                  "src": "7979:6:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                ],
                                "id": 34157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7971:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 34156,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7971:7:34",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7971:15:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 34162,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8012:4:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                                    "typeString": "contract BondFixedExpiryTeller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                                    "typeString": "contract BondFixedExpiryTeller"
                                  }
                                ],
                                "id": 34161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8004:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34160,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8004:7:34",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8004:13:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 34133,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7783:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 34134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "7783:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 34164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7783:248:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7758:273:34"
                      },
                      {
                        "expression": {
                          "id": 34176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 34166,
                            "name": "bondToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34107,
                            "src": "8045:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                              "typeString": "contract ERC20BondToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 34173,
                                    "name": "tokenData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34132,
                                    "src": "8111:9:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 34170,
                                        "name": "bondTokenImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33774,
                                        "src": "8080:23:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                          "typeString": "contract ERC20BondToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                          "typeString": "contract ERC20BondToken"
                                        }
                                      ],
                                      "id": 34169,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8072:7:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 34168,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8072:7:34",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 34171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8072:32:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 34172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "clone",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 178,
                                  "src": "8072:38:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_address_$",
                                    "typeString": "function (address,bytes memory) returns (address)"
                                  }
                                },
                                "id": 34174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8072:49:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34167,
                              "name": "ERC20BondToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35309,
                              "src": "8057:14:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20BondToken_$35309_$",
                                "typeString": "type(contract ERC20BondToken)"
                              }
                            },
                            "id": 34175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8057:65:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                              "typeString": "contract ERC20BondToken"
                            }
                          },
                          "src": "8045:77:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                            "typeString": "contract ERC20BondToken"
                          }
                        },
                        "id": 34177,
                        "nodeType": "ExpressionStatement",
                        "src": "8045:77:34"
                      },
                      {
                        "expression": {
                          "id": 34184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 34178,
                                "name": "bondTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33770,
                                "src": "8136:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                                  "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                                }
                              },
                              "id": 34181,
                              "indexExpression": {
                                "id": 34179,
                                "name": "underlying_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34072,
                                "src": "8147:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$30350",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8136:23:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                                "typeString": "mapping(uint48 => contract ERC20BondToken)"
                              }
                            },
                            "id": 34182,
                            "indexExpression": {
                              "id": 34180,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34084,
                              "src": "8160:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8136:31:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                              "typeString": "contract ERC20BondToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 34183,
                            "name": "bondToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34107,
                            "src": "8170:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                              "typeString": "contract ERC20BondToken"
                            }
                          },
                          "src": "8136:43:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                            "typeString": "contract ERC20BondToken"
                          }
                        },
                        "id": 34185,
                        "nodeType": "ExpressionStatement",
                        "src": "8136:43:34"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 34187,
                              "name": "bondToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34107,
                              "src": "8220:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              }
                            },
                            {
                              "id": 34188,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34072,
                              "src": "8231:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 34189,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34084,
                              "src": "8244:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                                "typeString": "contract ERC20BondToken"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 34186,
                            "name": "ERC20BondTokenCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33761,
                            "src": "8198:21:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20BondToken_$35309_$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                              "typeString": "function (contract ERC20BondToken,contract ERC20,uint48)"
                            }
                          },
                          "id": 34190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8198:53:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34191,
                        "nodeType": "EmitStatement",
                        "src": "8193:58:34"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 34194,
                    "name": "bondToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34107,
                    "src": "8278:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "functionReturnParameters": 34082,
                  "id": 34195,
                  "nodeType": "Return",
                  "src": "8271:16:34"
                }
              ]
            },
            "baseFunctions": [
              43591
            ],
            "documentation": {
              "id": 34069,
              "nodeType": "StructuredDocumentation",
              "src": "6944:38:34",
              "text": "@inheritdoc IBondFixedExpiryTeller"
            },
            "functionSelector": "c6e38a4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34077,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "7080:12:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "7080:12:34"
              }
            ],
            "name": "deploy",
            "nameLocation": "6996:6:34",
            "overrides": {
              "id": 34076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7063:8:34"
            },
            "parameters": {
              "id": 34075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34072,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "7009:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34197,
                  "src": "7003:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 34071,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34070,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "7003:5:34"
                    },
                    "referencedDeclaration": 30350,
                    "src": "7003:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34074,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "7029:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34197,
                  "src": "7022:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 34073,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7022:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7002:35:34"
            },
            "returnParameters": {
              "id": 34082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34081,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34197,
                  "src": "7110:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  },
                  "typeName": {
                    "id": 34080,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34079,
                      "name": "ERC20BondToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35309,
                      "src": "7110:14:34"
                    },
                    "referencedDeclaration": 35309,
                    "src": "7110:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7109:16:34"
            },
            "scope": 34295,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34243,
            "nodeType": "FunctionDefinition",
            "src": "8343:508:34",
            "nodes": [],
            "body": {
              "id": 34242,
              "nodeType": "Block",
              "src": "8435:416:34",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 34211,
                              "name": "id_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34200,
                              "src": "8546:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 34209,
                              "name": "_aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41904,
                              "src": "8524:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                                "typeString": "contract IBondAggregator"
                              }
                            },
                            "id": 34210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTeller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42911,
                            "src": "8524:21:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IBondTeller_$44166_$",
                              "typeString": "function (uint256) view external returns (contract IBondTeller)"
                            }
                          },
                          "id": 34212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8524:26:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBondTeller_$44166",
                            "typeString": "contract IBondTeller"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IBondTeller_$44166",
                            "typeString": "contract IBondTeller"
                          }
                        ],
                        "id": 34208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8516:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8516:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8516:35:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 34216,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "8563:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                            "typeString": "contract BondFixedExpiryTeller"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BondFixedExpiryTeller_$34295",
                            "typeString": "contract BondFixedExpiryTeller"
                          }
                        ],
                        "id": 34215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8555:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8555:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8555:13:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8516:52:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34222,
                  "nodeType": "IfStatement",
                  "src": "8512:87:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34219,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "8577:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8577:22:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34221,
                    "nodeType": "RevertStatement",
                    "src": "8570:29:34"
                  }
                },
                {
                  "assignments": [
                    null,
                    null,
                    34225,
                    null,
                    34227,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 34225,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "8677:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34242,
                      "src": "8671:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$30350",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 34224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34223,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30350,
                          "src": "8671:5:34"
                        },
                        "referencedDeclaration": 30350,
                        "src": "8671:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 34227,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "8698:6:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34242,
                      "src": "8691:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 34226,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8691:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 34235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34233,
                        "name": "id_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34200,
                        "src": "8792:3:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34230,
                            "name": "id_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34200,
                            "src": "8749:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34228,
                            "name": "_aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41904,
                            "src": "8710:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                              "typeString": "contract IBondAggregator"
                            }
                          },
                          "id": 34229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAuctioneer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42786,
                          "src": "8710:38:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IBondAuctioneer_$43105_$",
                            "typeString": "function (uint256) view external returns (contract IBondAuctioneer)"
                          }
                        },
                        "id": 34231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8710:43:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBondAuctioneer_$43105",
                          "typeString": "contract IBondAuctioneer"
                        }
                      },
                      "id": 34232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMarketInfoForPurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43020,
                      "src": "8710:81:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_contract$_ERC20_$30350_$_t_contract$_ERC20_$30350_$_t_uint48_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (address,address,contract ERC20,contract ERC20,uint48,uint256)"
                      }
                    },
                    "id": 34234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8710:86:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_contract$_ERC20_$30350_$_t_contract$_ERC20_$30350_$_t_uint48_$_t_uint256_$",
                      "typeString": "tuple(address,address,contract ERC20,contract ERC20,uint48,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8666:130:34"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 34236,
                        "name": "bondTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33770,
                        "src": "8814:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                          "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                        }
                      },
                      "id": 34238,
                      "indexExpression": {
                        "id": 34237,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34225,
                        "src": "8825:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8814:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                        "typeString": "mapping(uint48 => contract ERC20BondToken)"
                      }
                    },
                    "id": 34240,
                    "indexExpression": {
                      "id": 34239,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34227,
                      "src": "8837:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8814:30:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "functionReturnParameters": 34206,
                  "id": 34241,
                  "nodeType": "Return",
                  "src": "8807:37:34"
                }
              ]
            },
            "baseFunctions": [
              43600
            ],
            "documentation": {
              "id": 34198,
              "nodeType": "StructuredDocumentation",
              "src": "8300:38:34",
              "text": "@inheritdoc IBondFixedExpiryTeller"
            },
            "functionSelector": "fcdc3126",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBondTokenForMarket",
            "nameLocation": "8352:21:34",
            "overrides": {
              "id": 34202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8401:8:34"
            },
            "parameters": {
              "id": 34201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34200,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "8382:3:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34243,
                  "src": "8374:11:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8374:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8373:13:34"
            },
            "returnParameters": {
              "id": 34206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34243,
                  "src": "8419:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  },
                  "typeName": {
                    "id": 34204,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34203,
                      "name": "ERC20BondToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35309,
                      "src": "8419:14:34"
                    },
                    "referencedDeclaration": 35309,
                    "src": "8419:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8418:16:34"
            },
            "scope": 34295,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34294,
            "nodeType": "FunctionDefinition",
            "src": "8900:600:34",
            "nodes": [],
            "body": {
              "id": 34293,
              "nodeType": "Block",
              "src": "9041:459:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34257,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "9212:6:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34293,
                      "src": "9205:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 34256,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "9205:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34266,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 34265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 34262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34260,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34249,
                            "src": "9228:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 34261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9238:6:34",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "9228:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9221:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 34258,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "9221:6:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9221:24:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 34264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9248:6:34",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "9221:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9205:49:34"
                },
                {
                  "assignments": [
                    34269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34269,
                      "mutability": "mutable",
                      "name": "bondToken",
                      "nameLocation": "9280:9:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 34293,
                      "src": "9265:24:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                        "typeString": "contract ERC20BondToken"
                      },
                      "typeName": {
                        "id": 34268,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34267,
                          "name": "ERC20BondToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35309,
                          "src": "9265:14:34"
                        },
                        "referencedDeclaration": 35309,
                        "src": "9265:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                          "typeString": "contract ERC20BondToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34275,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 34270,
                        "name": "bondTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33770,
                        "src": "9292:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$_$",
                          "typeString": "mapping(contract ERC20 => mapping(uint48 => contract ERC20BondToken))"
                        }
                      },
                      "id": 34272,
                      "indexExpression": {
                        "id": 34271,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34247,
                        "src": "9303:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9292:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint48_$_t_contract$_ERC20BondToken_$35309_$",
                        "typeString": "mapping(uint48 => contract ERC20BondToken)"
                      }
                    },
                    "id": 34274,
                    "indexExpression": {
                      "id": 34273,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34257,
                      "src": "9316:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9292:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9265:58:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34278,
                          "name": "bondToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34269,
                          "src": "9388:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                            "typeString": "contract ERC20BondToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                            "typeString": "contract ERC20BondToken"
                          }
                        ],
                        "id": 34277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9380:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9380:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9380:18:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9410:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9402:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9402:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9402:10:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9380:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34290,
                  "nodeType": "IfStatement",
                  "src": "9376:90:34",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 34286,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34247,
                          "src": "9446:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 34287,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34257,
                          "src": "9459:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34285,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41863,
                        "src": "9421:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 34288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9421:45:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34289,
                    "nodeType": "RevertStatement",
                    "src": "9414:52:34"
                  }
                },
                {
                  "expression": {
                    "id": 34291,
                    "name": "bondToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34269,
                    "src": "9484:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "functionReturnParameters": 34255,
                  "id": 34292,
                  "nodeType": "Return",
                  "src": "9477:16:34"
                }
              ]
            },
            "baseFunctions": [
              43612
            ],
            "documentation": {
              "id": 34244,
              "nodeType": "StructuredDocumentation",
              "src": "8857:38:34",
              "text": "@inheritdoc IBondFixedExpiryTeller"
            },
            "functionSelector": "fa922c26",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBondToken",
            "nameLocation": "8909:12:34",
            "overrides": {
              "id": 34251,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8995:8:34"
            },
            "parameters": {
              "id": 34250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34247,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "8928:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34294,
                  "src": "8922:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 34246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34245,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "8922:5:34"
                    },
                    "referencedDeclaration": 30350,
                    "src": "8922:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34249,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "8948:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 34294,
                  "src": "8941:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 34248,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8921:35:34"
            },
            "returnParameters": {
              "id": 34255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34294,
                  "src": "9021:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                    "typeString": "contract ERC20BondToken"
                  },
                  "typeName": {
                    "id": 34253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34252,
                      "name": "ERC20BondToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35309,
                      "src": "9021:14:34"
                    },
                    "referencedDeclaration": 35309,
                    "src": "9021:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20BondToken_$35309",
                      "typeString": "contract ERC20BondToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9020:16:34"
            },
            "scope": 34295,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33738,
              "name": "BondBaseTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42750,
              "src": "1636:14:34"
            },
            "id": 33739,
            "nodeType": "InheritanceSpecifier",
            "src": "1636:14:34"
          },
          {
            "baseName": {
              "id": 33740,
              "name": "IBondFixedExpiryTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43613,
              "src": "1652:22:34"
            },
            "id": 33741,
            "nodeType": "InheritanceSpecifier",
            "src": "1652:22:34"
          }
        ],
        "canonicalName": "BondFixedExpiryTeller",
        "contractDependencies": [
          35309
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 33737,
          "nodeType": "StructuredDocumentation",
          "src": "520:1082:34",
          "text": "@title Bond Fixed Expiry Teller\n @notice Bond Fixed Expiry Teller Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Bond Fixed Expiry Teller is an implementation of the\n      Bond Base Teller contract specific to handling user bond transactions\n      and tokenizing bond markets where all purchases vest at the same timestamp\n      as ERC20 tokens. Vesting timestamps are rounded to the nearest day to avoid\n      duplicate tokens with the same name/symbol.\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34295,
          43613,
          42750,
          30376,
          29619,
          44166
        ],
        "name": "BondFixedExpiryTeller",
        "nameLocation": "1611:21:34",
        "scope": 34296,
        "usedErrors": [
          76,
          41850,
          41854,
          41856,
          41863,
          41865,
          41867
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 34
}