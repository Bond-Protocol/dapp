{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocol_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "maturesOn",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Bonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "ERC1155BondTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts_",
          "type": "uint256[]"
        }
      ],
      "name": "batchRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        }
      ],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFeeDiscount",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        }
      ],
      "name": "getTokenNameAndSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "discount_",
          "type": "uint48"
        }
      ],
      "name": "setCreateFeeDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405260016002553480156200001657600080fd5b5060405162004ddb38038062004ddb83398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a051614c21620001ba600039600081816111a20152612a540152600081816114060152611d920152614c216000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613bbb565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613c15565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613c46565b6106ca565b005b61027a61028a366004613c63565b6107ce565b61027a61029d366004613e24565b6108d2565b61027a6102b0366004613ed2565b610cdd565b6102c86102c3366004613f7e565b610e10565b60405161020892919061400d565b6102e96102e436600461403b565b610eca565b6040516102089190614138565b610380610304366004613f7e565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc36600461414b565b61103a565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c63565b6114f1565b61027a61041e36600461419c565b61164e565b61027a610431366004613c46565b6116d1565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe6104893660046141be565b6117f0565b61027a61049c366004614205565b6118a5565b6004546102509065ffffffffffff1681565b61027a6104c1366004613c46565b61193c565b6104d96104d4366004614233565b611a4d565b60408051928352602083019190915201610208565b6102506104fc366004613c63565b611e3d565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c63565b60036020526000908152604090205465ffffffffffff1681565b6101fe6105573660046141be565b611e7b565b610250620186a081565b6101fe610574366004614274565b600560209081526000928352604080842090915290825290205481565b61022461059f366004614274565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd3660046142ee565b611f29565b61027a6105e036600461435a565b612035565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b82518251811461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff87161480610992575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b83811015610af057868181518110610a1857610a186143c3565b60200260200101519250858181518110610a3457610a346143c3565b6020026020010151915081600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610a9e9190614421565b909155505073ffffffffffffffffffffffffffffffffffffffff8816600090815260066020908152604080832086845290915281208054849290610ae3908490614438565b90915550506001016109fe565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989604051610b67929190614450565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff87163b15610c53576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff89169063bc197c8190610be89033908d908c908c908c90600401614475565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906144e0565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c6d565b73ffffffffffffffffffffffffffffffffffffffff871615155b610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050505050565b600254600114610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610e05576000848281518110610d6e57610d6e6143c3565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610df25733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610df290868361244d565b505080610dfe906144fd565b9050610d52565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ebd916125d9565b9097909650945050505050565b81518151606091908114610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8067ffffffffffffffff811115610f5357610f53613c80565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b50915060005b818110156110325760066000868381518110610fa057610fa06143c3565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858381518110610ff657610ff66143c3565b602002602001015181526020019081526020016000205483828151811061101f5761101f6143c3565b6020908102919091010152600101610f82565b505092915050565b6000806002546001146110a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110f2908a9065ffffffffffff16620186a061297a565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600360205260408120546004549293509091839161114e9161113b9165ffffffffffff9081169116614535565b8c9065ffffffffffff16620186a061297a565b6111589190614421565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d919061455f565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a2919061457c565b50919b509950975090915060009050836112bc868f614421565b6112c69190614421565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611316939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135991906145f9565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ea9190614438565b909155505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290611453908490614438565b9091555061146e90508b8b856114698587614438565b612a4c565b600061147c8e8589886130f4565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114d0929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115d457506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d49190614612565b6115dd57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116c8828261318b565b50506001600255565b6116ff336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff90811690821611156117ad576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b60008083611801620151808561465e565b60405160200161186792919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61196a336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b6119d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a14576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611acf620151808661465e565b611adc9062015180614683565b9050428165ffffffffffff161015611b20576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2c87836117f0565b60008181526008602052604090205490915060ff16611b9d576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906145f9565b9050611c5273ffffffffffffffffffffffffffffffffffffffff89163330896132f1565b611c5c8682614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea91906145f9565b1015611d22576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e1657600454600090611d7b90611d689065ffffffffffff66010000000000008204811691166146b1565b889065ffffffffffff16620186a061297a565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611de4908490614438565b90915550611dfe90503384611df9848b614421565b61348d565b82611e098289614421565b9550955050505050611e2e565b611e2133838861348d565b509250839150611e2e9050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff9081169116614535565b6000600254600114611ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ef984846117f0565b60008181526008602052604090205490915060ff16611f1d57611f1d8185856134d0565b60016002559392505050565b600254600114611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fd3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561202857612018868683818110611ff357611ff36143c3565b9050602002013585858481811061200c5761200c6143c3565b9050602002013561318b565b612021816144fd565b9050611fd6565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff86161480612089575073ffffffffffffffffffffffffffffffffffffffff8516600090815260076020908152604080832033845290915290205460ff165b6120ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff851660009081526006602090815260408083208684529091528120805484929061212f908490614421565b909155505073ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604080832086845290915281208054849290612174908490614438565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff808716929088169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b156122b5576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e619061224a9033908a908990899089906004016146d8565b6020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d91906144e0565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122cf565b73ffffffffffffffffffffffffffffffffffffffff841615155b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061242057506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124209190614612565b80612445575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124e49190614728565b6000604051808303816000865af19150503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b50915091508180156125505750805115806125505750808060200190518101906125509190614612565b8015612573575060008573ffffffffffffffffffffffffffffffffffffffff163b115b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b60608060008080806125ee6201518088614744565b905060006125ff8262010bd9614758565b61260c9062253d8c614758565b9050600062023ab161261f8360046147cc565b6126299190614888565b9050600461263a8262023ab16147cc565b612645906003614758565b61264f9190614888565b61265990836148f0565b9150600062164b0961266c846001614758565b61267890610fa06147cc565b6126829190614888565b90506004612692826105b56147cc565b61269c9190614888565b6126a690846148f0565b6126b190601f614758565b9250600061098f6126c38560506147cc565b6126cd9190614888565b9050600060506126df8361098f6147cc565b6126e99190614888565b6126f390866148f0565b9050612700600b83614888565b945061270d85600c6147cc565b612718836002614758565b61272291906148f0565b915084836127316031876148f0565b61273c9060646147cc565b6127469190614758565b6127509190614758565b985090965094506000935061277592506127709150612710905086614964565b61374e565b90506000600a841061278f5761278a8461374e565b6127b8565b6127988461374e565b6040516020016127a89190614978565b6040516020818303038152906040525b90506000600a84106127d2576127cd8461374e565b6127fb565b6127db8461374e565b6040516020016127eb9190614978565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612848573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261288e91908101906149bd565b8383836040516020016128a49493929190614a2b565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015612900573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261294691908101906149bd565b83838360405160200161295c9493929190614ae0565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129d157600084116129c657600080fd5b508290049050612a45565b8084116129dd57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612aad91815260200190565b602060405180830381865afa158015612aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aee919061455f565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b2891815260200190565b60c060405180830381865afa158015612b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b69919061457c565b5050935093509350935060008588612b819190614421565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1591906145f9565b9050612c3973ffffffffffffffffffffffffffffffffffffffff841633308c6132f1565b612c438982614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd191906145f9565b1015612d09576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f4057612d4673ffffffffffffffffffffffffffffffffffffffff8416868461244d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd791906145f9565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e5057600080fd5b505af1158015612e64573d6000803e3d6000fd5b505050508881612e749190614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f0291906145f9565b1015612f3a576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506130e8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd191906145f9565b9050612ff573ffffffffffffffffffffffffffffffffffffffff861688308c6132f1565b612fff8982614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308d91906145f9565b10156130c5576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130e673ffffffffffffffffffffffffffffffffffffffff8516888561244d565b505b50505050505050505050565b600065ffffffffffff82161561316a5762015180806131134285614535565b61311d919061465e565b6131279190614683565b9050600061313584836117f0565b60008181526008602052604090205490915060ff16613159576131598185846134d0565b61316486828761348d565b50612445565b61244573ffffffffffffffffffffffffffffffffffffffff8416868661244d565b60008281526008602052604090205460ff166131d3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132bb5760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b6132c63384846138ae565b60208101516132ec9073ffffffffffffffffffffffffffffffffffffffff16338461244d565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916133909190614728565b6000604051808303816000865af19150503d80600081146133cd576040519150601f19603f3d011682016040523d82523d6000602084013e6133d2565b606091505b50915091508180156133fc5750805115806133fc5750808060200190518101906133fc9190614612565b801561341f575060008673ffffffffffffffffffffffffffffffffffffffff163b115b613485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b505050505050565b600082815260086020526040812060010180548392906134ae908490614438565b925050819055506132ec838383604051806020016040528060008152506138e0565b60006134df620151808361465e565b6134ec9062015180614683565b9050428165ffffffffffff161015613530576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135cf9190614b66565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361379157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156137bb57806137a5816144fd565b91506137b49050600a83614744565b9150613795565b60008167ffffffffffffffff8111156137d6576137d6613c80565b6040519080825280601f01601f191660200182016040528015613800576020820181803683370190505b509050815b85156138a557613816600182614421565b90506000613825600a88614744565b61383090600a614b89565b61383a9088614421565b613845906030614bc6565b905060008160f81b905080848481518110613862576138626143c3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061389c600a89614744565b97505050613805565b50949350505050565b600082815260086020526040812060010180548392906138cf908490614421565b909155506132ec9050838383613ae6565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604080832086845290915281208054849290613920908490614438565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a60576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e61906139f59033906000908990899089906004016146d8565b6020604051808303816000875af1158015613a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3891906144e0565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a7a565b73ffffffffffffffffffffffffffffffffffffffff841615155b613ae0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613b26908490614421565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613ba857600080fd5b50565b8035613bb681613b86565b919050565b60008060408385031215613bce57600080fd5b8235613bd981613b86565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613ba857600080fd5b600060208284031215613c2757600080fd5b8135612a4581613be7565b65ffffffffffff81168114613ba857600080fd5b600060208284031215613c5857600080fd5b8135612a4581613c32565b600060208284031215613c7557600080fd5b8135612a4581613b86565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cf657613cf6613c80565b604052919050565b600067ffffffffffffffff821115613d1857613d18613c80565b5060051b60200190565b600082601f830112613d3357600080fd5b81356020613d48613d4383613cfe565b613caf565b82815260059290921b84018101918181019086841115613d6757600080fd5b8286015b84811015613d825780358352918301918301613d6b565b509695505050505050565b600067ffffffffffffffff821115613da757613da7613c80565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112613de457600080fd5b8135613df2613d4382613d8d565b818152846020838601011115613e0757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215613e3c57600080fd5b8535613e4781613b86565b94506020860135613e5781613b86565b9350604086013567ffffffffffffffff80821115613e7457600080fd5b613e8089838a01613d22565b94506060880135915080821115613e9657600080fd5b613ea289838a01613d22565b93506080880135915080821115613eb857600080fd5b50613ec588828901613dd3565b9150509295509295909350565b60008060408385031215613ee557600080fd5b823567ffffffffffffffff811115613efc57600080fd5b8301601f81018513613f0d57600080fd5b80356020613f1d613d4383613cfe565b82815260059290921b83018101918181019088841115613f3c57600080fd5b938201935b83851015613f63578435613f5481613b86565b82529382019390820190613f41565b9550613f729050868201613bab565b93505050509250929050565b600060208284031215613f9057600080fd5b5035919050565b60005b83811015613fb2578181015183820152602001613f9a565b83811115613ae05750506000910152565b60008151808452613fdb816020860160208601613f97565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006140206040830185613fc3565b82810360208401526140328185613fc3565b95945050505050565b6000806040838503121561404e57600080fd5b823567ffffffffffffffff8082111561406657600080fd5b818501915085601f83011261407a57600080fd5b8135602061408a613d4383613cfe565b82815260059290921b840181019181810190898411156140a957600080fd5b948201945b838610156140d05785356140c181613b86565b825294820194908201906140ae565b965050860135925050808211156140e657600080fd5b506140f385828601613d22565b9150509250929050565b600081518084526020808501945080840160005b8381101561412d57815187529582019590820190600101614111565b509495945050505050565b602081526000612a4560208301846140fd565b600080600080600060a0868803121561416357600080fd5b853561416e81613b86565b9450602086013561417e81613b86565b94979496505050506040830135926060810135926080909101359150565b600080604083850312156141af57600080fd5b50508035926020909101359150565b600080604083850312156141d157600080fd5b82356141dc81613b86565b915060208301356141ec81613c32565b809150509250929050565b8015158114613ba857600080fd5b6000806040838503121561421857600080fd5b823561422381613b86565b915060208301356141ec816141f7565b60008060006060848603121561424857600080fd5b833561425381613b86565b9250602084013561426381613c32565b929592945050506040919091013590565b6000806040838503121561428757600080fd5b823561429281613b86565b915060208301356141ec81613b86565b60008083601f8401126142b457600080fd5b50813567ffffffffffffffff8111156142cc57600080fd5b6020830191508360208260051b85010111156142e757600080fd5b9250929050565b6000806000806040858703121561430457600080fd5b843567ffffffffffffffff8082111561431c57600080fd5b614328888389016142a2565b9096509450602087013591508082111561434157600080fd5b5061434e878288016142a2565b95989497509550505050565b600080600080600060a0868803121561437257600080fd5b853561437d81613b86565b9450602086013561438d81613b86565b93506040860135925060608601359150608086013567ffffffffffffffff8111156143b757600080fd5b613ec588828901613dd3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015614433576144336143f2565b500390565b6000821982111561444b5761444b6143f2565b500190565b60408152600061446360408301856140fd565b828103602084015261403281856140fd565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a060408301526144ae60a08301866140fd565b82810360608401526144c081866140fd565b905082810360808401526144d48185613fc3565b98975050505050505050565b6000602082840312156144f257600080fd5b8151612a4581613be7565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361452e5761452e6143f2565b5060010190565b600065ffffffffffff808316818516808303821115614556576145566143f2565b01949350505050565b60006020828403121561457157600080fd5b8151612a4581613b86565b60008060008060008060c0878903121561459557600080fd5b86516145a081613b86565b60208801519096506145b181613b86565b60408801519095506145c281613b86565b60608801519094506145d381613b86565b60808801519093506145e481613c32565b8092505060a087015190509295509295509295565b60006020828403121561460b57600080fd5b5051919050565b60006020828403121561462457600080fd5b8151612a45816141f7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff808416806146775761467761462f565b92169190910492915050565b600065ffffffffffff808316818516818304811182151516156146a8576146a86143f2565b02949350505050565b600065ffffffffffff838116908316818110156146d0576146d06143f2565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a0608083015261471d60a0830184613fc3565b979650505050505050565b6000825161473a818460208701613f97565b9190910192915050565b6000826147535761475361462f565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615614792576147926143f2565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156147c6576147c66143f2565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561480d5761480d6143f2565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614848576148486143f2565b60008712925087820587128484161615614864576148646143f2565b8785058712818416161561487a5761487a6143f2565b505050929093029392505050565b6000826148975761489761462f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156148eb576148eb6143f2565b500590565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561492a5761492a6143f2565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561495e5761495e6143f2565b50500390565b6000826149735761497361462f565b500690565b7f30000000000000000000000000000000000000000000000000000000000000008152600082516149b0816001850160208701613f97565b9190910160010192915050565b6000602082840312156149cf57600080fd5b815167ffffffffffffffff8111156149e657600080fd5b8201601f810184136149f757600080fd5b8051614a05613d4382613d8d565b818152856020838501011115614a1a57600080fd5b614032826020830160208601613f97565b60008551614a3d818460208a01613f97565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551614a77816001840160208a01613f97565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551614ab7816002850160208a01613f97565b60029201918201528351614ad2816003840160208801613f97565b016003019695505050505050565b60008551614af2818460208a01613f97565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614b2c816001840160208a01613f97565b8551910190614b42816001840160208901613f97565b8451910190614b58816001840160208801613f97565b016001019695505050505050565b600060208284031215614b7857600080fd5b815160ff81168114612a4557600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614bc157614bc16143f2565b500290565b600060ff821660ff84168060ff03821115614be357614be36143f2565b01939250505056fea2646970667358221220fe224189d064d1e0087d19b075f3778cc279df31a1ea2f2027c6de9a56371f2164736f6c634300080f0033",
    "sourceMap": "1421:9355:39:-:0;;;451:1:26;426:26;;1897:203:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;2051:9:39;;2062:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;3871:21:45;;::::1;;::::0;-1:-1:-1;3902:25:45::1;;::::0;-1:-1:-1;;4001:11:45::1;:15:::0;;-1:-1:-1;;;;;;4026:21:45;;;-1:-1:-1;1421:9355:39;;-1:-1:-1;1421:9355:39;14:131:124;-1:-1:-1;;;;;89:31:124;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:698::-;291:6;299;307;315;368:3;356:9;347:7;343:23;339:33;336:53;;;385:1;382;375:12;336:53;417:9;411:16;436:31;461:5;436:31;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:33:124;515:25;549:33;:::i;:::-;653:2;638:18;;632:25;601:7;;-1:-1:-1;666:33:124;632:25;666:33;:::i;:::-;770:2;755:18;;749:25;718:7;;-1:-1:-1;783:33:124;749:25;783:33;:::i;:::-;150:698;;;;-1:-1:-1;150:698:124;;-1:-1:-1;;150:698:124:o;:::-;1421:9355:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613bbb565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613c15565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613c46565b6106ca565b005b61027a61028a366004613c63565b6107ce565b61027a61029d366004613e24565b6108d2565b61027a6102b0366004613ed2565b610cdd565b6102c86102c3366004613f7e565b610e10565b60405161020892919061400d565b6102e96102e436600461403b565b610eca565b6040516102089190614138565b610380610304366004613f7e565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc36600461414b565b61103a565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c63565b6114f1565b61027a61041e36600461419c565b61164e565b61027a610431366004613c46565b6116d1565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe6104893660046141be565b6117f0565b61027a61049c366004614205565b6118a5565b6004546102509065ffffffffffff1681565b61027a6104c1366004613c46565b61193c565b6104d96104d4366004614233565b611a4d565b60408051928352602083019190915201610208565b6102506104fc366004613c63565b611e3d565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c63565b60036020526000908152604090205465ffffffffffff1681565b6101fe6105573660046141be565b611e7b565b610250620186a081565b6101fe610574366004614274565b600560209081526000928352604080842090915290825290205481565b61022461059f366004614274565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd3660046142ee565b611f29565b61027a6105e036600461435a565b612035565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b82518251811461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff87161480610992575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b83811015610af057868181518110610a1857610a186143c3565b60200260200101519250858181518110610a3457610a346143c3565b6020026020010151915081600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610a9e9190614421565b909155505073ffffffffffffffffffffffffffffffffffffffff8816600090815260066020908152604080832086845290915281208054849290610ae3908490614438565b90915550506001016109fe565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989604051610b67929190614450565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff87163b15610c53576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff89169063bc197c8190610be89033908d908c908c908c90600401614475565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906144e0565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c6d565b73ffffffffffffffffffffffffffffffffffffffff871615155b610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050505050565b600254600114610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610e05576000848281518110610d6e57610d6e6143c3565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610df25733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610df290868361244d565b505080610dfe906144fd565b9050610d52565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ebd916125d9565b9097909650945050505050565b81518151606091908114610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8067ffffffffffffffff811115610f5357610f53613c80565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b50915060005b818110156110325760066000868381518110610fa057610fa06143c3565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858381518110610ff657610ff66143c3565b602002602001015181526020019081526020016000205483828151811061101f5761101f6143c3565b6020908102919091010152600101610f82565b505092915050565b6000806002546001146110a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110f2908a9065ffffffffffff16620186a061297a565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600360205260408120546004549293509091839161114e9161113b9165ffffffffffff9081169116614535565b8c9065ffffffffffff16620186a061297a565b6111589190614421565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d919061455f565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a2919061457c565b50919b509950975090915060009050836112bc868f614421565b6112c69190614421565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611316939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135991906145f9565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ea9190614438565b909155505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290611453908490614438565b9091555061146e90508b8b856114698587614438565b612a4c565b600061147c8e8589886130f4565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114d0929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115d457506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d49190614612565b6115dd57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116c8828261318b565b50506001600255565b6116ff336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff90811690821611156117ad576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b60008083611801620151808561465e565b60405160200161186792919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61196a336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b6119d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a14576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611acf620151808661465e565b611adc9062015180614683565b9050428165ffffffffffff161015611b20576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2c87836117f0565b60008181526008602052604090205490915060ff16611b9d576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906145f9565b9050611c5273ffffffffffffffffffffffffffffffffffffffff89163330896132f1565b611c5c8682614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea91906145f9565b1015611d22576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e1657600454600090611d7b90611d689065ffffffffffff66010000000000008204811691166146b1565b889065ffffffffffff16620186a061297a565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611de4908490614438565b90915550611dfe90503384611df9848b614421565b61348d565b82611e098289614421565b9550955050505050611e2e565b611e2133838861348d565b509250839150611e2e9050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff9081169116614535565b6000600254600114611ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ef984846117f0565b60008181526008602052604090205490915060ff16611f1d57611f1d8185856134d0565b60016002559392505050565b600254600114611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fd3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561202857612018868683818110611ff357611ff36143c3565b9050602002013585858481811061200c5761200c6143c3565b9050602002013561318b565b612021816144fd565b9050611fd6565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff86161480612089575073ffffffffffffffffffffffffffffffffffffffff8516600090815260076020908152604080832033845290915290205460ff165b6120ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff851660009081526006602090815260408083208684529091528120805484929061212f908490614421565b909155505073ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604080832086845290915281208054849290612174908490614438565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff808716929088169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b156122b5576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e619061224a9033908a908990899089906004016146d8565b6020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d91906144e0565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122cf565b73ffffffffffffffffffffffffffffffffffffffff841615155b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061242057506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124209190614612565b80612445575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124e49190614728565b6000604051808303816000865af19150503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b50915091508180156125505750805115806125505750808060200190518101906125509190614612565b8015612573575060008573ffffffffffffffffffffffffffffffffffffffff163b115b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b60608060008080806125ee6201518088614744565b905060006125ff8262010bd9614758565b61260c9062253d8c614758565b9050600062023ab161261f8360046147cc565b6126299190614888565b9050600461263a8262023ab16147cc565b612645906003614758565b61264f9190614888565b61265990836148f0565b9150600062164b0961266c846001614758565b61267890610fa06147cc565b6126829190614888565b90506004612692826105b56147cc565b61269c9190614888565b6126a690846148f0565b6126b190601f614758565b9250600061098f6126c38560506147cc565b6126cd9190614888565b9050600060506126df8361098f6147cc565b6126e99190614888565b6126f390866148f0565b9050612700600b83614888565b945061270d85600c6147cc565b612718836002614758565b61272291906148f0565b915084836127316031876148f0565b61273c9060646147cc565b6127469190614758565b6127509190614758565b985090965094506000935061277592506127709150612710905086614964565b61374e565b90506000600a841061278f5761278a8461374e565b6127b8565b6127988461374e565b6040516020016127a89190614978565b6040516020818303038152906040525b90506000600a84106127d2576127cd8461374e565b6127fb565b6127db8461374e565b6040516020016127eb9190614978565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612848573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261288e91908101906149bd565b8383836040516020016128a49493929190614a2b565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015612900573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261294691908101906149bd565b83838360405160200161295c9493929190614ae0565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129d157600084116129c657600080fd5b508290049050612a45565b8084116129dd57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612aad91815260200190565b602060405180830381865afa158015612aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aee919061455f565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b2891815260200190565b60c060405180830381865afa158015612b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b69919061457c565b5050935093509350935060008588612b819190614421565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1591906145f9565b9050612c3973ffffffffffffffffffffffffffffffffffffffff841633308c6132f1565b612c438982614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd191906145f9565b1015612d09576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f4057612d4673ffffffffffffffffffffffffffffffffffffffff8416868461244d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd791906145f9565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e5057600080fd5b505af1158015612e64573d6000803e3d6000fd5b505050508881612e749190614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f0291906145f9565b1015612f3a576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506130e8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd191906145f9565b9050612ff573ffffffffffffffffffffffffffffffffffffffff861688308c6132f1565b612fff8982614438565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308d91906145f9565b10156130c5576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130e673ffffffffffffffffffffffffffffffffffffffff8516888561244d565b505b50505050505050505050565b600065ffffffffffff82161561316a5762015180806131134285614535565b61311d919061465e565b6131279190614683565b9050600061313584836117f0565b60008181526008602052604090205490915060ff16613159576131598185846134d0565b61316486828761348d565b50612445565b61244573ffffffffffffffffffffffffffffffffffffffff8416868661244d565b60008281526008602052604090205460ff166131d3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132bb5760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b6132c63384846138ae565b60208101516132ec9073ffffffffffffffffffffffffffffffffffffffff16338461244d565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916133909190614728565b6000604051808303816000865af19150503d80600081146133cd576040519150601f19603f3d011682016040523d82523d6000602084013e6133d2565b606091505b50915091508180156133fc5750805115806133fc5750808060200190518101906133fc9190614612565b801561341f575060008673ffffffffffffffffffffffffffffffffffffffff163b115b613485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b505050505050565b600082815260086020526040812060010180548392906134ae908490614438565b925050819055506132ec838383604051806020016040528060008152506138e0565b60006134df620151808361465e565b6134ec9062015180614683565b9050428165ffffffffffff161015613530576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135cf9190614b66565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361379157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156137bb57806137a5816144fd565b91506137b49050600a83614744565b9150613795565b60008167ffffffffffffffff8111156137d6576137d6613c80565b6040519080825280601f01601f191660200182016040528015613800576020820181803683370190505b509050815b85156138a557613816600182614421565b90506000613825600a88614744565b61383090600a614b89565b61383a9088614421565b613845906030614bc6565b905060008160f81b905080848481518110613862576138626143c3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061389c600a89614744565b97505050613805565b50949350505050565b600082815260086020526040812060010180548392906138cf908490614421565b909155506132ec9050838383613ae6565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604080832086845290915281208054849290613920908490614438565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a60576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e61906139f59033906000908990899089906004016146d8565b6020604051808303816000875af1158015613a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3891906144e0565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a7a565b73ffffffffffffffffffffffffffffffffffffffff841615155b613ae0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613b26908490614421565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613ba857600080fd5b50565b8035613bb681613b86565b919050565b60008060408385031215613bce57600080fd5b8235613bd981613b86565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613ba857600080fd5b600060208284031215613c2757600080fd5b8135612a4581613be7565b65ffffffffffff81168114613ba857600080fd5b600060208284031215613c5857600080fd5b8135612a4581613c32565b600060208284031215613c7557600080fd5b8135612a4581613b86565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cf657613cf6613c80565b604052919050565b600067ffffffffffffffff821115613d1857613d18613c80565b5060051b60200190565b600082601f830112613d3357600080fd5b81356020613d48613d4383613cfe565b613caf565b82815260059290921b84018101918181019086841115613d6757600080fd5b8286015b84811015613d825780358352918301918301613d6b565b509695505050505050565b600067ffffffffffffffff821115613da757613da7613c80565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112613de457600080fd5b8135613df2613d4382613d8d565b818152846020838601011115613e0757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215613e3c57600080fd5b8535613e4781613b86565b94506020860135613e5781613b86565b9350604086013567ffffffffffffffff80821115613e7457600080fd5b613e8089838a01613d22565b94506060880135915080821115613e9657600080fd5b613ea289838a01613d22565b93506080880135915080821115613eb857600080fd5b50613ec588828901613dd3565b9150509295509295909350565b60008060408385031215613ee557600080fd5b823567ffffffffffffffff811115613efc57600080fd5b8301601f81018513613f0d57600080fd5b80356020613f1d613d4383613cfe565b82815260059290921b83018101918181019088841115613f3c57600080fd5b938201935b83851015613f63578435613f5481613b86565b82529382019390820190613f41565b9550613f729050868201613bab565b93505050509250929050565b600060208284031215613f9057600080fd5b5035919050565b60005b83811015613fb2578181015183820152602001613f9a565b83811115613ae05750506000910152565b60008151808452613fdb816020860160208601613f97565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006140206040830185613fc3565b82810360208401526140328185613fc3565b95945050505050565b6000806040838503121561404e57600080fd5b823567ffffffffffffffff8082111561406657600080fd5b818501915085601f83011261407a57600080fd5b8135602061408a613d4383613cfe565b82815260059290921b840181019181810190898411156140a957600080fd5b948201945b838610156140d05785356140c181613b86565b825294820194908201906140ae565b965050860135925050808211156140e657600080fd5b506140f385828601613d22565b9150509250929050565b600081518084526020808501945080840160005b8381101561412d57815187529582019590820190600101614111565b509495945050505050565b602081526000612a4560208301846140fd565b600080600080600060a0868803121561416357600080fd5b853561416e81613b86565b9450602086013561417e81613b86565b94979496505050506040830135926060810135926080909101359150565b600080604083850312156141af57600080fd5b50508035926020909101359150565b600080604083850312156141d157600080fd5b82356141dc81613b86565b915060208301356141ec81613c32565b809150509250929050565b8015158114613ba857600080fd5b6000806040838503121561421857600080fd5b823561422381613b86565b915060208301356141ec816141f7565b60008060006060848603121561424857600080fd5b833561425381613b86565b9250602084013561426381613c32565b929592945050506040919091013590565b6000806040838503121561428757600080fd5b823561429281613b86565b915060208301356141ec81613b86565b60008083601f8401126142b457600080fd5b50813567ffffffffffffffff8111156142cc57600080fd5b6020830191508360208260051b85010111156142e757600080fd5b9250929050565b6000806000806040858703121561430457600080fd5b843567ffffffffffffffff8082111561431c57600080fd5b614328888389016142a2565b9096509450602087013591508082111561434157600080fd5b5061434e878288016142a2565b95989497509550505050565b600080600080600060a0868803121561437257600080fd5b853561437d81613b86565b9450602086013561438d81613b86565b93506040860135925060608601359150608086013567ffffffffffffffff8111156143b757600080fd5b613ec588828901613dd3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015614433576144336143f2565b500390565b6000821982111561444b5761444b6143f2565b500190565b60408152600061446360408301856140fd565b828103602084015261403281856140fd565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a060408301526144ae60a08301866140fd565b82810360608401526144c081866140fd565b905082810360808401526144d48185613fc3565b98975050505050505050565b6000602082840312156144f257600080fd5b8151612a4581613be7565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361452e5761452e6143f2565b5060010190565b600065ffffffffffff808316818516808303821115614556576145566143f2565b01949350505050565b60006020828403121561457157600080fd5b8151612a4581613b86565b60008060008060008060c0878903121561459557600080fd5b86516145a081613b86565b60208801519096506145b181613b86565b60408801519095506145c281613b86565b60608801519094506145d381613b86565b60808801519093506145e481613c32565b8092505060a087015190509295509295509295565b60006020828403121561460b57600080fd5b5051919050565b60006020828403121561462457600080fd5b8151612a45816141f7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff808416806146775761467761462f565b92169190910492915050565b600065ffffffffffff808316818516818304811182151516156146a8576146a86143f2565b02949350505050565b600065ffffffffffff838116908316818110156146d0576146d06143f2565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a0608083015261471d60a0830184613fc3565b979650505050505050565b6000825161473a818460208701613f97565b9190910192915050565b6000826147535761475361462f565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615614792576147926143f2565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156147c6576147c66143f2565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561480d5761480d6143f2565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614848576148486143f2565b60008712925087820587128484161615614864576148646143f2565b8785058712818416161561487a5761487a6143f2565b505050929093029392505050565b6000826148975761489761462f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156148eb576148eb6143f2565b500590565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561492a5761492a6143f2565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561495e5761495e6143f2565b50500390565b6000826149735761497361462f565b500690565b7f30000000000000000000000000000000000000000000000000000000000000008152600082516149b0816001850160208701613f97565b9190910160010192915050565b6000602082840312156149cf57600080fd5b815167ffffffffffffffff8111156149e657600080fd5b8201601f810184136149f757600080fd5b8051614a05613d4382613d8d565b818152856020838501011115614a1a57600080fd5b614032826020830160208601613f97565b60008551614a3d818460208a01613f97565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551614a77816001840160208a01613f97565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551614ab7816002850160208a01613f97565b60029201918201528351614ad2816003840160208801613f97565b016003019695505050505050565b60008551614af2818460208a01613f97565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614b2c816001840160208a01613f97565b8551910190614b42816001840160208901613f97565b8451910190614b58816001840160208801613f97565b016001019695505050505050565b600060208284031215614b7857600080fd5b815160ff81168114612a4557600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614bc157614bc16143f2565b500290565b600060ff821660ff84168060ff03821115614be357614be36143f2565b01939250505056fea2646970667358221220fe224189d064d1e0087d19b075f3778cc279df31a1ea2f2027c6de9a56371f2164736f6c634300080f0033",
    "sourceMap": "1421:9355:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:64:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:25:124;;;766:2;751:18;1187:64:61;;;;;;;;4620:340;;;;;;:::i;:::-;;:::i;:::-;;;1411:14:124;;1404:22;1386:41;;1374:2;1359:18;4620:340:61;1246:187:124;3266:31:45;;;;;;;;;;;;;;;1612:14:124;1600:27;;;1582:46;;1570:2;1555:18;3266:31:45;1438:196:124;4092:171:45;;;;;;:::i;:::-;;:::i;:::-;;1936:147:22;;;;;;:::i;:::-;;:::i;2428:1357:61:-;;;;;;:::i;:::-;;:::i;4728:414:45:-;;;;;;:::i;:::-;;:::i;10392:382:39:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3791:640:61:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1764:54:39:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9880:14:124;;9873:22;9855:41;;9944:42;9932:55;;;9927:2;9912:18;;9905:83;10036:4;10024:17;;;10004:18;;;9997:45;;;;10090:14;10078:27;;;10073:2;10058:18;;10051:55;10137:3;10122:19;;10115:35;9842:3;9827:19;1764:54:39;9593:563:124;5393:1838:45;;;;;;:::i;:::-;;:::i;:::-;;;;10932:25:124;;;11005:14;10993:27;;;10988:2;10973:18;;10966:55;10905:18;5393:1838:45;10760:267:124;1496:434:22;;;;;;:::i;:::-;;:::i;6825:123:39:-;;;;;;:::i;:::-;;:::i;4497:193:45:-;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;;;;;;;;11732:42:124;11720:55;;;11702:74;;11690:2;11675:18;551:20:22;11556:226:124;9963:382:39;;;;;;:::i;:::-;;:::i;1516:203:61:-;;;;;;:::i;:::-;;:::i;3039:25:45:-;;;;;;;;;4301:158;;;;;;:::i;:::-;;:::i;4312:1834:39:-;;;;;;:::i;:::-;;:::i;:::-;;;;13351:25:124;;;13407:2;13392:18;;13385:34;;;;13324:18;4312:1834:39;13177:248:124;5180:127:45;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;;;;;2913:46:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7439:386:39;;;;;;:::i;:::-;;:::i;3304:41:45:-;;3342:3;3304:41;;3432:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1258:68:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6995:351:39;;;;;;:::i;:::-;;:::i;1725:697:61:-;;;;;;:::i;:::-;;:::i;4620:340::-;4696:4;4731:25;;;;;;:100;;-1:-1:-1;4806:25:61;;;;;4731:100;:176;;;-1:-1:-1;4882:25:61;;;;;4731:176;4712:195;4620:340;-1:-1:-1;;4620:340:61:o;4092:171:45:-;501:6:26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;;;;;;;;;547:1;538:10;;4181:3:45::1;4174:10;::::0;::::1;;4170:45;;;4193:22;;;;;;;;;;;;;;4170:45;4238:10;4225:24;::::0;;;:12:::1;:24;::::0;;;;:31;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;571:6:26;:10;4092:171:45:o;1936:147:22:-;875:33;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;16911:2:124;867:58:22;;;16893:21:124;16950:2;16930:18;;;16923:30;16989:14;16969:18;;;16962:42;17021:18;;867:58:22;16709:336:124;867:58:22;2010:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;2428:1357:61:-;2643:10;;2702:14;;2689:27;;2681:55;;;;;;;17252:2:124;2681:55:61;;;17234:21:124;17291:2;17271:18;;;17264:30;17330:17;17310:18;;;17303:45;17365:18;;2681:55:61;17050:339:124;2681:55:61;2755:10;:18;;;;;:56;;-1:-1:-1;2777:22:61;;;;;;;:16;:22;;;;;;;;2800:10;2777:34;;;;;;;;;;2755:56;2747:83;;;;;;;17596:2:124;2747:83:61;;;17578:21:124;17635:2;17615:18;;;17608:30;17674:16;17654:18;;;17647:44;17708:18;;2747:83:61;17394:338:124;2747:83:61;2912:10;2932:14;2962:9;2957:351;2981:9;2977:1;:13;2957:351;;;3013:3;3017:1;3013:6;;;;;;;;:::i;:::-;;;;;;;3008:11;;3042:7;3050:1;3042:10;;;;;;;;:::i;:::-;;;;;;;3033:19;;3090:6;3067:9;:15;3077:4;3067:15;;;;;;;;;;;;;;;:19;3083:2;3067:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;3110:13:61;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;3131:6;;3110:13;:27;;3131:6;;3110:27;:::i;:::-;;;;-1:-1:-1;;3280:3:61;;2957:351;;;;3355:2;3323:49;;3349:4;3323:49;;3337:10;3323:49;;;3359:3;3364:7;3323:49;;;;;;;:::i;:::-;;;;;;;;3404:14;;;;:19;:332;;3477:203;;3684:52;3477:203;;;3684:52;3477:47;;;;3684:52;;3477:203;;3546:10;;3578:4;;3604:3;;3629:7;;3658:4;;3477:203;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:259;;;3404:332;;;3442:16;;;;;3404:332;3383:395;;;;;;;20159:2:124;3383:395:61;;;20141:21:124;20198:2;20178:18;;;20171:30;20237:18;20217;;;20210:46;20273:18;;3383:395:61;19957:340:124;3383:395:61;2613:1172;;;2428:1357;;;;;:::o;4728:414:45:-;501:6:26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;16370:334:124;493:34:26;547:1;538:10;;4839:14:45;;4825:11:::1;4863:273;4883:3;4879:1;:7;4863:273;;;4907:11;4921:7;4929:1;4921:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4968::::1;4945:12;4960:19:::0;;;:7:::1;:19:::0;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;;;;4921:10;;-1:-1:-1;5005:9:45;;5001:125:::1;;5042:10;5063:1;5034:19:::0;;;:7:::1;:19;::::0;;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;:30;;;;5082:29:::1;::::0;5101:3;5106:4;5082:18:::1;:29::i;:::-;4893:243;;4888:3;;;;:::i;:::-;;;4863:273;;;-1:-1:-1::0;;580:1:26;571:6;:10;-1:-1:-1;;4728:414:45:o;10392:382:39:-;10549:25;10577:23;;;:13;:23;;;;;;;;10549:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10505:13;10549:51;;;;;;;;;;;;;;;10505:13;;;;10549:25;;;;10655:81;;:17;:81::i;:::-;10610:126;;;;-1:-1:-1;10392:382:39;-1:-1:-1;;;;;10392:382:39:o;3791:640:61:-;3987:13;;4052:10;;3923:25;;3987:13;4036:26;;4028:54;;;;;;;17252:2:124;4028:54:61;;;17234:21:124;17291:2;17271:18;;;17264:30;17330:17;17310:18;;;17303:45;17365:18;;4028:54:61;17050:339:124;4028:54:61;4118:12;4104:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4104:27:61;;4093:38;;4302:9;4297:118;4321:12;4317:1;:16;4297:118;;;4372:9;:20;4382:6;4389:1;4382:9;;;;;;;;:::i;:::-;;;;;;;4372:20;;;;;;;;;;;;;;;:28;4393:3;4397:1;4393:6;;;;;;;;:::i;:::-;;;;;;;4372:28;;;;;;;;;;;;4358:8;4367:1;4358:11;;;;;;;;:::i;:::-;;;;;;;;;;:42;4335:3;;4297:118;;;;3954:477;3791:640;;;;:::o;5393:1838:45:-;5588:7;5597:6;501::26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;16370:334:124;493:34:26;547:1;538:10;;5997:23:45::1;::::0;::::1;5615:17;5997:23:::0;;;:12:::1;:23;::::0;;;;;5615:17;;;;;;;;5982:53:::1;::::0;:7;;5997:23:::1;;3342:3;5982:14;:53::i;:::-;6095:23;::::0;::::1;6045:18;6095:23:::0;;;:12:::1;:23;::::0;;;;;6081:11:::1;::::0;5961:74;;-1:-1:-1;6045:18:45;;5961:74;;6066:67:::1;::::0;6081:37:::1;::::0;6095:23:::1;::::0;;::::1;::::0;6081:11:::1;:37;:::i;:::-;6066:7:::0;;:67:::1;;3342:3;6066:14;:67::i;:::-;:92;;;;:::i;:::-;6212:30;::::0;;;;::::1;::::0;::::1;778:25:124::0;;;6045:113:45;;-1:-1:-1;6183:26:45::1;::::0;6212:25:::1;:11;:25;::::0;::::1;::::0;751:18:124;;6212:30:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6331:70;::::0;;;;::::1;::::0;::::1;778:25:124::0;;;6183:59:45;;-1:-1:-1;6256:13:45::1;::::0;6331:35:::1;::::0;::::1;::::0;::::1;::::0;751:18:124;;6331:70:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6283:118:45;;-1:-1:-1;6283:118:45;-1:-1:-1;6283:118:45;-1:-1:-1;6283:118:45;;-1:-1:-1;6487:21:45::1;::::0;-1:-1:-1;6534:10:45;6511:20:::1;6521:10:::0;6511:7;:20:::1;:::i;:::-;:33;;;;:::i;:::-;6487:57;;6567:10;:23;;;6591:3;6596:13;6611;6567:58;;;;;;;;;;;;;;;;22106:25:124::0;;;22162:2;22147:18;;22140:34;;;;22205:2;22190:18;;22183:34;22094:2;22079:18;;21904:319;6567:58:45::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6558:67;;6169:467;;;6730:10;6696:7;:18;6704:9;6696:18;;;;;;;;;;;;;;;:30;6715:10;6696:30;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6750:18:45::1;6758:9;6750:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:44;;6784:10;;6750:18;:44:::1;::::0;6784:10;;6750:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6896:63:45::1;::::0;-1:-1:-1;6913:3:45;6918:7;6927:6;6935:23:::1;6948:10:::0;6935;:23:::1;:::i;:::-;6896:16;:63::i;:::-;7064:13;7080:55;7094:10;7106:6;7114:11;7127:7;7080:13;:55::i;:::-;7064:71;;7163:9;7151:39;;7158:3;7151:39;7174:7;7183:6;7151:39;;;;;;13351:25:124::0;;;13407:2;13392:18;;13385:34;13339:2;13324:18;;13177:248;7151:39:45::1;;;;;;;;580:1:26::0;571:6;:10;7209:6:45;;;;-1:-1:-1;5393:1838:45;;-1:-1:-1;;;;;;;;;;;5393:1838:45:o;1496:434:22:-;1767:5;;;;1753:10;:19;;:76;;-1:-1:-1;1776:9:22;;:53;;;;;1794:10;1776:53;;;22678:34:124;1814:4:22;22728:18:124;;;22721:43;1776:9:22;1821:7;;;22780:18:124;;;22773:107;1776:9:22;;;;;:17;;22590:18:124;;1776:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;;;;;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:22;1496:434;:::o;6825:123:39:-;501:6:26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;16370:334:124;493:34:26;547:1;538:10;;6915:26:39::1;6923:8:::0;6933:7;6915::::1;:26::i;:::-;-1:-1:-1::0;;580:1:26;571:6;:10;6825:123:39:o;4497:193:45:-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;16911:2:124;867:58:22;;;16893:21:124;16950:2;16930:18;;;16923:30;16989:14;16969:18;;;16962:42;17021:18;;867:58:22;16709:336:124;867:58:22;4602:11:45::1;::::0;::::1;::::0;;::::1;4590:23:::0;;::::1;;4586:58;;;4622:22;;;;;;;;;;;;;;4586:58;4654:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4497:193::o;9963:382:39:-;10048:7;;10265:11;10278:24;10295:6;10278:7;:24;:::i;:::-;10248:55;;;;;;;;23720:2:124;23716:15;;;;23733:66;23712:88;23700:101;;23839:3;23835:16;23853:66;23831:89;23826:2;23817:12;;23810:111;23946:2;23937:12;;23530:425;10248:55:39;;;;;;;;;;;;;;10238:66;;10248:55;10238:66;;;;;9963:382;-1:-1:-1;;;;9963:382:39:o;1516:203:61:-;1618:10;1601:28;;;;:16;:28;;;;;;;;;:38;;;;;;;;;;;;:49;;;;;;;;;;;;;1666:46;;1386:41:124;;;1601:38:61;;1618:10;1666:46;;1359:18:124;1666:46:61;;;;;;;1516:203;;:::o;4301:158:45:-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;16911:2:124;867:58:22;;;16893:21:124;16950:2;16930:18;;;16923:30;16989:14;16969:18;;;16962:42;17021:18;;867:58:22;16709:336:124;867:58:22;4390:3:45::1;4383:4;:10;;;4379:45;;;4402:22;;;;;;;;;;;;;;4379:45;4434:11;:18:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4301:158::o;4312:1834:39:-;4450:7;4459;501:6:26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;16370:334:124;493:34:26;547:1;538:10;;4632:13:39::1;4655:16;4665:6;4655:7:::0;:16:::1;:::i;:::-;4648:33;::::0;4675:6:::1;4648:33;:::i;:::-;4632:49;;4748:15;4739:6;:24;;;4735:59;;;4772:22;;;;;;;;;;;;;;4735:59;4805:15;4823:31;4834:11;4847:6;4823:10;:31::i;:::-;4931:22;::::0;;;:13:::1;:22;::::0;;;;:29;4805:49;;-1:-1:-1;4931:29:39::1;;4926:88;;4969:45;::::0;::::1;::::0;;24448:42:124;24436:55;;4969:45:39::1;::::0;::::1;24418:74:124::0;24540:14;24528:27;;24508:18;;;24501:55;24391:18;;4969:45:39::1;24231:331:124::0;4926:88:39::1;5235:36;::::0;;;;5265:4:::1;5235:36;::::0;::::1;11702:74:124::0;5214:18:39::1;::::0;5235:21:::1;::::0;::::1;::::0;::::1;::::0;11675:18:124;;5235:36:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5214:57:::0;-1:-1:-1;5281:64:39::1;:28;::::0;::::1;5310:10;5330:4;5337:7:::0;5281:28:::1;:64::i;:::-;5398:20;5411:7:::0;5398:10;:20:::1;:::i;:::-;5359:36;::::0;;;;5389:4:::1;5359:36;::::0;::::1;11702:74:124::0;5359:21:39::1;::::0;::::1;::::0;::::1;::::0;11675:18:124;;5359:36:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;5355:109;;;5439:25;;;;;;;;;;;;;;5355:109;5619:17;::::0;::::1;::::0;;::::1;::::0;::::1;5605:11:::0;::::1;:31;5601:539;;;5737:17;::::0;5688::::1;::::0;5708:61:::1;::::0;5723:31:::1;::::0;5737:17:::1;::::0;;::::1;::::0;::::1;::::0;5723:11:::1;:31;:::i;:::-;5708:7:::0;;:61:::1;;3342:3:45;5708:14:39;:61::i;:::-;5783:18;5791:9;5783:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:44;;5688:81;;-1:-1:-1;5688:81:39;;5783:31;;:18;:44:::1;::::0;5688:81;;5783:44:::1;:::i;:::-;::::0;;;-1:-1:-1;5878:52:39::1;::::0;-1:-1:-1;5889:10:39::1;5901:7:::0;5910:19:::1;5920:9:::0;5910:7;:19:::1;:::i;:::-;5878:10;:52::i;:::-;5953:7:::0;5962:19:::1;5972:9:::0;5962:7;:19:::1;:::i;:::-;5945:37;;;;;;;;;;5601:539;6049:40;6060:10;6072:7;6081;6049:10;:40::i;:::-;-1:-1:-1::0;6112:7:39;-1:-1:-1;6121:7:39;;-1:-1:-1;6104:25:39::1;::::0;-1:-1:-1;6104:25:39::1;559:1:26;580::::0;571:6;:10;4312:1834:39;;;;-1:-1:-1;4312:1834:39;-1:-1:-1;;4312:1834:39:o;5180:127:45:-;5277:23;;;5238:6;5277:23;;;:12;:23;;;;;;5263:11;;:37;;5277:23;;;;;5263:11;:37;:::i;7439:386:39:-;7562:7;501:6:26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;16370:334:124;493:34:26;547:1;538:10;;7585:15:39::1;7603:32;7614:11:::0;7627:7;7603:10:::1;:32::i;:::-;7701:22;::::0;;;:13:::1;:22;::::0;;;;:29;7585:50;;-1:-1:-1;7701:29:39::1;;7696:99;;7746:38;7754:7;7763:11;7776:7;7746;:38::i;:::-;580:1:26::0;571:6;:10;7811:7:39;7439:386;-1:-1:-1;;;7439:386:39:o;6995:351::-;501:6:26;;511:1;501:11;493:34;;;;;;;16572:2:124;493:34:26;;;16554:21:124;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;493:34:26;16370:334:124;493:34:26;547:1;538:10;;7158:9:39;7188:22;;::::1;7184:57;;7219:22;;;;;;;;;;;;;;7184:57;7256:9;7251:89;7271:3;7267:1;:7;7251:89;;;7295:34;7303:9;;7313:1;7303:12;;;;;;;:::i;:::-;;;;;;;7317:8;;7326:1;7317:11;;;;;;;:::i;:::-;;;;;;;7295:7;:34::i;:::-;7276:3;::::0;::::1;:::i;:::-;;;7251:89;;;-1:-1:-1::0;;580:1:26;571:6;:10;-1:-1:-1;;;;6995:351:39:o;1725:697:61:-;1903:10;:18;;;;;:56;;-1:-1:-1;1925:22:61;;;;;;;:16;:22;;;;;;;;1948:10;1925:34;;;;;;;;;;1903:56;1895:83;;;;;;;17596:2:124;1895:83:61;;;17578:21:124;17635:2;17615:18;;;17608:30;17674:16;17654:18;;;17647:44;17708:18;;1895:83:61;17394:338:124;1895:83:61;1989:15;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;2012:6;;1989:15;:29;;2012:6;;1989:29;:::i;:::-;;;;-1:-1:-1;;2028:13:61;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;2049:6;;2028:13;:27;;2049:6;;2028:27;:::i;:::-;;;;-1:-1:-1;;2071:48:61;;;13351:25:124;;;13407:2;13392:18;;13385:34;;;2071:48:61;;;;;;;;;2086:10;;2071:48;;13324:18:124;2071:48:61;;;;;;;2151:14;;;;:19;:222;;2224:78;;2326:47;2224:78;;;2326:47;2224:42;;;;2326:47;;2224:78;;2267:10;;2279:4;;2285:2;;2289:6;;2297:4;;2224:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:149;;;2151:222;;;2189:16;;;;;2151:222;2130:285;;;;;;;20159:2:124;2130:285:61;;;20141:21:124;20198:2;20178:18;;;20171:30;20237:18;20217;;;20210:46;20273:18;;2130:285:61;19957:340:124;2130:285:61;1725:697;;;;;:::o;950:540:22:-;1070:9;;1037:4;;1070:9;;1388:27;;;;;:77;;-1:-1:-1;1419:46:22;;;;;:12;22696:15:124;;;1419:46:22;;;22678:34:124;1446:4:22;22728:18:124;;;22721:43;22812:66;22800:79;;22780:18;;;22773:107;1419:12:22;;;;;22590:18:124;;1419:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:22;;;1470:13;;;1478:5;;1470:13;1387:96;1380:103;950:540;-1:-1:-1;;;;950:540:22:o;902:453:63:-;1083:59;;;1050:19;25578:55:124;;;1083:59:63;;;25560:74:124;25650:18;;;;25643:34;;;1083:59:63;;;;;;;;;;25533:18:124;;;;1083:59:63;;;;;;;;;1106:23;1083:59;;;1050:102;;-1:-1:-1;;;;1050:19:63;;;;:102;;1083:59;1050:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:138;;;;1184:7;:73;;;;-1:-1:-1;1212:11:63;;:16;;:44;;;1243:4;1232:24;;;;;;;;;;;;:::i;:::-;1184:123;;;;;1306:1;1285:5;1277:26;;;:30;1184:123;1163:185;;;;;;;26169:2:124;1163:185:63;;;26151:21:124;26208:2;26188:18;;;26181:30;26247:17;26227:18;;;26220:45;26282:18;;1163:185:63;25967:339:124;10979:1744:45;11089:18;;11367:12;;;;11470:16;11480:6;11470:7;:16;:::i;:::-;11447:40;-1:-1:-1;11502:11:45;11516:14;11447:40;11525:5;11516:14;:::i;:::-;:24;;11533:7;11516:24;:::i;:::-;11502:38;-1:-1:-1;11582:11:45;11609:6;11597:8;11502:38;11597:1;:8;:::i;:::-;11596:19;;;;:::i;:::-;11582:33;-1:-1:-1;11665:1:45;11644:13;11582:33;11644:6;:13;:::i;:::-;:17;;11660:1;11644:17;:::i;:::-;11643:23;;;;:::i;:::-;11636:30;;:4;:30;:::i;:::-;11629:37;-1:-1:-1;11680:12:45;11717:7;11704:8;11629:37;11711:1;11704:8;:::i;:::-;11696:17;;:4;:17;:::i;:::-;11695:29;;;;:::i;:::-;11680:44;-1:-1:-1;11769:1:45;11753:12;11680:44;11753:4;:12;:::i;:::-;11752:18;;;;:::i;:::-;11745:25;;:4;:25;:::i;:::-;:30;;11773:2;11745:30;:::i;:::-;11738:37;-1:-1:-1;11789:13:45;11819:4;11806:9;11738:37;11806:2;:9;:::i;:::-;11805:18;;;;:::i;:::-;11789:34;-1:-1:-1;11837:11:45;11876:2;11859:13;11789:34;11859:4;:13;:::i;:::-;11858:20;;;;:::i;:::-;11851:27;;:4;:27;:::i;:::-;11837:41;-1:-1:-1;11899:11:45;11908:2;11899:6;:11;:::i;:::-;11892:18;-1:-1:-1;11946:9:45;11892:18;11946:2;:9;:::i;:::-;11933:10;:6;11942:1;11933:10;:::i;:::-;:22;;;;:::i;:::-;11924:31;-1:-1:-1;12005:4:45;11997:5;11984:9;11991:2;11984:4;:9;:::i;:::-;11977:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;11969:40;-1:-1:-1;12075:6:45;;-1:-1:-1;12110:4:45;-1:-1:-1;12136:21:45;;-1:-1:-1;12160:23:45;;-1:-1:-1;12170:12:45;;-1:-1:-1;12177:5:45;;-1:-1:-1;11969:40:45;12170:12;:::i;:::-;12160:9;:23::i;:::-;12136:47;;12193:22;12226:2;12218:5;:10;:103;;12305:16;12315:5;12305:9;:16::i;:::-;12218:103;;;12272:16;12282:5;12272:9;:16::i;:::-;12250:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;12218:103;12193:128;;12331:20;12360:2;12354:3;:8;:97;;12437:14;12447:3;12437:9;:14::i;:::-;12354:97;;;12406:14;12416:3;12406:9;:14::i;:::-;12384:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;12354:97;12331:120;;12548:11;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12573:7;12587:8;12602:6;12531:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12504:115;;12662:11;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12689:7;12698:8;12708:6;12645:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12629:87;;11135:1588;;;;;;10979:1744;;;;;:::o;742:4147:62:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:62;;;;-1:-1:-1;1787:13:62;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;2753:31;;2787:1;2753:35;;;2752:51;;2909:22;;;;;2537:21;;;3053:16;;;2490:20;;;;2479:32;;;2737:12;3321;;;3317:23;;;;3313:31;;;3380:12;;;;3371:21;;;;3765:1;:15;;3784:1;3764:21;;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;4834:11;;-1:-1:-1;;742:4147:62;;;;;;:::o;7319:2480:45:-;7504:13;7519:20;7541:17;7560:16;7584:11;:38;;;7623:3;7584:43;;;;;;;;;;;;;778:25:124;;766:2;751:18;;632:177;7584:43:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;7666:3;7584:86;;;;;;;;;;;;;778:25:124;;766:2;751:18;;632:177;7584:86:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7503:167;;;;;;;;;;7721:21;7755:8;7745:7;:18;;;;:::i;:::-;8041:35;;;;;8070:4;8041:35;;;11702:74:124;7721:42:45;;-1:-1:-1;8018:20:45;;8041;;;;;;11675:18:124;;8041:35:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8018:58;-1:-1:-1;8086:63:45;:27;;;8114:10;8134:4;8141:7;8086:27;:63::i;:::-;8201:22;8216:7;8201:12;:22;:::i;:::-;8163:35;;;;;8192:4;8163:35;;;11702:74:124;8163:20:45;;;;;;11675:18:124;;8163:35:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;8159:110;;;8244:25;;;;;;;;;;;;;;8159:110;8460:26;;;;8456:1337;;8598:52;:23;;;8622:12;8636:13;8598:23;:52::i;:::-;8767:36;;;;;8797:4;8767:36;;;11702:74:124;8743:21:45;;8767;;;;;;11675:18:124;;8767:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8817:65;;;;;;;;22106:25:124;;;22147:18;;;22140:34;;;22190:18;;;22183:34;;;8743:60:45;;-1:-1:-1;8817:36:45;;;;;;22079:18:124;;8817:65:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9068:7;9052:13;:23;;;;:::i;:::-;9012:36;;;;;9042:4;9012:36;;;11702:74:124;9012:21:45;;;;;;11675:18:124;;9012:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9008:117;;;9101:24;;;;;;;;;;;;;;9008:117;8488:648;8456:1337;;;9481:36;;;;;9511:4;9481:36;;;11702:74:124;9457:21:45;;9481;;;;;;11675:18:124;;9481:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9457:60;-1:-1:-1;9531:59:45;:28;;;9560:5;9575:4;9582:7;9531:28;:59::i;:::-;9648:23;9664:7;9648:13;:23;:::i;:::-;9608:36;;;;;9638:4;9608:36;;;11702:74:124;9608:21:45;;;;;;11675:18:124;;9608:36:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9604:118;;;9697:25;;;;;;;;;;;;;;9604:118;9737:45;:23;;;9761:5;9768:13;9737:23;:45::i;:::-;9142:651;8456:1337;7457:2342;;;;;;7319:2480;;;;:::o;2507:1712:39:-;2669:13;3384;;;;3380:833;;3570:6;;3507:34;3525:15;3507:8;:34;:::i;:::-;3506:53;;;;:::i;:::-;3505:72;;;;:::i;:::-;3496:81;;3727:15;3745:32;3756:12;3770:6;3745:10;:32::i;:::-;3858:22;;;;:13;:22;;;;;:29;3727:50;;-1:-1:-1;3858:29:39;;3853:107;;3907:38;3915:7;3924:12;3938:6;3907:7;:38::i;:::-;4018:40;4029:10;4041:7;4050;4018:10;:40::i;:::-;3399:670;3380:833;;;4156:46;:25;;;4182:10;4194:7;4156:25;:46::i;6192:586::-;6312:23;;;;:13;:23;;;;;:30;;;6307:66;;6351:22;;;;;;;;;;;;;;6307:66;6416:25;6444:23;;;:13;:23;;;;;;;;;6416:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6526:15;:29;6522:77;;;6587:11;;;;6564:35;;;;;1612:14:124;1600:27;;;6564:35:39;;;1582:46:124;1555:18;;6564:35:39;1438:196:124;6522:77:39;6671:41;6682:10;6694:8;6704:7;6671:10;:41::i;:::-;6722:15;;;;:49;;:28;;6751:10;6763:7;6722:28;:49::i;:::-;6253:525;6192:586;;:::o;402:494:63:-;609:69;;;576:19;31912:15:124;;;609:69:63;;;31894:34:124;31964:15;;;31944:18;;;31937:43;31996:18;;;;31989:34;;;609:69:63;;;;;;;;;;31806:18:124;;;;609:69:63;;;;;;;;;632:27;609:69;;;576:112;;-1:-1:-1;;;;576:19:63;;;;:112;;609:69;576:112;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:148;;;;720:7;:73;;;;-1:-1:-1;748:11:63;;:16;;:44;;;779:4;768:24;;;;;;;;;;;;:::i;:::-;720:123;;;;;842:1;821:5;813:26;;;:30;720:123;699:190;;;;;;;32236:2:124;699:190:63;;;32218:21:124;32275:2;32255:18;;;32248:30;32314:22;32294:18;;;32287:50;32354:18;;699:190:63;32034:344:124;699:190:63;530:366;;402:494;;;;:::o;9213:215:39:-;9330:23;;;;:13;:23;;;;;:30;;:41;;9364:7;;9330:23;:41;;9364:7;;9330:41;:::i;:::-;;;;;;;;9381:40;9387:3;9392:8;9402:7;9411:9;;;;;;;;;;;;9381:5;:40::i;8246:734::-;8519:13;8542:16;8552:6;8542:7;:16;:::i;:::-;8535:33;;8562:6;8535:33;:::i;:::-;8519:49;;8644:15;8634:6;8626:15;;:33;8622:68;;;8668:22;;;;;;;;;;;;;;8622:68;8759:144;;;;;;;;8786:4;8759:144;;;;;;8804:11;8759:144;;;;;;8835:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8759:144;;;;;;;;;;;;;;;;;-1:-1:-1;8759:144:39;;;;;;;8733:23;;;:13;:23;;;;;:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8733:170:39;;;;;;;8919:54;;778:25:124;;;8759:144:39;;8919:54;;;;;;751:18:124;8919:54:39;;;;;;;8355:625;8246:734;;;:::o;12941:556:45:-;12995:13;13024:2;13030:1;13024:7;13020:48;;-1:-1:-1;;13047:10:45;;;;;;;;;;;;;;;;;;12941:556::o;13020:48::-;13089:2;13077:9;13122:66;13129:6;;13122:66;;13151:5;;;;:::i;:::-;;-1:-1:-1;13170:7:45;;-1:-1:-1;13175:2:45;13170:7;;:::i;:::-;;;13122:66;;;13197:17;13227:3;13217:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13217:14:45;-1:-1:-1;13197:34:45;-1:-1:-1;13253:3:45;13266:196;13273:7;;13266:196;;13300:5;13304:1;13300;:5;:::i;:::-;13296:9;-1:-1:-1;13319:10:45;13350:7;13355:2;13350;:7;:::i;:::-;13349:14;;13361:2;13349:14;:::i;:::-;13344:19;;:2;:19;:::i;:::-;13333:31;;:2;:31;:::i;:::-;13319:46;;13379:9;13398:4;13391:12;;13379:24;;13427:2;13417:4;13422:1;13417:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;13443:8:45;13449:2;13443:8;;:::i;:::-;;;13282:180;;13266:196;;;-1:-1:-1;13485:4:45;12941:556;-1:-1:-1;;;;12941:556:45:o;9662:208:39:-;9781:23;;;;:13;:23;;;;;:30;;:41;;9815:7;;9781:23;:41;;9815:7;;9781:41;:::i;:::-;;;;-1:-1:-1;9832:31:39;;-1:-1:-1;9838:5:39;9845:8;9855:7;9832:5;:31::i;5155:635:61:-;5286:13;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5307:6;;5286:13;:27;;5307:6;;5286:27;:::i;:::-;;;;-1:-1:-1;;5329:54:61;;;13351:25:124;;;13407:2;13392:18;;13385:34;;;5329:54:61;;;;5364:1;;5344:10;;5329:54;;13324:18:124;5329:54:61;;;;;;;5415:14;;;;:19;:326;;5488:202;;5694:47;5488:202;;;5694:47;5488:42;;;;5694:47;;5488:202;;5552:10;;5592:1;;5616:2;;5640:6;;5668:4;;5488:202;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:253;;;5415:326;;;5453:16;;;;;5415:326;5394:389;;;;;;;20159:2:124;5394:389:61;;;20141:21:124;20198:2;20178:18;;;20171:30;20237:18;20217;;;20210:46;20273:18;;5394:389:61;19957:340:124;5394:389:61;5155:635;;;;:::o;7427:214::-;7533:15;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;7556:6;;7533:15;:29;;7556:6;;7533:29;:::i;:::-;;;;-1:-1:-1;;7578:56:61;;;13351:25:124;;;13407:2;13392:18;;13385:34;;;7619:1:61;;7578:56;;;;7593:10;;7578:56;;13324:18:124;7578:56:61;;;;;;;7427:214;;;:::o;14:154:124:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:315::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;496:9;483:23;515:31;540:5;515:31;:::i;:::-;565:5;617:2;602:18;;;;589:32;;-1:-1:-1;;;312:315:124:o;814:177::-;899:66;892:5;888:78;881:5;878:89;868:117;;981:1;978;971:12;996:245;1054:6;1107:2;1095:9;1086:7;1082:23;1078:32;1075:52;;;1123:1;1120;1113:12;1075:52;1162:9;1149:23;1181:30;1205:5;1181:30;:::i;1639:125::-;1724:14;1717:5;1713:26;1706:5;1703:37;1693:65;;1754:1;1751;1744:12;1769:245;1827:6;1880:2;1868:9;1859:7;1855:23;1851:32;1848:52;;;1896:1;1893;1886:12;1848:52;1935:9;1922:23;1954:30;1978:5;1954:30;:::i;2019:247::-;2078:6;2131:2;2119:9;2110:7;2106:23;2102:32;2099:52;;;2147:1;2144;2137:12;2099:52;2186:9;2173:23;2205:31;2230:5;2205:31;:::i;2271:184::-;2323:77;2320:1;2313:88;2420:4;2417:1;2410:15;2444:4;2441:1;2434:15;2460:334;2531:2;2525:9;2587:2;2577:13;;2592:66;2573:86;2561:99;;2690:18;2675:34;;2711:22;;;2672:62;2669:88;;;2737:18;;:::i;:::-;2773:2;2766:22;2460:334;;-1:-1:-1;2460:334:124:o;2799:183::-;2859:4;2892:18;2884:6;2881:30;2878:56;;;2914:18;;:::i;:::-;-1:-1:-1;2959:1:124;2955:14;2971:4;2951:25;;2799:183::o;2987:662::-;3041:5;3094:3;3087:4;3079:6;3075:17;3071:27;3061:55;;3112:1;3109;3102:12;3061:55;3148:6;3135:20;3174:4;3198:60;3214:43;3254:2;3214:43;:::i;:::-;3198:60;:::i;:::-;3292:15;;;3378:1;3374:10;;;;3362:23;;3358:32;;;3323:12;;;;3402:15;;;3399:35;;;3430:1;3427;3420:12;3399:35;3466:2;3458:6;3454:15;3478:142;3494:6;3489:3;3486:15;3478:142;;;3560:17;;3548:30;;3598:12;;;;3511;;3478:142;;;-1:-1:-1;3638:5:124;2987:662;-1:-1:-1;;;;;;2987:662:124:o;3654:245::-;3702:4;3735:18;3727:6;3724:30;3721:56;;;3757:18;;:::i;:::-;-1:-1:-1;3814:2:124;3802:15;3819:66;3798:88;3888:4;3794:99;;3654:245::o;3904:462::-;3946:5;3999:3;3992:4;3984:6;3980:17;3976:27;3966:55;;4017:1;4014;4007:12;3966:55;4053:6;4040:20;4084:48;4100:31;4128:2;4100:31;:::i;4084:48::-;4157:2;4148:7;4141:19;4203:3;4196:4;4191:2;4183:6;4179:15;4175:26;4172:35;4169:55;;;4220:1;4217;4210:12;4169:55;4285:2;4278:4;4270:6;4266:17;4259:4;4250:7;4246:18;4233:55;4333:1;4308:16;;;4326:4;4304:27;4297:38;;;;4312:7;3904:462;-1:-1:-1;;;3904:462:124:o;4371:1071::-;4525:6;4533;4541;4549;4557;4610:3;4598:9;4589:7;4585:23;4581:33;4578:53;;;4627:1;4624;4617:12;4578:53;4666:9;4653:23;4685:31;4710:5;4685:31;:::i;:::-;4735:5;-1:-1:-1;4792:2:124;4777:18;;4764:32;4805:33;4764:32;4805:33;:::i;:::-;4857:7;-1:-1:-1;4915:2:124;4900:18;;4887:32;4938:18;4968:14;;;4965:34;;;4995:1;4992;4985:12;4965:34;5018:61;5071:7;5062:6;5051:9;5047:22;5018:61;:::i;:::-;5008:71;;5132:2;5121:9;5117:18;5104:32;5088:48;;5161:2;5151:8;5148:16;5145:36;;;5177:1;5174;5167:12;5145:36;5200:63;5255:7;5244:8;5233:9;5229:24;5200:63;:::i;:::-;5190:73;;5316:3;5305:9;5301:19;5288:33;5272:49;;5346:2;5336:8;5333:16;5330:36;;;5362:1;5359;5352:12;5330:36;;5385:51;5428:7;5417:8;5406:9;5402:24;5385:51;:::i;:::-;5375:61;;;4371:1071;;;;;;;;:::o;5447:1057::-;5555:6;5563;5616:2;5604:9;5595:7;5591:23;5587:32;5584:52;;;5632:1;5629;5622:12;5584:52;5672:9;5659:23;5705:18;5697:6;5694:30;5691:50;;;5737:1;5734;5727:12;5691:50;5760:22;;5813:4;5805:13;;5801:27;-1:-1:-1;5791:55:124;;5842:1;5839;5832:12;5791:55;5878:2;5865:16;5900:4;5924:60;5940:43;5980:2;5940:43;:::i;5924:60::-;6018:15;;;6100:1;6096:10;;;;6088:19;;6084:28;;;6049:12;;;;6124:19;;;6121:39;;;6156:1;6153;6146:12;6121:39;6180:11;;;;6200:217;6216:6;6211:3;6208:15;6200:217;;;6296:3;6283:17;6313:31;6338:5;6313:31;:::i;:::-;6357:18;;6233:12;;;;6395;;;;6200:217;;;6436:5;-1:-1:-1;6460:38:124;;-1:-1:-1;6479:18:124;;;6460:38;:::i;:::-;6450:48;;;;;5447:1057;;;;;:::o;6509:180::-;6568:6;6621:2;6609:9;6600:7;6596:23;6592:32;6589:52;;;6637:1;6634;6627:12;6589:52;-1:-1:-1;6660:23:124;;6509:180;-1:-1:-1;6509:180:124:o;6694:258::-;6766:1;6776:113;6790:6;6787:1;6784:13;6776:113;;;6866:11;;;6860:18;6847:11;;;6840:39;6812:2;6805:10;6776:113;;;6907:6;6904:1;6901:13;6898:48;;;-1:-1:-1;;6942:1:124;6924:16;;6917:27;6694:258::o;6957:317::-;6999:3;7037:5;7031:12;7064:6;7059:3;7052:19;7080:63;7136:6;7129:4;7124:3;7120:14;7113:4;7106:5;7102:16;7080:63;:::i;:::-;7188:2;7176:15;7193:66;7172:88;7163:98;;;;7263:4;7159:109;;6957:317;-1:-1:-1;;6957:317:124:o;7279:383::-;7476:2;7465:9;7458:21;7439:4;7502:45;7543:2;7532:9;7528:18;7520:6;7502:45;:::i;:::-;7595:9;7587:6;7583:22;7578:2;7567:9;7563:18;7556:50;7623:33;7649:6;7641;7623:33;:::i;:::-;7615:41;7279:383;-1:-1:-1;;;;;7279:383:124:o;7667:1215::-;7785:6;7793;7846:2;7834:9;7825:7;7821:23;7817:32;7814:52;;;7862:1;7859;7852:12;7814:52;7902:9;7889:23;7931:18;7972:2;7964:6;7961:14;7958:34;;;7988:1;7985;7978:12;7958:34;8026:6;8015:9;8011:22;8001:32;;8071:7;8064:4;8060:2;8056:13;8052:27;8042:55;;8093:1;8090;8083:12;8042:55;8129:2;8116:16;8151:4;8175:60;8191:43;8231:2;8191:43;:::i;8175:60::-;8269:15;;;8351:1;8347:10;;;;8339:19;;8335:28;;;8300:12;;;;8375:19;;;8372:39;;;8407:1;8404;8397:12;8372:39;8431:11;;;;8451:217;8467:6;8462:3;8459:15;8451:217;;;8547:3;8534:17;8564:31;8589:5;8564:31;:::i;:::-;8608:18;;8484:12;;;;8646;;;;8451:217;;;8687:5;-1:-1:-1;;8730:18:124;;8717:32;;-1:-1:-1;;8761:16:124;;;8758:36;;;8790:1;8787;8780:12;8758:36;;8813:63;8868:7;8857:8;8846:9;8842:24;8813:63;:::i;:::-;8803:73;;;7667:1215;;;;;:::o;8887:435::-;8940:3;8978:5;8972:12;9005:6;9000:3;8993:19;9031:4;9060:2;9055:3;9051:12;9044:19;;9097:2;9090:5;9086:14;9118:1;9128:169;9142:6;9139:1;9136:13;9128:169;;;9203:13;;9191:26;;9237:12;;;;9272:15;;;;9164:1;9157:9;9128:169;;;-1:-1:-1;9313:3:124;;8887:435;-1:-1:-1;;;;;8887:435:124:o;9327:261::-;9506:2;9495:9;9488:21;9469:4;9526:56;9578:2;9567:9;9563:18;9555:6;9526:56;:::i;10161:594::-;10256:6;10264;10272;10280;10288;10341:3;10329:9;10320:7;10316:23;10312:33;10309:53;;;10358:1;10355;10348:12;10309:53;10397:9;10384:23;10416:31;10441:5;10416:31;:::i;:::-;10466:5;-1:-1:-1;10523:2:124;10508:18;;10495:32;10536:33;10495:32;10536:33;:::i;:::-;10161:594;;10588:7;;-1:-1:-1;;;;10642:2:124;10627:18;;10614:32;;10693:2;10678:18;;10665:32;;10744:3;10729:19;;;10716:33;;-1:-1:-1;10161:594:124:o;11303:248::-;11371:6;11379;11432:2;11420:9;11411:7;11407:23;11403:32;11400:52;;;11448:1;11445;11438:12;11400:52;-1:-1:-1;;11471:23:124;;;11541:2;11526:18;;;11513:32;;-1:-1:-1;11303:248:124:o;11787:401::-;11869:6;11877;11930:2;11918:9;11909:7;11905:23;11901:32;11898:52;;;11946:1;11943;11936:12;11898:52;11985:9;11972:23;12004:31;12029:5;12004:31;:::i;:::-;12054:5;-1:-1:-1;12111:2:124;12096:18;;12083:32;12124;12083;12124;:::i;:::-;12175:7;12165:17;;;11787:401;;;;;:::o;12193:118::-;12279:5;12272:13;12265:21;12258:5;12255:32;12245:60;;12301:1;12298;12291:12;12316:382;12381:6;12389;12442:2;12430:9;12421:7;12417:23;12413:32;12410:52;;;12458:1;12455;12448:12;12410:52;12497:9;12484:23;12516:31;12541:5;12516:31;:::i;:::-;12566:5;-1:-1:-1;12623:2:124;12608:18;;12595:32;12636:30;12595:32;12636:30;:::i;12703:469::-;12794:6;12802;12810;12863:2;12851:9;12842:7;12838:23;12834:32;12831:52;;;12879:1;12876;12869:12;12831:52;12918:9;12905:23;12937:31;12962:5;12937:31;:::i;:::-;12987:5;-1:-1:-1;13044:2:124;13029:18;;13016:32;13057;13016;13057;:::i;:::-;12703:469;;13108:7;;-1:-1:-1;;;13162:2:124;13147:18;;;;13134:32;;12703:469::o;13680:403::-;13763:6;13771;13824:2;13812:9;13803:7;13799:23;13795:32;13792:52;;;13840:1;13837;13830:12;13792:52;13879:9;13866:23;13898:31;13923:5;13898:31;:::i;:::-;13948:5;-1:-1:-1;14005:2:124;13990:18;;13977:32;14018:33;13977:32;14018:33;:::i;14481:367::-;14544:8;14554:6;14608:3;14601:4;14593:6;14589:17;14585:27;14575:55;;14626:1;14623;14616:12;14575:55;-1:-1:-1;14649:20:124;;14692:18;14681:30;;14678:50;;;14724:1;14721;14714:12;14678:50;14761:4;14753:6;14749:17;14737:29;;14821:3;14814:4;14804:6;14801:1;14797:14;14789:6;14785:27;14781:38;14778:47;14775:67;;;14838:1;14835;14828:12;14775:67;14481:367;;;;;:::o;14853:773::-;14975:6;14983;14991;14999;15052:2;15040:9;15031:7;15027:23;15023:32;15020:52;;;15068:1;15065;15058:12;15020:52;15108:9;15095:23;15137:18;15178:2;15170:6;15167:14;15164:34;;;15194:1;15191;15184:12;15164:34;15233:70;15295:7;15286:6;15275:9;15271:22;15233:70;:::i;:::-;15322:8;;-1:-1:-1;15207:96:124;-1:-1:-1;15410:2:124;15395:18;;15382:32;;-1:-1:-1;15426:16:124;;;15423:36;;;15455:1;15452;15445:12;15423:36;;15494:72;15558:7;15547:8;15536:9;15532:24;15494:72;:::i;:::-;14853:773;;;;-1:-1:-1;15585:8:124;-1:-1:-1;;;;14853:773:124:o;15631:734::-;15735:6;15743;15751;15759;15767;15820:3;15808:9;15799:7;15795:23;15791:33;15788:53;;;15837:1;15834;15827:12;15788:53;15876:9;15863:23;15895:31;15920:5;15895:31;:::i;:::-;15945:5;-1:-1:-1;16002:2:124;15987:18;;15974:32;16015:33;15974:32;16015:33;:::i;:::-;16067:7;-1:-1:-1;16121:2:124;16106:18;;16093:32;;-1:-1:-1;16172:2:124;16157:18;;16144:32;;-1:-1:-1;16227:3:124;16212:19;;16199:33;16255:18;16244:30;;16241:50;;;16287:1;16284;16277:12;16241:50;16310:49;16351:7;16342:6;16331:9;16327:22;16310:49;:::i;17737:184::-;17789:77;17786:1;17779:88;17886:4;17883:1;17876:15;17910:4;17907:1;17900:15;17926:184;17978:77;17975:1;17968:88;18075:4;18072:1;18065:15;18099:4;18096:1;18089:15;18115:125;18155:4;18183:1;18180;18177:8;18174:34;;;18188:18;;:::i;:::-;-1:-1:-1;18225:9:124;;18115:125::o;18245:128::-;18285:3;18316:1;18312:6;18309:1;18306:13;18303:39;;;18322:18;;:::i;:::-;-1:-1:-1;18358:9:124;;18245:128::o;18378:465::-;18635:2;18624:9;18617:21;18598:4;18661:56;18713:2;18702:9;18698:18;18690:6;18661:56;:::i;:::-;18765:9;18757:6;18753:22;18748:2;18737:9;18733:18;18726:50;18793:44;18830:6;18822;18793:44;:::i;18848:850::-;19170:4;19199:42;19280:2;19272:6;19268:15;19257:9;19250:34;19332:2;19324:6;19320:15;19315:2;19304:9;19300:18;19293:43;;19372:3;19367:2;19356:9;19352:18;19345:31;19399:57;19451:3;19440:9;19436:19;19428:6;19399:57;:::i;:::-;19504:9;19496:6;19492:22;19487:2;19476:9;19472:18;19465:50;19538:44;19575:6;19567;19538:44;:::i;:::-;19524:58;;19631:9;19623:6;19619:22;19613:3;19602:9;19598:19;19591:51;19659:33;19685:6;19677;19659:33;:::i;:::-;19651:41;18848:850;-1:-1:-1;;;;;;;;18848:850:124:o;19703:249::-;19772:6;19825:2;19813:9;19804:7;19800:23;19796:32;19793:52;;;19841:1;19838;19831:12;19793:52;19873:9;19867:16;19892:30;19916:5;19892:30;:::i;20302:195::-;20341:3;20372:66;20365:5;20362:77;20359:103;;20442:18;;:::i;:::-;-1:-1:-1;20489:1:124;20478:13;;20302:195::o;20502:232::-;20541:3;20569:14;20610:2;20607:1;20603:10;20640:2;20637:1;20633:10;20671:3;20667:2;20663:12;20658:3;20655:21;20652:47;;;20679:18;;:::i;:::-;20715:13;;20502:232;-1:-1:-1;;;;20502:232:124:o;20739:276::-;20834:6;20887:2;20875:9;20866:7;20862:23;20858:32;20855:52;;;20903:1;20900;20893:12;20855:52;20935:9;20929:16;20954:31;20979:5;20954:31;:::i;21020:879::-;21164:6;21172;21180;21188;21196;21204;21257:3;21245:9;21236:7;21232:23;21228:33;21225:53;;;21274:1;21271;21264:12;21225:53;21306:9;21300:16;21325:31;21350:5;21325:31;:::i;:::-;21425:2;21410:18;;21404:25;21375:5;;-1:-1:-1;21438:33:124;21404:25;21438:33;:::i;:::-;21542:2;21527:18;;21521:25;21490:7;;-1:-1:-1;21555:33:124;21521:25;21555:33;:::i;:::-;21659:2;21644:18;;21638:25;21607:7;;-1:-1:-1;21672:33:124;21638:25;21672:33;:::i;:::-;21776:3;21761:19;;21755:26;21724:7;;-1:-1:-1;21790:32:124;21755:26;21790:32;:::i;:::-;21841:7;21831:17;;;21888:3;21877:9;21873:19;21867:26;21857:36;;21020:879;;;;;;;;:::o;22228:184::-;22298:6;22351:2;22339:9;22330:7;22326:23;22322:32;22319:52;;;22367:1;22364;22357:12;22319:52;-1:-1:-1;22390:16:124;;22228:184;-1:-1:-1;22228:184:124:o;22891:245::-;22958:6;23011:2;22999:9;22990:7;22986:23;22982:32;22979:52;;;23027:1;23024;23017:12;22979:52;23059:9;23053:16;23078:28;23100:5;23078:28;:::i;23141:184::-;23193:77;23190:1;23183:88;23290:4;23287:1;23280:15;23314:4;23311:1;23304:15;23330:195;23369:1;23395:14;23436:2;23433:1;23429:10;23458:3;23448:37;;23465:18;;:::i;:::-;23503:10;;23499:20;;;;;23330:195;-1:-1:-1;;23330:195:124:o;23960:266::-;23999:7;24031:14;24072:2;24069:1;24065:10;24102:2;24099:1;24095:10;24158:3;24154:2;24150:12;24145:3;24142:21;24135:3;24128:11;24121:19;24117:47;24114:73;;;24167:18;;:::i;:::-;24207:13;;23960:266;-1:-1:-1;;;;23960:266:124:o;24567:225::-;24606:4;24635:14;24699:10;;;;24669;;24721:12;;;24718:38;;;24736:18;;:::i;:::-;24773:13;;24567:225;-1:-1:-1;;;24567:225:124:o;24797:584::-;25019:4;25048:42;25129:2;25121:6;25117:15;25106:9;25099:34;25181:2;25173:6;25169:15;25164:2;25153:9;25149:18;25142:43;;25221:6;25216:2;25205:9;25201:18;25194:34;25264:6;25259:2;25248:9;25244:18;25237:34;25308:3;25302;25291:9;25287:19;25280:32;25329:46;25370:3;25359:9;25355:19;25347:6;25329:46;:::i;:::-;25321:54;24797:584;-1:-1:-1;;;;;;;24797:584:124:o;25688:274::-;25817:3;25855:6;25849:13;25871:53;25917:6;25912:3;25905:4;25897:6;25893:17;25871:53;:::i;:::-;25940:16;;;;;25688:274;-1:-1:-1;;25688:274:124:o;26311:120::-;26351:1;26377;26367:35;;26382:18;;:::i;:::-;-1:-1:-1;26416:9:124;;26311:120::o;26436:367::-;26475:3;26510:1;26507;26503:9;26619:1;26551:66;26547:74;26544:1;26540:82;26535:2;26528:10;26524:99;26521:125;;;26626:18;;:::i;:::-;26745:1;26677:66;26673:74;26670:1;26666:82;26662:2;26658:91;26655:117;;;26752:18;;:::i;:::-;-1:-1:-1;;26788:9:124;;26436:367::o;26808:655::-;26847:7;26879:66;26971:1;26968;26964:9;26999:1;26996;26992:9;27044:1;27040:2;27036:10;27033:1;27030:17;27025:2;27021;27017:11;27013:35;27010:61;;;27051:18;;:::i;:::-;27090:66;27182:1;27179;27175:9;27229:1;27225:2;27220:11;27217:1;27213:19;27208:2;27204;27200:11;27196:37;27193:63;;;27236:18;;:::i;:::-;27282:1;27279;27275:9;27265:19;;27329:1;27325:2;27320:11;27317:1;27313:19;27308:2;27304;27300:11;27296:37;27293:63;;;27336:18;;:::i;:::-;27401:1;27397:2;27392:11;27389:1;27385:19;27380:2;27376;27372:11;27368:37;27365:63;;;27408:18;;:::i;:::-;-1:-1:-1;;;27448:9:124;;;;;26808:655;-1:-1:-1;;;26808:655:124:o;27468:308::-;27507:1;27533;27523:35;;27538:18;;:::i;:::-;27655:66;27652:1;27649:73;27580:66;27577:1;27574:73;27570:153;27567:179;;;27726:18;;:::i;:::-;-1:-1:-1;27760:10:124;;27468:308::o;27781:369::-;27820:4;27856:1;27853;27849:9;27965:1;27897:66;27893:74;27890:1;27886:82;27881:2;27874:10;27870:99;27867:125;;;27972:18;;:::i;:::-;28091:1;28023:66;28019:74;28016:1;28012:82;28008:2;28004:91;28001:117;;;28098:18;;:::i;:::-;-1:-1:-1;;28135:9:124;;27781:369::o;28155:112::-;28187:1;28213;28203:35;;28218:18;;:::i;:::-;-1:-1:-1;28252:9:124;;28155:112::o;28272:418::-;28534:3;28529;28522:16;28504:3;28567:6;28561:13;28583:61;28637:6;28633:1;28628:3;28624:11;28617:4;28609:6;28605:17;28583:61;:::i;:::-;28664:16;;;;28682:1;28660:24;;28272:418;-1:-1:-1;;28272:418:124:o;28695:635::-;28775:6;28828:2;28816:9;28807:7;28803:23;28799:32;28796:52;;;28844:1;28841;28834:12;28796:52;28877:9;28871:16;28910:18;28902:6;28899:30;28896:50;;;28942:1;28939;28932:12;28896:50;28965:22;;29018:4;29010:13;;29006:27;-1:-1:-1;28996:55:124;;29047:1;29044;29037:12;28996:55;29076:2;29070:9;29101:48;29117:31;29145:2;29117:31;:::i;29101:48::-;29172:2;29165:5;29158:17;29212:7;29207:2;29202;29198;29194:11;29190:20;29187:33;29184:53;;;29233:1;29230;29223:12;29184:53;29246:54;29297:2;29292;29285:5;29281:14;29276:2;29272;29268:11;29246:54;:::i;29335:1286::-;29913:3;29951:6;29945:13;29967:53;30013:6;30008:3;30001:4;29993:6;29989:17;29967:53;:::i;:::-;30081:3;30042:16;;;30067:18;;;30110:13;;30132:65;30110:13;30184:1;30173:13;;30166:4;30154:17;;30132:65;:::i;:::-;30227:8;30220:5;30216:20;30206:30;;;30255:3;30286:2;30282:1;30278:2;30274:10;30267:22;30320:6;30314:13;30336:62;30389:8;30385:1;30381:2;30377:10;30370:4;30362:6;30358:17;30336:62;:::i;:::-;30458:1;30417:17;;30450:10;;;30443:22;30490:13;;30512:62;30490:13;30561:1;30553:10;;30546:4;30534:17;;30512:62;:::i;:::-;30594:17;30613:1;30590:25;;29335:1286;-1:-1:-1;;;;;;29335:1286:124:o;30626:1000::-;31002:3;31040:6;31034:13;31056:53;31102:6;31097:3;31090:4;31082:6;31078:17;31056:53;:::i;:::-;31170:3;31131:16;;;31156:18;;;31199:13;;31221:65;31199:13;31273:1;31262:13;;31255:4;31243:17;;31221:65;:::i;:::-;31350:13;;31305:20;;;31372:62;31350:13;31421:1;31413:10;;31406:4;31394:17;;31372:62;:::i;:::-;31495:13;;31453:17;;;31517:62;31495:13;31566:1;31558:10;;31551:4;31539:17;;31517:62;:::i;:::-;31599:17;31618:1;31595:25;;30626:1000;-1:-1:-1;;;;;;30626:1000:124:o;32383:273::-;32451:6;32504:2;32492:9;32483:7;32479:23;32475:32;32472:52;;;32520:1;32517;32510:12;32472:52;32552:9;32546:16;32602:4;32595:5;32591:16;32584:5;32581:27;32571:55;;32622:1;32619;32612:12;32661:228;32701:7;32827:1;32759:66;32755:74;32752:1;32749:81;32744:1;32737:9;32730:17;32726:105;32723:131;;;32834:18;;:::i;:::-;-1:-1:-1;32874:9:124;;32661:228::o;32894:204::-;32932:3;32968:4;32965:1;32961:12;33000:4;32997:1;32993:12;33035:3;33029:4;33025:14;33020:3;33017:23;33014:49;;;33043:18;;:::i;:::-;33079:13;;32894:204;-1:-1:-1;;;32894:204:124:o",
    "linkReferences": {},
    "immutableReferences": {
      "41901": [
        {
          "start": 5126,
          "length": 32
        },
        {
          "start": 7570,
          "length": 32
        }
      ],
      "41904": [
        {
          "start": 4514,
          "length": 32
        },
        {
          "start": 10836,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEE_DECIMALS()": "ccf288c6",
    "authority()": "bf7e214f",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchRedeem(uint256[],uint256[])": "e9dc30f3",
    "claimFees(address[],address)": "2f6fa94e",
    "create(address,uint48,uint256)": "b7314ef9",
    "createFeeDiscount()": "06692a37",
    "deploy(address,uint48)": "c6e38a4b",
    "getFee(address)": "b88c9148",
    "getTokenId(address,uint48)": "92593277",
    "getTokenNameAndSymbol(uint256)": "35312c85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "protocolFee()": "b0e21e8a",
    "purchase(address,address,uint256,uint256,uint256)": "6de5b4cd",
    "redeem(uint256,uint256)": "7cbc2373",
    "referrerFees(address)": "c23135dd",
    "rewards(address,address)": "e70b9e27",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuthority(address)": "7a9e5e4b",
    "setCreateFeeDiscount(uint48)": "81690927",
    "setOwner(address)": "13af4035",
    "setProtocolFee(uint48)": "b1e55529",
    "setReferrerFee(uint48)": "0d4dfc21",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenMetadata(uint256)": "6914db60"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocol_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Teller_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"maturesOn\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Bonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"ERC1155BondTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"batchRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFeeDiscount\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenNameAndSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"discount_\",\"type\":\"uint48\"}],\"name\":\"setCreateFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Bond Fixed Term Teller is an implementation of the      Bond Base Teller contract specific to handling user bond transactions      and tokenizing bond markets where purchases vest in a fixed amount of time      (rounded to the day) as ERC1155 tokens.\",\"kind\":\"dev\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"params\":{\"amounts_\":\"Array of amounts of bond tokens to redeem\",\"tokenIds_\":\"Array of bond token ids\"}},\"claimFees(address[],address)\":{\"params\":{\"to_\":\"Address to send fees to\",\"tokens_\":\"Array of tokens to claim fees for\"}},\"create(address,uint48,uint256)\":{\"params\":{\"amount_\":\"Amount of underlying tokens to deposit\",\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token received\",\"_1\":\"Amount of the ERC1155 bond token received\"}},\"deploy(address,uint48)\":{\"details\":\"ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID\",\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token being created\"}},\"getFee(address)\":{\"params\":{\"referrer_\":\"Address of the referrer\"},\"returns\":{\"_0\":\"Fee in basis points (3 decimal places)\"}},\"getTokenId(address,uint48)\":{\"params\":{\"expiry_\":\"Expiry of the bond\",\"payoutToken_\":\"Payout token of bond\"},\"returns\":{\"_0\":\"ID of the bond token\"}},\"getTokenNameAndSymbol(uint256)\":{\"params\":{\"tokenId_\":\"ID of the bond token\"},\"returns\":{\"_0\":\"name        Bond token name\",\"_1\":\"symbol      Bond token symbol\"}},\"purchase(address,address,uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\",\"recipient_\":\"Address of recipient of bond. Allows deposits for other addresses\",\"referrer_\":\"Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee.\"},\"returns\":{\"_0\":\"Amount of payout token to be received from the bond\",\"_1\":\"Timestamp at which the bond token can be redeemed for the underlying token\"}},\"redeem(uint256,uint256)\":{\"params\":{\"amount_\":\"Amount of bond token to redeem\",\"tokenId_\":\"ID of the bond token to redeem\"}},\"setCreateFeeDiscount(uint48)\":{\"details\":\"The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer\",\"params\":{\"discount_\":\"Create Fee Discount in basis points (3 decimal places)\"}},\"setProtocolFee(uint48)\":{\"params\":{\"fee_\":\"Protocol fee in basis points (3 decimal places)\"}},\"setReferrerFee(uint48)\":{\"params\":{\"fee_\":\"Referrer fee in basis points (3 decimal places)\"}}},\"title\":\"Bond Fixed Term Teller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"notice\":\"Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)\"},\"claimFees(address[],address)\":{\"notice\":\"Claim fees accrued by sender in the input tokens and sends them to the provided address\"},\"create(address,uint48,uint256)\":{\"notice\":\"Deposit an ERC20 token and mint a future-dated ERC1155 bond token\"},\"createFeeDiscount()\":{\"notice\":\"'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens.\"},\"deploy(address,uint48)\":{\"notice\":\"\\\"Deploy\\\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID\"},\"getFee(address)\":{\"notice\":\"Get current fee charged by the teller based on the combined protocol and referrer fee\"},\"getTokenId(address,uint48)\":{\"notice\":\"Get token ID from token and expiry\"},\"getTokenNameAndSymbol(uint256)\":{\"notice\":\"Get the token name and symbol for a bond token\"},\"protocolFee()\":{\"notice\":\"Fee paid to protocol in basis points (3 decimal places).\"},\"purchase(address,address,uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified market\"},\"redeem(uint256,uint256)\":{\"notice\":\"Redeem a fixed-term bond token for the underlying token (bond token must have matured)\"},\"referrerFees(address)\":{\"notice\":\"Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3).\"},\"rewards(address,address)\":{\"notice\":\"Fees earned by an address, by token\"},\"setCreateFeeDiscount(uint48)\":{\"notice\":\"Set the discount for creating bond tokens from the base protocol fee\"},\"setProtocolFee(uint48)\":{\"notice\":\"Set protocol feeMust be guardian\"},\"setReferrerFee(uint48)\":{\"notice\":\"Set your fee as a referrer to the protocolFee is set for sending address\"}},\"notice\":\"Bond Fixed Term Teller Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondFixedTermTeller.sol\":\"BondFixedTermTeller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":clones/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a\",\"dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da\",\"dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw\"]},\"src/BondFixedTermTeller.sol\":{\"keccak256\":\"0x888e63a52eb298a1775665a2f8c39703a012154b905bf0851a138dfbd0391472\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://07df4020b91152b0f69491a38debc3a0d0c022f775eeb5295a7c610dae944251\",\"dweb:/ipfs/QmQBgDDe9XNtepCEPsPWCirzyLzi6AjTXhaKqwJMUwGLiM\"]},\"src/bases/BondBaseTeller.sol\":{\"keccak256\":\"0x39335b2245d6f1db888127cb326aa7b052c5009e0f4d6ec5e861e9297d7dae83\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af6d750745c512e8b6b212a822d3f52a25be44c3266b0f951c780319f3eac68a\",\"dweb:/ipfs/QmcyA7vvJvbKmchzo44FDPQk4udmmuWqYj7FKfsBsHr2md\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9\",\"dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/lib/ERC1155.sol\":{\"keccak256\":\"0x894b0d8d8d2ceb9f591dcaafb6a632817048818321c397922a167a6f3f190bd8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c90be4bc11f81414686e72cd1cb4ea8c0ff446b327efb3487292b82afcbbb953\",\"dweb:/ipfs/QmSGPGKxdV8nCekUugyo3PSAgwzXAZSCjGVAMXJLzXkhEC\"]},\"src/lib/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb\",\"dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocol_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "maturesOn",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ERC1155BondTokenCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_DECIMALS",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRedeem"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "createFeeDiscount",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenNameAndSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referrerFees",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "discount_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCreateFeeDiscount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferrerFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "params": {
              "amounts_": "Array of amounts of bond tokens to redeem",
              "tokenIds_": "Array of bond token ids"
            }
          },
          "claimFees(address[],address)": {
            "params": {
              "to_": "Address to send fees to",
              "tokens_": "Array of tokens to claim fees for"
            }
          },
          "create(address,uint48,uint256)": {
            "params": {
              "amount_": "Amount of underlying tokens to deposit",
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token received",
              "_1": "Amount of the ERC1155 bond token received"
            }
          },
          "deploy(address,uint48)": {
            "details": "ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID",
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token being created"
            }
          },
          "getFee(address)": {
            "params": {
              "referrer_": "Address of the referrer"
            },
            "returns": {
              "_0": "Fee in basis points (3 decimal places)"
            }
          },
          "getTokenId(address,uint48)": {
            "params": {
              "expiry_": "Expiry of the bond",
              "payoutToken_": "Payout token of bond"
            },
            "returns": {
              "_0": "ID of the bond token"
            }
          },
          "getTokenNameAndSymbol(uint256)": {
            "params": {
              "tokenId_": "ID of the bond token"
            },
            "returns": {
              "_0": "name        Bond token name",
              "_1": "symbol      Bond token symbol"
            }
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning",
              "recipient_": "Address of recipient of bond. Allows deposits for other addresses",
              "referrer_": "Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee."
            },
            "returns": {
              "_0": "Amount of payout token to be received from the bond",
              "_1": "Timestamp at which the bond token can be redeemed for the underlying token"
            }
          },
          "redeem(uint256,uint256)": {
            "params": {
              "amount_": "Amount of bond token to redeem",
              "tokenId_": "ID of the bond token to redeem"
            }
          },
          "setCreateFeeDiscount(uint48)": {
            "details": "The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer",
            "params": {
              "discount_": "Create Fee Discount in basis points (3 decimal places)"
            }
          },
          "setProtocolFee(uint48)": {
            "params": {
              "fee_": "Protocol fee in basis points (3 decimal places)"
            }
          },
          "setReferrerFee(uint48)": {
            "params": {
              "fee_": "Referrer fee in basis points (3 decimal places)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "notice": "Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)"
          },
          "claimFees(address[],address)": {
            "notice": "Claim fees accrued by sender in the input tokens and sends them to the provided address"
          },
          "create(address,uint48,uint256)": {
            "notice": "Deposit an ERC20 token and mint a future-dated ERC1155 bond token"
          },
          "createFeeDiscount()": {
            "notice": "'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens."
          },
          "deploy(address,uint48)": {
            "notice": "\"Deploy\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID"
          },
          "getFee(address)": {
            "notice": "Get current fee charged by the teller based on the combined protocol and referrer fee"
          },
          "getTokenId(address,uint48)": {
            "notice": "Get token ID from token and expiry"
          },
          "getTokenNameAndSymbol(uint256)": {
            "notice": "Get the token name and symbol for a bond token"
          },
          "protocolFee()": {
            "notice": "Fee paid to protocol in basis points (3 decimal places)."
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified market"
          },
          "redeem(uint256,uint256)": {
            "notice": "Redeem a fixed-term bond token for the underlying token (bond token must have matured)"
          },
          "referrerFees(address)": {
            "notice": "Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3)."
          },
          "rewards(address,address)": {
            "notice": "Fees earned by an address, by token"
          },
          "setCreateFeeDiscount(uint48)": {
            "notice": "Set the discount for creating bond tokens from the base protocol fee"
          },
          "setProtocolFee(uint48)": {
            "notice": "Set protocol feeMust be guardian"
          },
          "setReferrerFee(uint48)": {
            "notice": "Set your fee as a referrer to the protocolFee is set for sending address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "clones/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondFixedTermTeller.sol": "BondFixedTermTeller"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a",
        "urls": [
          "bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a",
          "dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xedbae9363161b25063b9653299e38f29481f512de88011613f514d23cd6817ee",
        "urls": [
          "bzz-raw://dc9064d864e7ad39df890d80a4c49e9838e6f9a672623bb41ef7cfb615eb99da",
          "dweb:/ipfs/QmQpc9qMVj6hM2cMpJFT76kpxjE6yaqBKsRFmbh5eNNtRw"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/BondFixedTermTeller.sol": {
        "keccak256": "0x888e63a52eb298a1775665a2f8c39703a012154b905bf0851a138dfbd0391472",
        "urls": [
          "bzz-raw://07df4020b91152b0f69491a38debc3a0d0c022f775eeb5295a7c610dae944251",
          "dweb:/ipfs/QmQBgDDe9XNtepCEPsPWCirzyLzi6AjTXhaKqwJMUwGLiM"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/bases/BondBaseTeller.sol": {
        "keccak256": "0x39335b2245d6f1db888127cb326aa7b052c5009e0f4d6ec5e861e9297d7dae83",
        "urls": [
          "bzz-raw://af6d750745c512e8b6b212a822d3f52a25be44c3266b0f951c780319f3eac68a",
          "dweb:/ipfs/QmcyA7vvJvbKmchzo44FDPQk4udmmuWqYj7FKfsBsHr2md"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746",
        "urls": [
          "bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9",
          "dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/lib/ERC1155.sol": {
        "keccak256": "0x894b0d8d8d2ceb9f591dcaafb6a632817048818321c397922a167a6f3f190bd8",
        "urls": [
          "bzz-raw://c90be4bc11f81414686e72cd1cb4ea8c0ff446b327efb3487292b82afcbbb953",
          "dweb:/ipfs/QmSGPGKxdV8nCekUugyo3PSAgwzXAZSCjGVAMXJLzXkhEC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20",
        "urls": [
          "bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb",
          "dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondFixedTermTeller.sol",
    "id": 35215,
    "exportedSymbols": {
      "Authority": [
        29632
      ],
      "BondBaseTeller": [
        42750
      ],
      "BondFixedTermTeller": [
        35214
      ],
      "ERC1155": [
        45270
      ],
      "ERC20": [
        30350
      ],
      "FullMath": [
        45487
      ],
      "IBondAggregator": [
        42920
      ],
      "IBondFixedTermTeller": [
        43695
      ],
      "TransferHelper": [
        45612
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:10731:39",
    "nodes": [
      {
        "id": 34601,
        "nodeType": "PragmaDirective",
        "src": "46:23:39",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 34603,
        "nodeType": "ImportDirective",
        "src": "71:47:39",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35215,
        "sourceUnit": 30351,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34602,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30350,
              "src": "79:5:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34607,
        "nodeType": "ImportDirective",
        "src": "120:86:39",
        "nodes": [],
        "absolutePath": "src/bases/BondBaseTeller.sol",
        "file": "./bases/BondBaseTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35215,
        "sourceUnit": 42751,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34604,
              "name": "BondBaseTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42750,
              "src": "128:14:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34605,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42920,
              "src": "144:15:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34606,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29632,
              "src": "161:9:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34609,
        "nodeType": "ImportDirective",
        "src": "207:75:39",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondFixedTermTeller.sol",
        "file": "./interfaces/IBondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35215,
        "sourceUnit": 43696,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34608,
              "name": "IBondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43695,
              "src": "215:20:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34611,
        "nodeType": "ImportDirective",
        "src": "284:56:39",
        "nodes": [],
        "absolutePath": "src/lib/TransferHelper.sol",
        "file": "./lib/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35215,
        "sourceUnit": 45613,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34610,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45612,
              "src": "292:14:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34613,
        "nodeType": "ImportDirective",
        "src": "341:44:39",
        "nodes": [],
        "absolutePath": "src/lib/FullMath.sol",
        "file": "./lib/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35215,
        "sourceUnit": 45488,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34612,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45487,
              "src": "349:8:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34615,
        "nodeType": "ImportDirective",
        "src": "386:42:39",
        "nodes": [],
        "absolutePath": "src/lib/ERC1155.sol",
        "file": "./lib/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35215,
        "sourceUnit": 45305,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34614,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45270,
              "src": "394:7:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35214,
        "nodeType": "ContractDefinition",
        "src": "1421:9355:39",
        "nodes": [
          {
            "id": 34626,
            "nodeType": "UsingForDirective",
            "src": "1505:31:39",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 34623,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45612,
              "src": "1511:14:39"
            },
            "typeName": {
              "id": 34625,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34624,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30350,
                "src": "1530:5:39"
              },
              "referencedDeclaration": 30350,
              "src": "1530:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$30350",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 34629,
            "nodeType": "UsingForDirective",
            "src": "1541:27:39",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 34627,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45487,
              "src": "1547:8:39"
            },
            "typeName": {
              "id": 34628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1560:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 34638,
            "nodeType": "EventDefinition",
            "src": "1613:96:39",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27",
            "name": "ERC1155BondTokenCreated",
            "nameLocation": "1619:23:39",
            "parameters": {
              "id": 34637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1651:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34638,
                  "src": "1643:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34634,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1674:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34638,
                  "src": "1660:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 34633,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34632,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "1660:5:39"
                    },
                    "referencedDeclaration": 30350,
                    "src": "1660:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34636,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1701:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34638,
                  "src": "1686:21:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 34635,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1642:66:39"
            }
          },
          {
            "id": 34643,
            "nodeType": "VariableDeclaration",
            "src": "1764:54:39",
            "nodes": [],
            "constant": false,
            "functionSelector": "6914db60",
            "mutability": "mutable",
            "name": "tokenMetadata",
            "nameLocation": "1805:13:39",
            "scope": 35214,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
              "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
            },
            "typeName": {
              "id": 34642,
              "keyType": {
                "id": 34639,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1772:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1764:33:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
              },
              "valueType": {
                "id": 34641,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 34640,
                  "name": "TokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43629,
                  "src": "1783:13:39"
                },
                "referencedDeclaration": 43629,
                "src": "1783:13:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage_ptr",
                  "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 34663,
            "nodeType": "FunctionDefinition",
            "src": "1897:203:39",
            "nodes": [],
            "body": {
              "id": 34662,
              "nodeType": "Block",
              "src": "2098:2:39",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34656,
                    "name": "protocol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34645,
                    "src": "2051:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 34657,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34648,
                    "src": "2062:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 34658,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34650,
                    "src": "2075:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 34659,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34653,
                    "src": "2086:10:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 34660,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34655,
                  "name": "BondBaseTeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42750,
                  "src": "2036:14:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2036:61:39"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34645,
                  "mutability": "mutable",
                  "name": "protocol_",
                  "nameLocation": "1926:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34663,
                  "src": "1918:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34648,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1961:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34663,
                  "src": "1945:27:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 34647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34646,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42920,
                      "src": "1945:15:39"
                    },
                    "referencedDeclaration": 42920,
                    "src": "1945:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34650,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1990:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34663,
                  "src": "1982:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34653,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "2019:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34663,
                  "src": "2009:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$29632",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 34652,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34651,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29632,
                      "src": "2009:9:39"
                    },
                    "referencedDeclaration": 29632,
                    "src": "2009:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:127:39"
            },
            "returnParameters": {
              "id": 34661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2098:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34741,
            "nodeType": "FunctionDefinition",
            "src": "2507:1712:39",
            "nodes": [],
            "body": {
              "id": 34740,
              "nodeType": "Block",
              "src": "2684:1535:39",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 34681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34679,
                      "name": "vesting_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34673,
                      "src": "3384:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3396:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3384:13:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34738,
                    "nodeType": "Block",
                    "src": "4075:138:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34734,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34666,
                              "src": "4182:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34735,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34668,
                              "src": "4194:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 34731,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34671,
                              "src": "4156:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 34733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45611,
                            "src": "4156:25:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$30350_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$30350_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 34736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4156:46:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34737,
                        "nodeType": "ExpressionStatement",
                        "src": "4156:46:39"
                      }
                    ]
                  },
                  "id": 34739,
                  "nodeType": "IfStatement",
                  "src": "3380:833:39",
                  "trueBody": {
                    "id": 34730,
                    "nodeType": "Block",
                    "src": "3399:670:39",
                    "statements": [
                      {
                        "expression": {
                          "id": 34702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 34682,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34677,
                            "src": "3496:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 34701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  "id": 34695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        },
                                        "id": 34689,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 34683,
                                          "name": "vesting_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34673,
                                          "src": "3507:8:39",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 34686,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3525:5:39",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 34687,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3525:15:39",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 34685,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3518:6:39",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint48_$",
                                              "typeString": "type(uint48)"
                                            },
                                            "typeName": {
                                              "id": 34684,
                                              "name": "uint48",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3518:6:39",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 34688,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3518:23:39",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "src": "3507:34:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      }
                                    ],
                                    "id": 34690,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3506:36:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 34693,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3552:6:39",
                                        "subdenomination": "days",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        }
                                      ],
                                      "id": 34692,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3545:6:39",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint48_$",
                                        "typeString": "type(uint48)"
                                      },
                                      "typeName": {
                                        "id": 34691,
                                        "name": "uint48",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3545:6:39",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 34694,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3545:14:39",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "3506:53:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "id": 34696,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3505:55:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 34699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3570:6:39",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  }
                                ],
                                "id": 34698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3563:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 34697,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3563:6:39",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3563:14:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "3505:72:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "3496:81:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 34703,
                        "nodeType": "ExpressionStatement",
                        "src": "3496:81:39"
                      },
                      {
                        "assignments": [
                          34705
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34705,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3735:7:39",
                            "nodeType": "VariableDeclaration",
                            "scope": 34730,
                            "src": "3727:15:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34704,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3727:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34710,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 34707,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34671,
                              "src": "3756:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 34708,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34677,
                              "src": "3770:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 34706,
                            "name": "getTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35179,
                            "src": "3745:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$30350_$_t_uint48_$returns$_t_uint256_$",
                              "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                            }
                          },
                          "id": 34709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3745:32:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3727:50:39"
                      },
                      {
                        "condition": {
                          "id": 34715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3857:30:39",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 34711,
                                "name": "tokenMetadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34643,
                                "src": "3858:13:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                                  "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                                }
                              },
                              "id": 34713,
                              "indexExpression": {
                                "id": 34712,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34705,
                                "src": "3872:7:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3858:22:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                                "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                              }
                            },
                            "id": 34714,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43619,
                            "src": "3858:29:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 34723,
                        "nodeType": "IfStatement",
                        "src": "3853:107:39",
                        "trueBody": {
                          "id": 34722,
                          "nodeType": "Block",
                          "src": "3889:71:39",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 34717,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34705,
                                    "src": "3915:7:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 34718,
                                    "name": "payoutToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34671,
                                    "src": "3924:12:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$30350",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "id": 34719,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34677,
                                    "src": "3938:6:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$30350",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  ],
                                  "id": 34716,
                                  "name": "_deploy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35094,
                                  "src": "3907:7:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                                    "typeString": "function (uint256,contract ERC20,uint48)"
                                  }
                                },
                                "id": 34720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3907:38:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 34721,
                              "nodeType": "ExpressionStatement",
                              "src": "3907:38:39"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34725,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34666,
                              "src": "4029:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34726,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34705,
                              "src": "4041:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34727,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34668,
                              "src": "4050:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34724,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35122,
                            "src": "4018:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 34728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4018:40:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34729,
                        "nodeType": "ExpressionStatement",
                        "src": "4018:40:39"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              42414
            ],
            "documentation": {
              "id": 34664,
              "nodeType": "StructuredDocumentation",
              "src": "2148:354:39",
              "text": "@notice             Handle payout to recipient\n @param recipient_   Address to receive payout\n @param payout_      Amount of payoutToken to be paid\n @param payoutToken_   Token to be paid out\n @param vesting_     Amount of time to vest from current timestamp\n @return expiry      Timestamp when the payout will vest"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handlePayout",
            "nameLocation": "2516:13:39",
            "overrides": {
              "id": 34675,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2651:8:39"
            },
            "parameters": {
              "id": 34674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34666,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nameLocation": "2547:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34741,
                  "src": "2539:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2539:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34668,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "2575:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34741,
                  "src": "2567:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34671,
                  "mutability": "mutable",
                  "name": "payoutToken_",
                  "nameLocation": "2598:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34741,
                  "src": "2592:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 34670,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34669,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "2592:5:39"
                    },
                    "referencedDeclaration": 30350,
                    "src": "2592:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34673,
                  "mutability": "mutable",
                  "name": "vesting_",
                  "nameLocation": "2627:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34741,
                  "src": "2620:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 34672,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2620:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2529:112:39"
            },
            "returnParameters": {
              "id": 34678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34677,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "2676:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34741,
                  "src": "2669:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 34676,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2668:15:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34884,
            "nodeType": "FunctionDefinition",
            "src": "4312:1834:39",
            "nodes": [],
            "body": {
              "id": 34883,
              "nodeType": "Block",
              "src": "4468:1678:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34760,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "4639:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 34883,
                      "src": "4632:13:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 34759,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "4632:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34769,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 34768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 34765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34763,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34747,
                            "src": "4655:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 34764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4665:6:39",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4655:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4648:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 34761,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "4648:6:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4648:24:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 34767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4675:6:39",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4648:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4632:49:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34770,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34760,
                      "src": "4739:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 34771,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4748:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 34772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4748:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4739:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34777,
                  "nodeType": "IfStatement",
                  "src": "4735:59:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34774,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "4772:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4772:22:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34776,
                    "nodeType": "RevertStatement",
                    "src": "4765:29:39"
                  }
                },
                {
                  "assignments": [
                    34779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34779,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "4813:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 34883,
                      "src": "4805:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4805:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34784,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34781,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34745,
                        "src": "4834:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 34782,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34760,
                        "src": "4847:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 34780,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35179,
                      "src": "4823:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$30350_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 34783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:31:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4805:49:39"
                },
                {
                  "condition": {
                    "id": 34789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4930:30:39",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 34785,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34643,
                          "src": "4931:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 34787,
                        "indexExpression": {
                          "id": 34786,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34779,
                          "src": "4945:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4931:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 34788,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43619,
                      "src": "4931:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34795,
                  "nodeType": "IfStatement",
                  "src": "4926:88:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 34791,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34745,
                          "src": "4994:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 34792,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34760,
                          "src": "5007:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34790,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41863,
                        "src": "4969:24:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 34793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4969:45:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34794,
                    "nodeType": "RevertStatement",
                    "src": "4962:52:39"
                  }
                },
                {
                  "assignments": [
                    34797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34797,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "5222:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 34883,
                      "src": "5214:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34796,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5214:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34805,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34802,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5265:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$35214",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$35214",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 34801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5257:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34800,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5257:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5257:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34798,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34745,
                        "src": "5235:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 34799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29986,
                      "src": "5235:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5235:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5214:57:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5310:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5310:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34813,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5330:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$35214",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$35214",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 34812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5322:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5322:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5322:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34815,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34749,
                        "src": "5337:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34806,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34745,
                        "src": "5281:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 34808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45553,
                      "src": "5281:28:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$30350_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$30350_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 34816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:64:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34817,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:64:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 34822,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5389:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$35214",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$35214",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 34821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5381:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34820,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5381:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5381:13:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 34818,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34745,
                          "src": "5359:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 34819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29986,
                        "src": "5359:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 34824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5359:36:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 34825,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34797,
                        "src": "5398:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 34826,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34749,
                        "src": "5411:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5398:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5359:59:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34832,
                  "nodeType": "IfStatement",
                  "src": "5355:109:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34829,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41865,
                        "src": "5439:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5439:25:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34831,
                    "nodeType": "RevertStatement",
                    "src": "5432:32:39"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 34835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34833,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41885,
                      "src": "5605:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 34834,
                      "name": "createFeeDiscount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41888,
                      "src": "5619:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "5605:31:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34881,
                    "nodeType": "Block",
                    "src": "5999:141:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 34871,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6060:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6060:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34873,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34779,
                              "src": "6072:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34874,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34749,
                              "src": "6081:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34870,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35122,
                            "src": "6049:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 34875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6049:40:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34876,
                        "nodeType": "ExpressionStatement",
                        "src": "6049:40:39"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 34877,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34779,
                              "src": "6112:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34878,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34749,
                              "src": "6121:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 34879,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6111:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 34758,
                        "id": 34880,
                        "nodeType": "Return",
                        "src": "6104:25:39"
                      }
                    ]
                  },
                  "id": 34882,
                  "nodeType": "IfStatement",
                  "src": "5601:539:39",
                  "trueBody": {
                    "id": 34869,
                    "nodeType": "Block",
                    "src": "5638:355:39",
                    "statements": [
                      {
                        "assignments": [
                          34837
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34837,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "5696:9:39",
                            "nodeType": "VariableDeclaration",
                            "scope": 34869,
                            "src": "5688:17:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34836,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5688:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34845,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 34842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 34840,
                                "name": "protocolFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41885,
                                "src": "5723:11:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 34841,
                                "name": "createFeeDiscount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41888,
                                "src": "5737:17:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "src": "5723:31:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "id": 34843,
                              "name": "FEE_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41891,
                              "src": "5756:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "id": 34838,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34749,
                              "src": "5708:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 34839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45442,
                            "src": "5708:14:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 34844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5708:61:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5688:81:39"
                      },
                      {
                        "expression": {
                          "id": 34852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 34846,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41899,
                                "src": "5783:7:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_ERC20_$30350_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract ERC20 => uint256))"
                                }
                              },
                              "id": 34849,
                              "indexExpression": {
                                "id": 34847,
                                "name": "_protocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41901,
                                "src": "5791:9:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5783:18:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$30350_$_t_uint256_$",
                                "typeString": "mapping(contract ERC20 => uint256)"
                              }
                            },
                            "id": 34850,
                            "indexExpression": {
                              "id": 34848,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34745,
                              "src": "5802:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5783:31:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 34851,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34837,
                            "src": "5818:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5783:44:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34853,
                        "nodeType": "ExpressionStatement",
                        "src": "5783:44:39"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 34855,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5889:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5889:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34857,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34779,
                              "src": "5901:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 34860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 34858,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34749,
                                "src": "5910:7:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 34859,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34837,
                                "src": "5920:9:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5910:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34854,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35122,
                            "src": "5878:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 34861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5878:52:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34862,
                        "nodeType": "ExpressionStatement",
                        "src": "5878:52:39"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 34863,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34779,
                              "src": "5953:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 34866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 34864,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34749,
                                "src": "5962:7:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 34865,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34837,
                                "src": "5972:9:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5962:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 34867,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5952:30:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 34758,
                        "id": 34868,
                        "nodeType": "Return",
                        "src": "5945:37:39"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              43644
            ],
            "documentation": {
              "id": 34742,
              "nodeType": "StructuredDocumentation",
              "src": "4271:36:39",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "b7314ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34752,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "4428:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4428:12:39"
              }
            ],
            "name": "create",
            "nameLocation": "4321:6:39",
            "overrides": {
              "id": 34751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4419:8:39"
            },
            "parameters": {
              "id": 34750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34745,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "4343:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34884,
                  "src": "4337:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 34744,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34743,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "4337:5:39"
                    },
                    "referencedDeclaration": 30350,
                    "src": "4337:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34747,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "4371:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34884,
                  "src": "4364:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 34746,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34749,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4396:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34884,
                  "src": "4388:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4327:82:39"
            },
            "returnParameters": {
              "id": 34758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34884,
                  "src": "4450:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34884,
                  "src": "4459:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4459:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4449:18:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34936,
            "nodeType": "FunctionDefinition",
            "src": "6192:586:39",
            "nodes": [],
            "body": {
              "id": 34935,
              "nodeType": "Block",
              "src": "6253:525:39",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 34895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6311:31:39",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 34891,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34643,
                          "src": "6312:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 34893,
                        "indexExpression": {
                          "id": 34892,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34886,
                          "src": "6326:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6312:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 34894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43619,
                      "src": "6312:30:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34899,
                  "nodeType": "IfStatement",
                  "src": "6307:66:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34896,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "6351:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6351:22:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34898,
                    "nodeType": "RevertStatement",
                    "src": "6344:29:39"
                  }
                },
                {
                  "assignments": [
                    34902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34902,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "6437:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 34935,
                      "src": "6416:25:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 34901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34900,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43629,
                          "src": "6416:13:39"
                        },
                        "referencedDeclaration": 43629,
                        "src": "6416:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34906,
                  "initialValue": {
                    "baseExpression": {
                      "id": 34903,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34643,
                      "src": "6444:13:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 34905,
                    "indexExpression": {
                      "id": 34904,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34886,
                      "src": "6458:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6444:23:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6416:51:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34907,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6526:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 34908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6526:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 34909,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34902,
                        "src": "6544:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                        }
                      },
                      "id": 34910,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43626,
                      "src": "6544:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "6526:29:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34917,
                  "nodeType": "IfStatement",
                  "src": "6522:77:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 34913,
                            "name": "meta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34902,
                            "src": "6587:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                              "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                            }
                          },
                          "id": 34914,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43626,
                          "src": "6587:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 34912,
                        "name": "Teller_TokenNotMatured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41854,
                        "src": "6564:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
                          "typeString": "function (uint48) pure"
                        }
                      },
                      "id": 34915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6564:35:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34916,
                    "nodeType": "RevertStatement",
                    "src": "6557:42:39"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34919,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6682:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6682:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34921,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34886,
                        "src": "6694:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34922,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34888,
                        "src": "6704:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34918,
                      "name": "_burnToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35146,
                      "src": "6671:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 34923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6671:41:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34924,
                  "nodeType": "ExpressionStatement",
                  "src": "6671:41:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34930,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6751:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6751:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34932,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34888,
                        "src": "6763:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 34925,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34902,
                          "src": "6722:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 34928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43622,
                        "src": "6722:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 34929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45611,
                      "src": "6722:28:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$30350_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$30350_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 34933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6722:49:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34934,
                  "nodeType": "ExpressionStatement",
                  "src": "6722:49:39"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_redeem",
            "nameLocation": "6201:7:39",
            "parameters": {
              "id": 34889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34886,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6217:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34936,
                  "src": "6209:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6209:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34888,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6235:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34936,
                  "src": "6227:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6227:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6208:35:39"
            },
            "returnParameters": {
              "id": 34890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6253:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34953,
            "nodeType": "FunctionDefinition",
            "src": "6825:123:39",
            "nodes": [],
            "body": {
              "id": 34952,
              "nodeType": "Block",
              "src": "6905:43:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34948,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34939,
                        "src": "6923:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34949,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34941,
                        "src": "6933:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34947,
                      "name": "_redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34936,
                      "src": "6915:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6915:26:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34951,
                  "nodeType": "ExpressionStatement",
                  "src": "6915:26:39"
                }
              ]
            },
            "baseFunctions": [
              43663
            ],
            "documentation": {
              "id": 34937,
              "nodeType": "StructuredDocumentation",
              "src": "6784:36:39",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "7cbc2373",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34945,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34944,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "6892:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "6892:12:39"
              }
            ],
            "name": "redeem",
            "nameLocation": "6834:6:39",
            "overrides": {
              "id": 34943,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6883:8:39"
            },
            "parameters": {
              "id": 34942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34939,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6849:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34953,
                  "src": "6841:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34941,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6867:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 34953,
                  "src": "6859:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6840:35:39"
            },
            "returnParameters": {
              "id": 34946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6905:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35000,
            "nodeType": "FunctionDefinition",
            "src": "6995:351:39",
            "nodes": [],
            "body": {
              "id": 34999,
              "nodeType": "Block",
              "src": "7134:212:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34967,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7152:3:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 34999,
                      "src": "7144:11:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34966,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7144:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34970,
                  "initialValue": {
                    "expression": {
                      "id": 34968,
                      "name": "tokenIds_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34957,
                      "src": "7158:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 34969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7158:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7144:30:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34971,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34967,
                      "src": "7188:3:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 34972,
                        "name": "amounts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34960,
                        "src": "7195:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 34973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7195:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7188:22:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34978,
                  "nodeType": "IfStatement",
                  "src": "7184:57:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34975,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "7219:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7219:22:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34977,
                    "nodeType": "RevertStatement",
                    "src": "7212:29:39"
                  }
                },
                {
                  "body": {
                    "id": 34997,
                    "nodeType": "Block",
                    "src": "7281:59:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 34989,
                                "name": "tokenIds_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34957,
                                "src": "7303:9:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 34991,
                              "indexExpression": {
                                "id": 34990,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34980,
                                "src": "7313:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7303:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 34992,
                                "name": "amounts_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34960,
                                "src": "7317:8:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 34994,
                              "indexExpression": {
                                "id": 34993,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34980,
                                "src": "7326:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7317:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34988,
                            "name": "_redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34936,
                            "src": "7295:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 34995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7295:34:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34996,
                        "nodeType": "ExpressionStatement",
                        "src": "7295:34:39"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34982,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34980,
                      "src": "7267:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 34983,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34967,
                      "src": "7271:3:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7267:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34998,
                  "initializationExpression": {
                    "assignments": [
                      34980
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 34980,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7264:1:39",
                        "nodeType": "VariableDeclaration",
                        "scope": 34998,
                        "src": "7256:9:39",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 34979,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7256:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 34981,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7256:9:39"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 34986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7276:3:39",
                      "subExpression": {
                        "id": 34985,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34980,
                        "src": "7278:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34987,
                    "nodeType": "ExpressionStatement",
                    "src": "7276:3:39"
                  },
                  "nodeType": "ForStatement",
                  "src": "7251:89:39"
                }
              ]
            },
            "baseFunctions": [
              43673
            ],
            "documentation": {
              "id": 34954,
              "nodeType": "StructuredDocumentation",
              "src": "6954:36:39",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "e9dc30f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34963,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "7117:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "7117:12:39"
              }
            ],
            "name": "batchRedeem",
            "nameLocation": "7004:11:39",
            "overrides": {
              "id": 34962,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7100:8:39"
            },
            "parameters": {
              "id": 34961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34957,
                  "mutability": "mutable",
                  "name": "tokenIds_",
                  "nameLocation": "7035:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35000,
                  "src": "7016:28:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34955,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7016:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34956,
                    "nodeType": "ArrayTypeName",
                    "src": "7016:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34960,
                  "mutability": "mutable",
                  "name": "amounts_",
                  "nameLocation": "7065:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35000,
                  "src": "7046:27:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34958,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7046:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34959,
                    "nodeType": "ArrayTypeName",
                    "src": "7046:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7015:59:39"
            },
            "returnParameters": {
              "id": 34965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7134:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35037,
            "nodeType": "FunctionDefinition",
            "src": "7439:386:39",
            "nodes": [],
            "body": {
              "id": 35036,
              "nodeType": "Block",
              "src": "7575:250:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35015,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "7593:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 35036,
                      "src": "7585:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35014,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7585:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35020,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35017,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35004,
                        "src": "7614:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 35018,
                        "name": "expiry_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35006,
                        "src": "7627:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 35016,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35179,
                      "src": "7603:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$30350_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 35019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7603:32:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7585:50:39"
                },
                {
                  "condition": {
                    "id": 35025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7700:30:39",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 35021,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34643,
                          "src": "7701:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 35023,
                        "indexExpression": {
                          "id": 35022,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35015,
                          "src": "7715:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7701:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 35024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43619,
                      "src": "7701:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35033,
                  "nodeType": "IfStatement",
                  "src": "7696:99:39",
                  "trueBody": {
                    "id": 35032,
                    "nodeType": "Block",
                    "src": "7732:63:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35027,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35015,
                              "src": "7754:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 35028,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35004,
                              "src": "7763:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 35029,
                              "name": "expiry_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35006,
                              "src": "7776:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$30350",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 35026,
                            "name": "_deploy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35094,
                            "src": "7746:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256,contract ERC20,uint48)"
                            }
                          },
                          "id": 35030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7746:38:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35031,
                        "nodeType": "ExpressionStatement",
                        "src": "7746:38:39"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 35034,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35015,
                    "src": "7811:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35013,
                  "id": 35035,
                  "nodeType": "Return",
                  "src": "7804:14:39"
                }
              ]
            },
            "baseFunctions": [
              43655
            ],
            "documentation": {
              "id": 35001,
              "nodeType": "StructuredDocumentation",
              "src": "7398:36:39",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "c6e38a4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35010,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35009,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30375,
                  "src": "7532:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "7532:12:39"
              }
            ],
            "name": "deploy",
            "nameLocation": "7448:6:39",
            "overrides": {
              "id": 35008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7515:8:39"
            },
            "parameters": {
              "id": 35007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35004,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "7461:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35037,
                  "src": "7455:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 35003,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35002,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "7455:5:39"
                    },
                    "referencedDeclaration": 30350,
                    "src": "7455:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35006,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "7481:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35037,
                  "src": "7474:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 35005,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7474:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7454:35:39"
            },
            "returnParameters": {
              "id": 35013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35037,
                  "src": "7562:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7562:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7561:9:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35094,
            "nodeType": "FunctionDefinition",
            "src": "8246:734:39",
            "nodes": [],
            "body": {
              "id": 35093,
              "nodeType": "Block",
              "src": "8355:625:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35049,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "8526:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 35093,
                      "src": "8519:13:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 35048,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8519:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35058,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 35057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 35054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35052,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35045,
                            "src": "8542:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 35053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8552:6:39",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "8542:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 35051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8535:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 35050,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "8535:6:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8535:24:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 35056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8562:6:39",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "8535:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8519:49:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 35061,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35049,
                          "src": "8634:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 35060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8626:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 35059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8626:7:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8626:15:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 35063,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8644:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 35064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8644:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8626:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35069,
                  "nodeType": "IfStatement",
                  "src": "8622:68:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35066,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41867,
                        "src": "8668:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 35067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8668:22:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 35068,
                    "nodeType": "RevertStatement",
                    "src": "8661:29:39"
                  }
                },
                {
                  "expression": {
                    "id": 35085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 35070,
                        "name": "tokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34643,
                        "src": "8733:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                          "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                        }
                      },
                      "id": 35072,
                      "indexExpression": {
                        "id": 35071,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35040,
                        "src": "8747:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8733:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 35074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8786:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 35075,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35043,
                          "src": "8804:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 35078,
                                  "name": "underlying_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35043,
                                  "src": "8835:11:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$30350",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 35079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29980,
                                "src": "8835:20:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 35080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8835:22:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 35077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8829:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 35076,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8829:5:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8829:29:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 35082,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35049,
                          "src": "8872:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 35083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8892:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$30350",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35073,
                        "name": "TokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43629,
                        "src": "8759:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenMetadata_$43629_storage_ptr_$",
                          "typeString": "type(struct IBondFixedTermTeller.TokenMetadata storage pointer)"
                        }
                      },
                      "id": 35084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8759:144:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                      }
                    },
                    "src": "8733:170:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "id": 35086,
                  "nodeType": "ExpressionStatement",
                  "src": "8733:170:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35088,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35040,
                        "src": "8943:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35089,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35043,
                        "src": "8953:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 35090,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35049,
                        "src": "8966:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 35087,
                      "name": "ERC1155BondTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34638,
                      "src": "8919:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_ERC20_$30350_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256,contract ERC20,uint48)"
                      }
                    },
                    "id": 35091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8919:54:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35092,
                  "nodeType": "EmitStatement",
                  "src": "8914:59:39"
                }
              ]
            },
            "documentation": {
              "id": 35038,
              "nodeType": "StructuredDocumentation",
              "src": "7831:410:39",
              "text": "@notice             \"Deploy\" a new ERC1155 bond token and stores its ID\n @dev                ERC1155 tokens used for fixed term bonds\n @param tokenId_     Calculated ID of new bond token (from getTokenId)\n @param underlying_  Underlying token to be paid out when the bond token vests\n @param expiry_      Timestamp that the token will vest at, will be rounded to the nearest day"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "8255:7:39",
            "parameters": {
              "id": 35046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35040,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "8280:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35094,
                  "src": "8272:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8272:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35043,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "8304:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35094,
                  "src": "8298:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 35042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35041,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "8298:5:39"
                    },
                    "referencedDeclaration": 30350,
                    "src": "8298:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35045,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "8332:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35094,
                  "src": "8325:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 35044,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "8325:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8262:83:39"
            },
            "returnParameters": {
              "id": 35047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8355:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35122,
            "nodeType": "FunctionDefinition",
            "src": "9213:215:39",
            "nodes": [],
            "body": {
              "id": 35121,
              "nodeType": "Block",
              "src": "9320:108:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 35104,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34643,
                          "src": "9330:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 35106,
                        "indexExpression": {
                          "id": 35105,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35099,
                          "src": "9344:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9330:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 35107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43628,
                      "src": "9330:30:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 35108,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35101,
                      "src": "9364:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9330:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35110,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:41:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35112,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35097,
                        "src": "9387:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35113,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35099,
                        "src": "9392:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35114,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35101,
                        "src": "9402:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 35117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9417:2:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 35116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9411:5:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 35115,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9411:5:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9411:9:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 35111,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45079,
                      "src": "9381:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 35119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9381:40:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35120,
                  "nodeType": "ExpressionStatement",
                  "src": "9381:40:39"
                }
              ]
            },
            "documentation": {
              "id": 35095,
              "nodeType": "StructuredDocumentation",
              "src": "8986:222:39",
              "text": "@notice             Mint bond token and update supply\n @param to_          Address to mint tokens to\n @param tokenId_     ID of bond token to mint\n @param amount_      Amount of bond tokens to mint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToken",
            "nameLocation": "9222:10:39",
            "parameters": {
              "id": 35102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35097,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "9250:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35122,
                  "src": "9242:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9242:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35099,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9271:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35122,
                  "src": "9263:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9263:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35101,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9297:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35122,
                  "src": "9289:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9289:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9232:78:39"
            },
            "returnParameters": {
              "id": 35103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9320:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35146,
            "nodeType": "FunctionDefinition",
            "src": "9662:208:39",
            "nodes": [],
            "body": {
              "id": 35145,
              "nodeType": "Block",
              "src": "9771:99:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 35132,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34643,
                          "src": "9781:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 35134,
                        "indexExpression": {
                          "id": 35133,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35127,
                          "src": "9795:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9781:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 35135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43628,
                      "src": "9781:30:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 35136,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35129,
                      "src": "9815:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9781:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35138,
                  "nodeType": "ExpressionStatement",
                  "src": "9781:41:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35140,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35125,
                        "src": "9838:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35141,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35127,
                        "src": "9845:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35142,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35129,
                        "src": "9855:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35139,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45269,
                      "src": "9832:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 35143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9832:31:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35144,
                  "nodeType": "ExpressionStatement",
                  "src": "9832:31:39"
                }
              ]
            },
            "documentation": {
              "id": 35123,
              "nodeType": "StructuredDocumentation",
              "src": "9434:223:39",
              "text": "@notice             Burn bond token and update supply\n @param from_        Address to burn tokens from\n @param tokenId_     ID of bond token to burn\n @param amount_      Amount of bond token to burn"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnToken",
            "nameLocation": "9671:10:39",
            "parameters": {
              "id": 35130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35125,
                  "mutability": "mutable",
                  "name": "from_",
                  "nameLocation": "9699:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35146,
                  "src": "9691:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9691:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35127,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9722:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35146,
                  "src": "9714:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9714:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35129,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9748:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35146,
                  "src": "9740:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9740:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9681:80:39"
            },
            "returnParameters": {
              "id": 35131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9771:0:39"
            },
            "scope": 35214,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35179,
            "nodeType": "FunctionDefinition",
            "src": "9963:382:39",
            "nodes": [],
            "body": {
              "id": 35178,
              "nodeType": "Block",
              "src": "10057:288:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35159,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "10207:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 35178,
                      "src": "10199:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10199:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35175,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35165,
                                "name": "underlying_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35150,
                                "src": "10265:11:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$30350",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                "id": 35171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 35166,
                                  "name": "expiry_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35152,
                                  "src": "10278:7:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 35169,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10295:6:39",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      }
                                    ],
                                    "id": 35168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10288:6:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 35167,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10288:6:39",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 35170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10288:14:39",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "10278:24:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$30350",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              ],
                              "expression": {
                                "id": 35163,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10248:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 35164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10248:16:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 35172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10248:55:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 35162,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10238:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 35173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10238:66:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10217:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 35160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10217:7:39",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10217:97:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10199:115:39"
                },
                {
                  "expression": {
                    "id": 35176,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35159,
                    "src": "10331:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35157,
                  "id": 35177,
                  "nodeType": "Return",
                  "src": "10324:14:39"
                }
              ]
            },
            "baseFunctions": [
              43684
            ],
            "documentation": {
              "id": 35147,
              "nodeType": "StructuredDocumentation",
              "src": "9922:36:39",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "92593277",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenId",
            "nameLocation": "9972:10:39",
            "overrides": {
              "id": 35154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10030:8:39"
            },
            "parameters": {
              "id": 35153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35150,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "9989:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35179,
                  "src": "9983:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$30350",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 35149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35148,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30350,
                      "src": "9983:5:39"
                    },
                    "referencedDeclaration": 30350,
                    "src": "9983:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$30350",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35152,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "10009:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35179,
                  "src": "10002:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 35151,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "10002:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9982:35:39"
            },
            "returnParameters": {
              "id": 35157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35179,
                  "src": "10048:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10048:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10047:9:39"
            },
            "scope": 35214,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35213,
            "nodeType": "FunctionDefinition",
            "src": "10392:382:39",
            "nodes": [],
            "body": {
              "id": 35212,
              "nodeType": "Block",
              "src": "10539:235:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35192,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "10570:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 35212,
                      "src": "10549:25:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 35191,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35190,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43629,
                          "src": "10549:13:39"
                        },
                        "referencedDeclaration": 43629,
                        "src": "10549:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35196,
                  "initialValue": {
                    "baseExpression": {
                      "id": 35193,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34643,
                      "src": "10577:13:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$43629_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 35195,
                    "indexExpression": {
                      "id": 35194,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35182,
                      "src": "10591:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10577:23:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$43629_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10549:51:39"
                },
                {
                  "assignments": [
                    35198,
                    35200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35198,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "10625:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 35212,
                      "src": "10611:18:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 35197,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10611:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35200,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "10645:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 35212,
                      "src": "10631:20:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 35199,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10631:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35207,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35202,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35192,
                          "src": "10686:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 35203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43622,
                        "src": "10686:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 35204,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35192,
                          "src": "10715:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$43629_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 35205,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43626,
                        "src": "10715:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$30350",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 35201,
                      "name": "_getNameAndSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42654,
                      "src": "10655:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$30350_$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (contract ERC20,uint256) view returns (string memory,string memory)"
                      }
                    },
                    "id": 35206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10655:81:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10610:126:39"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 35208,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35198,
                        "src": "10754:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 35209,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35200,
                        "src": "10760:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 35210,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10753:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 35189,
                  "id": 35211,
                  "nodeType": "Return",
                  "src": "10746:21:39"
                }
              ]
            },
            "baseFunctions": [
              43694
            ],
            "documentation": {
              "id": 35180,
              "nodeType": "StructuredDocumentation",
              "src": "10351:36:39",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "35312c85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNameAndSymbol",
            "nameLocation": "10401:21:39",
            "overrides": {
              "id": 35184,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10479:8:39"
            },
            "parameters": {
              "id": 35183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35182,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10431:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 35213,
                  "src": "10423:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10423:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10422:18:39"
            },
            "returnParameters": {
              "id": 35189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35213,
                  "src": "10505:13:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10505:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35213,
                  "src": "10520:13:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10520:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10504:30:39"
            },
            "scope": 35214,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34617,
              "name": "BondBaseTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42750,
              "src": "1453:14:39"
            },
            "id": 34618,
            "nodeType": "InheritanceSpecifier",
            "src": "1453:14:39"
          },
          {
            "baseName": {
              "id": 34619,
              "name": "IBondFixedTermTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43695,
              "src": "1469:20:39"
            },
            "id": 34620,
            "nodeType": "InheritanceSpecifier",
            "src": "1469:20:39"
          },
          {
            "baseName": {
              "id": 34621,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45270,
              "src": "1491:7:39"
            },
            "id": 34622,
            "nodeType": "InheritanceSpecifier",
            "src": "1491:7:39"
          }
        ],
        "canonicalName": "BondFixedTermTeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34616,
          "nodeType": "StructuredDocumentation",
          "src": "430:991:39",
          "text": "@title Bond Fixed Term Teller\n @notice Bond Fixed Term Teller Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Bond Fixed Term Teller is an implementation of the\n      Bond Base Teller contract specific to handling user bond transactions\n      and tokenizing bond markets where purchases vest in a fixed amount of time\n      (rounded to the day) as ERC1155 tokens.\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35214,
          45270,
          43695,
          42750,
          30376,
          29619,
          44166
        ],
        "name": "BondFixedTermTeller",
        "nameLocation": "1430:19:39",
        "scope": 35215,
        "usedErrors": [
          41850,
          41854,
          41856,
          41863,
          41865,
          41867
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 39
}