{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "teller_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auctioneer_AmountLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_BadExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MarketNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MaxPayoutExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NewMarketsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotEnoughCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OnlyMarketOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OraclePriceZero",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "MarketClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowNewMarkets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callbackAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "closeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "params_",
          "type": "bytes"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAggregator",
      "outputs": [
        {
          "internalType": "contract IBondAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoForPurchase",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "capacityInQuote",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "maxPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositInterval",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minMarketDuration",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "pullOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchaseBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setAllowNewMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setCallbackAuthStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[6]",
          "name": "defaults_",
          "type": "uint32[6]"
        }
      ],
      "name": "setDefaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint32[3]",
          "name": "intervals_",
          "type": "uint32[3]"
        }
      ],
      "name": "setIntervals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "depositInterval_",
          "type": "uint48"
        }
      ],
      "name": "setMinDepositInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "duration_",
          "type": "uint48"
        }
      ],
      "name": "setMinMarketDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "terms",
      "outputs": [
        {
          "internalType": "contract IBondOracle",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "conclusion",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "fixedDiscount",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "scale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oracleConversion",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162003a9e38038062003a9e833981016040819052620000349162000125565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600580546001600160681b03191669015180000000000e1001179055506200018d9050565b6001600160a01b03811681146200012257600080fd5b50565b600080600080608085870312156200013c57600080fd5b845162000149816200010c565b60208601519094506200015c816200010c565b60408601519093506200016f816200010c565b606086015190925062000182816200010c565b939692955090935050565b60805160a0516138cf620001cf6000396000818161045f0152818161178101528181611c430152611cf70152600081816102ae015261246801526138cf6000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063946824cd1161012a578063bd1f3a5e116100bd578063c7bf8ca01161008c578063d2bee32311610071578063d2bee323146107ae578063e007fa97146107cb578063f61338f6146107de57600080fd5b8063c7bf8ca01461076d578063d20406871461078057600080fd5b8063bd1f3a5e1461061f578063bf48582b14610630578063bf7e214f14610643578063c0aa0e8a1461066357600080fd5b8063afa9d3b0116100f9578063afa9d3b0146104ff578063b1283e771461050c578063bbbdd95a146105f9578063bcf6cde81461060c57600080fd5b8063946824cd146104395780639787d1071461045d578063acc5570c14610483578063ae418095146104ec57600080fd5b806357e333ba116101bd5780636729a41e1161018c5780637a9e5e4b116101715780637a9e5e4b146103f35780638b098db3146104065780638da5cb5b1461041957600080fd5b80636729a41e146103ab578063699e17d9146103e157600080fd5b806357e333ba1461032c5780635dc4d16b1461033f5780635f77274e146103625780636352211e1461037557600080fd5b80633ad59dbc116101f95780633ad59dbc146102ac5780633adec5a7146102f357806344ee01721461030657806353c7f8e01461031957600080fd5b806310b053171461022b57806313af4035146102405780631c063a6c146102535780632750745814610289575b600080fd5b61023e610239366004613020565b6107f1565b005b61023e61024e36600461306b565b6108ac565b610276610261366004613020565b60009081526002602052604090206004015490565b6040519081526020015b60405180910390f35b61029c610297366004613020565b6109b5565b6040519015158152602001610280565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610280565b610276610301366004613020565b610a4e565b61023e6103143660046130a7565b610c24565b6102766103273660046130c4565b610d5e565b61027661033a366004613020565b610e06565b61029c61034d36600461306b565b60066020526000908152604090205460ff1681565b61023e61037036600461314f565b611162565b6102ce610383366004613020565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6102ce6103b9366004613020565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023e6103ef36600461316c565b5050565b61023e61040136600461306b565b611227565b61029c610414366004613020565b611384565b6000546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b610276610447366004613020565b6000908152600360208190526040909120015490565b7f00000000000000000000000000000000000000000000000000000000000000006102ce565b610496610491366004613020565b6113bd565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c001610280565b61023e6104fa366004613020565b6114ad565b60055461029c9060ff1681565b61059461051a366004613020565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850154600686015460079096015473ffffffffffffffffffffffffffffffffffffffff95861697861696948616958416947401000000000000000000000000000000000000000090940460ff16939089565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a015296891696880196909652969093166060860152901515608085015260a084015260c083015260e082019290925261010081019190915261012001610280565b61023e61060736600461319f565b611599565b61023e61061a3660046131d8565b611683565b61023e61062d366004613256565b50565b61027661063e3660046132e7565b611733565b6001546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b610709610671366004613020565b60036020819052600091825260409091208054600182015460028301549383015460049093015473ffffffffffffffffffffffffffffffffffffffff83169465ffffffffffff7401000000000000000000000000000000000000000085048116957a01000000000000000000000000000000000000000000000000000090950481169484821694660100000000000090049091169288565b6040805173ffffffffffffffffffffffffffffffffffffffff909916895265ffffffffffff97881660208a01529587169588019590955292851660608701529316608085015260a084019290925260c083019190915260e082015261010001610280565b61027661077b3660046131d8565b611882565b60055461079790610100900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610280565b60055461079790670100000000000000900465ffffffffffff1681565b6102766107d9366004613320565b611cdd565b61023e6107ec3660046130a7565b61205a565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16331461084e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260046020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6108da336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610a0b575060008281526003602052604090205465ffffffffffff4281167a01000000000000000000000000000000000000000000000000000090920416115b8015610a48575060008281526003602052604090205465ffffffffffff428116740100000000000000000000000000000000000000009092041611155b92915050565b6000818152600360208181526040808420815161010081018352815473ffffffffffffffffffffffffffffffffffffffff811680835265ffffffffffff7401000000000000000000000000000000000000000083048116968401969096527a01000000000000000000000000000000000000000000000000000090910485168285015260018301548086166060840152660100000000000090049094166080820152600282015460a08201529381015460c085015260049081015460e085015290517f7a3c4c17000000000000000000000000000000000000000000000000000000008152908101859052839190637a3c4c1790602401602060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b86919061334c565b905080600003610bc2576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260e0015182610bd49190613394565b90506000610c018460800151620186a0610bee91906133d1565b839065ffffffffffff16620186a06122a4565b90508360a001518110610c145780610c1a565b8360a001515b9695505050505050565b610c52336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b610cb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b60055465ffffffffffff61010090910481169082161080610ce35750620151808165ffffffffffff16105b15610d1a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216670100000000000000027fffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffff909216919091179055565b600080610d6d838501856133f8565b905080610120015165ffffffffffff16600014158015610dbe57506201518081610120015165ffffffffffff161080610dbe5750635dba240065ffffffffffff1681610120015165ffffffffffff16115b15610df5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dfe81612302565b949350505050565b600080610e1283610a4e565b9050600060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152602001600282015481526020016003820154815260200160048201548152505090506000826080015161112e578260a00151611142565b60c082015160a084015161114291866129e1565b9050808360c0015111611159578260c00151610c1a565b95945050505050565b611190336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b6111f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061130a57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156112e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130a91906134dd565b61131357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206001015465ffffffffffff16635dba24008111156113b357428111156113b6565b80155b9392505050565b6000818152600260208181526040808420815161012081018352815473ffffffffffffffffffffffffffffffffffffffff9081168083526001808501548316848801819052978501548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007909601546101008601528a8a529490965293872090940154869586958695869586959491939165ffffffffffff166114988d610e06565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331461150a576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600360209081526040808320805479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a0100000000000000000000000000000000000000000000000000004265ffffffffffff160217905560029091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6115c7336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b61162d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146116e0576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526004602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611801917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa1580156117ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ee91906134fa565b869065ffffffffffff16620186a06129e1565b600085815260036020819052604082200154919250906118359061182487610a4e565b61182e858a613517565b91906129e1565b905061184085610e06565b811115611879576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b91506113b69050565b60008060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152602001600282015481526020016003820154815260200160048201548152505090506000611b9386610a4e565b905060008360800151611bba5760c083015160a0850151611bb59184906129e1565b611bc0565b8360a001515b90506000611be1838560c001518760c001516129e19092919063ffffffff16565b90506000818310611bf25781611bf4565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152919250600091611cc3917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb091906134fa565b839065ffffffffffff16620186a06129e1565b9050611ccf818361352e565b9a9950505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611d4e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260208181526040808420600380845294829020825161010081018452815473ffffffffffffffffffffffffffffffffffffffff808216835265ffffffffffff7401000000000000000000000000000000000000000083048116978401979097527a010000000000000000000000000000000000000000000000000000909104861694820194909452600182015480861660608301526601000000000000900490941660808501529384015460a08401528385015460c084015260049093015460e083015292820154919290911615801590611e575750815473ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205460ff16155b15611e8e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e97866109b5565b611ecd576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ed887610a4e565b60c0830151909150611eec908790836129e1565b935084841015611f28576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260050154841115611f66576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611f965782600401548411611f9e565b826004015486115b15611fd5576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611fff5783612001565b855b8360040160008282546120149190613517565b925050819055508583600701600082825461202f919061352e565b925050819055508383600601600082825461204a919061352e565b9091555093979650505050505050565b612088336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b6120ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b60055465ffffffffffff6701000000000000009091048116908216118061211e5750610e108165ffffffffffff16105b15612155576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061227757506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015612253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227791906134dd565b80610dfe575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60006122b18484846129e1565b9050600082806122c3576122c3613546565b84860911156113b6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81106122f857600080fd5b6001019392505050565b60055460009060ff16612341576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526006602052604090205460ff1615801561237a5750604082015173ffffffffffffffffffffffffffffffffffffffff1615155b156123b1576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082610140015165ffffffffffff161180156123da57504282610140015165ffffffffffff16105b15612411576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af11580156124b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d5919061334c565b600081815260026020818152604080842080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825589840151948201805473ffffffffffffffffffffffffffffffffffffffff968716908316179055895160018301805491871691909216179055888201516003808301805460c08d0151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff000000000000000000000000000000000000000000909116939097169290921795909517905560e089015160048201559290915290912060808601519293509091620186a065ffffffffffff919091161015806125f257508460a0015165ffffffffffff16856080015165ffffffffffff16115b15612629576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808501516001820180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff16660100000000000065ffffffffffff84160217905560608601516020870151875160009384938493612689938a93612aad565b60608b015187547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178755600487018290556003870181905560a08b01519295509093509150620186a065ffffffffffff909116111561272e576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6127578860a00151620186a061274491906133d1565b849065ffffffffffff16620186a06122a4565b600285015560055461016089015165ffffffffffff67010000000000000090920482169116108061279d575060055461010089810151910465ffffffffffff9081169116105b806127c1575087610160015165ffffffffffff1688610100015165ffffffffffff16115b156127f8576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008860c0015161280d578860e00151612846565b6128468261283a8b60800151620186a061282791906133d1565b879065ffffffffffff16620186a06122a4565b60e08c015191906129e1565b905061287789610100015165ffffffffffff168a610160015165ffffffffffff16836129e19092919063ffffffff16565b60058701556101208901516001860180547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff9283161790556101408a015160009116156128d1578961014001516128d3565b425b86547fffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000065ffffffffffff8316021787556101608b015190915061292d9082613575565b865479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff9283160217875560208b8101518c516101208e01516040519416845273ffffffffffffffffffffffffffffffffffffffff918216939116918b917f9cc08aa705173351ee44462d57949faf65814067be71f3271ec1f5636f9efa2d910160405180910390a4509598975050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612a385760008411612a2d57600080fd5b5082900490506113b6565b808411612a4457600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b22919061359f565b905060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b95919061359f565b905060068260ff161080612bac575060128260ff16115b15612be3576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff161080612bf8575060128160ff16115b15612c2f576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff89161580612c67575073ffffffffffffffffffffffffffffffffffffffff89163b155b15612c9e576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5538adb7000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff898116602483015288811660448301528a1690635538adb790606401600060405180830381600087803b158015612d1657600080fd5b505af1158015612d2a573d6000803e3d6000fd5b50506040517f7a3c4c17000000000000000000000000000000000000000000000000000000008152600481018d90526000925073ffffffffffffffffffffffffffffffffffffffff8c169150637a3c4c1790602401602060405180830381865afa158015612d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc0919061334c565b905080600003612dfc576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f3f47e662000000000000000000000000000000000000000000000000000000008152600481018c905260009073ffffffffffffffffffffffffffffffffffffffff8c1690633f47e66290602401602060405180830381865afa158015612e6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8e919061359f565b905060068160ff161080612ea5575060128160ff16115b15612edc576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612f0a612f04612ef18b620186a06133d1565b859065ffffffffffff16620186a06122a4565b83612feb565b9050612f15816135c2565b60000b8260000b131580612f2c575060188160000b135b15612f63576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082612f71600284613600565b612f7c906024613674565b612f869190613674565b612f9190600a6137f6565b90506000612fa0600284613600565b86612fac896024613805565b612fb69190613674565b612fc09190613674565b612fcb90600a6137f6565b9050612fd78286613394565b9f919e509c509a5050505050505050505050565b6000805b600a841061301657613002600a85613866565b93508061300e8161387a565b915050612fef565b610dfe8382613674565b60006020828403121561303257600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461062d57600080fd5b803561306681613039565b919050565b60006020828403121561307d57600080fd5b81356113b681613039565b65ffffffffffff8116811461062d57600080fd5b803561306681613088565b6000602082840312156130b957600080fd5b81356113b681613088565b600080602083850312156130d757600080fd5b823567ffffffffffffffff808211156130ef57600080fd5b818501915085601f83011261310357600080fd5b81358181111561311257600080fd5b86602082850101111561312457600080fd5b60209290920196919550909350505050565b801515811461062d57600080fd5b803561306681613136565b60006020828403121561316157600080fd5b81356113b681613136565b6000806080838503121561317f57600080fd5b823591508360808401111561319357600080fd5b50926020919091019150565b600080604083850312156131b257600080fd5b82356131bd81613039565b915060208301356131cd81613136565b809150509250929050565b600080604083850312156131eb57600080fd5b8235915060208301356131cd81613039565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715613250576132506131fd565b60405290565b600060c0828403121561326857600080fd5b82601f83011261327757600080fd5b60405160c0810181811067ffffffffffffffff8211171561329a5761329a6131fd565b6040528060c08401858111156132af57600080fd5b845b818110156132dc57803563ffffffff811681146132ce5760008081fd5b8352602092830192016132b1565b509195945050505050565b6000806000606084860312156132fc57600080fd5b8335925060208401359150604084013561331581613039565b809150509250925092565b60008060006060848603121561333557600080fd5b505081359360208301359350604090920135919050565b60006020828403121561335e57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133cc576133cc613365565b500290565b600065ffffffffffff838116908316818110156133f0576133f0613365565b039392505050565b6000610180828403121561340b57600080fd5b61341361322c565b61341c8361305b565b815261342a6020840161305b565b602082015261343b6040840161305b565b604082015261344c6060840161305b565b606082015261345d6080840161309c565b608082015261346e60a0840161309c565b60a082015261347f60c08401613144565b60c082015260e083013560e082015261010061349c81850161309c565b908201526101206134ae84820161309c565b908201526101406134c084820161309c565b908201526101606134d284820161309c565b908201529392505050565b6000602082840312156134ef57600080fd5b81516113b681613136565b60006020828403121561350c57600080fd5b81516113b681613088565b60008282101561352957613529613365565b500390565b6000821982111561354157613541613365565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80831681851680830382111561359657613596613365565b01949350505050565b6000602082840312156135b157600080fd5b815160ff811681146113b657600080fd5b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8081036135f7576135f7613365565b60000392915050565b60008160000b8360000b8061361757613617613546565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808314161561366b5761366b613365565b90059392505050565b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018312811516156136b7576136b7613365565b81607f0183138116156136cc576136cc613365565b5090039392505050565b600181815b8085111561372f57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561371557613715613365565b8085161561372257918102915b93841c93908002906136db565b509250929050565b60008261374657506001610a48565b8161375357506000610a48565b816001811461376957600281146137735761378f565b6001915050610a48565b60ff84111561378457613784613365565b50506001821b610a48565b5060208310610133831016604e8410600b84101617156137b2575081810a610a48565b6137bc83836136d6565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156137ee576137ee613365565b029392505050565b60006113b660ff841683613737565b60008160000b8360000b6000821282607f0382138115161561382957613829613365565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003821281161561385d5761385d613365565b50019392505050565b60008261387557613875613546565b500490565b60008160000b607f810361389057613890613365565b6001019291505056fea26469706673582212206cfa9cef381b14d32f611fe7e64780ba70654c6f35197dac340e28b6d12b73d664736f6c634300080f0033",
    "sourceMap": "1648:928:36:-:0;;;1741:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;1895:7:36;;1904:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;;4333:25:42;;::::1;;::::0;4368:17:::1;;::::0;-1:-1:-1;;4396:18:42::1;:28:::0;;-1:-1:-1;;;;;;4471:22:42;;;;;-1:-1:-1;1648:928:36;;-1:-1:-1;1648:928:36;14:144:124;-1:-1:-1;;;;;102:31:124;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:771::-;325:6;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;451:9;445:16;470:44;508:5;470:44;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:46:124;562:25;596:46;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;726:46:124;692:25;726:46;:::i;:::-;843:2;828:18;;822:25;791:7;;-1:-1:-1;856:46:124;822:25;856:46;:::i;:::-;163:771;;;;-1:-1:-1;163:771:124;;-1:-1:-1;;163:771:124:o;:::-;1648:928:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102265760003560e01c8063946824cd1161012a578063bd1f3a5e116100bd578063c7bf8ca01161008c578063d2bee32311610071578063d2bee323146107ae578063e007fa97146107cb578063f61338f6146107de57600080fd5b8063c7bf8ca01461076d578063d20406871461078057600080fd5b8063bd1f3a5e1461061f578063bf48582b14610630578063bf7e214f14610643578063c0aa0e8a1461066357600080fd5b8063afa9d3b0116100f9578063afa9d3b0146104ff578063b1283e771461050c578063bbbdd95a146105f9578063bcf6cde81461060c57600080fd5b8063946824cd146104395780639787d1071461045d578063acc5570c14610483578063ae418095146104ec57600080fd5b806357e333ba116101bd5780636729a41e1161018c5780637a9e5e4b116101715780637a9e5e4b146103f35780638b098db3146104065780638da5cb5b1461041957600080fd5b80636729a41e146103ab578063699e17d9146103e157600080fd5b806357e333ba1461032c5780635dc4d16b1461033f5780635f77274e146103625780636352211e1461037557600080fd5b80633ad59dbc116101f95780633ad59dbc146102ac5780633adec5a7146102f357806344ee01721461030657806353c7f8e01461031957600080fd5b806310b053171461022b57806313af4035146102405780631c063a6c146102535780632750745814610289575b600080fd5b61023e610239366004613020565b6107f1565b005b61023e61024e36600461306b565b6108ac565b610276610261366004613020565b60009081526002602052604090206004015490565b6040519081526020015b60405180910390f35b61029c610297366004613020565b6109b5565b6040519015158152602001610280565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610280565b610276610301366004613020565b610a4e565b61023e6103143660046130a7565b610c24565b6102766103273660046130c4565b610d5e565b61027661033a366004613020565b610e06565b61029c61034d36600461306b565b60066020526000908152604090205460ff1681565b61023e61037036600461314f565b611162565b6102ce610383366004613020565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6102ce6103b9366004613020565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023e6103ef36600461316c565b5050565b61023e61040136600461306b565b611227565b61029c610414366004613020565b611384565b6000546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b610276610447366004613020565b6000908152600360208190526040909120015490565b7f00000000000000000000000000000000000000000000000000000000000000006102ce565b610496610491366004613020565b6113bd565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c001610280565b61023e6104fa366004613020565b6114ad565b60055461029c9060ff1681565b61059461051a366004613020565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850154600686015460079096015473ffffffffffffffffffffffffffffffffffffffff95861697861696948616958416947401000000000000000000000000000000000000000090940460ff16939089565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a015296891696880196909652969093166060860152901515608085015260a084015260c083015260e082019290925261010081019190915261012001610280565b61023e61060736600461319f565b611599565b61023e61061a3660046131d8565b611683565b61023e61062d366004613256565b50565b61027661063e3660046132e7565b611733565b6001546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b610709610671366004613020565b60036020819052600091825260409091208054600182015460028301549383015460049093015473ffffffffffffffffffffffffffffffffffffffff83169465ffffffffffff7401000000000000000000000000000000000000000085048116957a01000000000000000000000000000000000000000000000000000090950481169484821694660100000000000090049091169288565b6040805173ffffffffffffffffffffffffffffffffffffffff909916895265ffffffffffff97881660208a01529587169588019590955292851660608701529316608085015260a084019290925260c083019190915260e082015261010001610280565b61027661077b3660046131d8565b611882565b60055461079790610100900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610280565b60055461079790670100000000000000900465ffffffffffff1681565b6102766107d9366004613320565b611cdd565b61023e6107ec3660046130a7565b61205a565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16331461084e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260046020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6108da336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610a0b575060008281526003602052604090205465ffffffffffff4281167a01000000000000000000000000000000000000000000000000000090920416115b8015610a48575060008281526003602052604090205465ffffffffffff428116740100000000000000000000000000000000000000009092041611155b92915050565b6000818152600360208181526040808420815161010081018352815473ffffffffffffffffffffffffffffffffffffffff811680835265ffffffffffff7401000000000000000000000000000000000000000083048116968401969096527a01000000000000000000000000000000000000000000000000000090910485168285015260018301548086166060840152660100000000000090049094166080820152600282015460a08201529381015460c085015260049081015460e085015290517f7a3c4c17000000000000000000000000000000000000000000000000000000008152908101859052839190637a3c4c1790602401602060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b86919061334c565b905080600003610bc2576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260e0015182610bd49190613394565b90506000610c018460800151620186a0610bee91906133d1565b839065ffffffffffff16620186a06122a4565b90508360a001518110610c145780610c1a565b8360a001515b9695505050505050565b610c52336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b610cb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b60055465ffffffffffff61010090910481169082161080610ce35750620151808165ffffffffffff16105b15610d1a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216670100000000000000027fffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffff909216919091179055565b600080610d6d838501856133f8565b905080610120015165ffffffffffff16600014158015610dbe57506201518081610120015165ffffffffffff161080610dbe5750635dba240065ffffffffffff1681610120015165ffffffffffff16115b15610df5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dfe81612302565b949350505050565b600080610e1283610a4e565b9050600060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152602001600282015481526020016003820154815260200160048201548152505090506000826080015161112e578260a00151611142565b60c082015160a084015161114291866129e1565b9050808360c0015111611159578260c00151610c1a565b95945050505050565b611190336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b6111f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061130a57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156112e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130a91906134dd565b61131357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206001015465ffffffffffff16635dba24008111156113b357428111156113b6565b80155b9392505050565b6000818152600260208181526040808420815161012081018352815473ffffffffffffffffffffffffffffffffffffffff9081168083526001808501548316848801819052978501548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007909601546101008601528a8a529490965293872090940154869586958695869586959491939165ffffffffffff166114988d610e06565b949d939c50919a509850965090945092505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331461150a576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600360209081526040808320805479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a0100000000000000000000000000000000000000000000000000004265ffffffffffff160217905560029091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6115c7336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b61162d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146116e0576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526004602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611801917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa1580156117ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ee91906134fa565b869065ffffffffffff16620186a06129e1565b600085815260036020819052604082200154919250906118359061182487610a4e565b61182e858a613517565b91906129e1565b905061184085610e06565b811115611879576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b91506113b69050565b60008060026000858152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060036000868152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152602001600282015481526020016003820154815260200160048201548152505090506000611b9386610a4e565b905060008360800151611bba5760c083015160a0850151611bb59184906129e1565b611bc0565b8360a001515b90506000611be1838560c001518760c001516129e19092919063ffffffff16565b90506000818310611bf25781611bf4565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152919250600091611cc3917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb091906134fa565b839065ffffffffffff16620186a06129e1565b9050611ccf818361352e565b9a9950505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611d4e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848152600260208181526040808420600380845294829020825161010081018452815473ffffffffffffffffffffffffffffffffffffffff808216835265ffffffffffff7401000000000000000000000000000000000000000083048116978401979097527a010000000000000000000000000000000000000000000000000000909104861694820194909452600182015480861660608301526601000000000000900490941660808501529384015460a08401528385015460c084015260049093015460e083015292820154919290911615801590611e575750815473ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205460ff16155b15611e8e576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e97866109b5565b611ecd576040517fa24c407400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ed887610a4e565b60c0830151909150611eec908790836129e1565b935084841015611f28576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260050154841115611f66576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611f965782600401548411611f9e565b826004015486115b15611fd5576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383015474010000000000000000000000000000000000000000900460ff16611fff5783612001565b855b8360040160008282546120149190613517565b925050819055508583600701600082825461202f919061352e565b925050819055508383600601600082825461204a919061352e565b9091555093979650505050505050565b612088336000357fffffffff0000000000000000000000000000000000000000000000000000000016612193565b6120ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161093c565b60055465ffffffffffff6701000000000000009091048116908216118061211e5750610e108165ffffffffffff16105b15612155576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005805465ffffffffffff909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061227757506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015612253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227791906134dd565b80610dfe575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60006122b18484846129e1565b9050600082806122c3576122c3613546565b84860911156113b6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81106122f857600080fd5b6001019392505050565b60055460009060ff16612341576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526006602052604090205460ff1615801561237a5750604082015173ffffffffffffffffffffffffffffffffffffffff1615155b156123b1576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082610140015165ffffffffffff161180156123da57504282610140015165ffffffffffff16105b15612411576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af11580156124b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d5919061334c565b600081815260026020818152604080842080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825589840151948201805473ffffffffffffffffffffffffffffffffffffffff968716908316179055895160018301805491871691909216179055888201516003808301805460c08d0151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff000000000000000000000000000000000000000000909116939097169290921795909517905560e089015160048201559290915290912060808601519293509091620186a065ffffffffffff919091161015806125f257508460a0015165ffffffffffff16856080015165ffffffffffff16115b15612629576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808501516001820180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff16660100000000000065ffffffffffff84160217905560608601516020870151875160009384938493612689938a93612aad565b60608b015187547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178755600487018290556003870181905560a08b01519295509093509150620186a065ffffffffffff909116111561272e576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6127578860a00151620186a061274491906133d1565b849065ffffffffffff16620186a06122a4565b600285015560055461016089015165ffffffffffff67010000000000000090920482169116108061279d575060055461010089810151910465ffffffffffff9081169116105b806127c1575087610160015165ffffffffffff1688610100015165ffffffffffff16115b156127f8576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008860c0015161280d578860e00151612846565b6128468261283a8b60800151620186a061282791906133d1565b879065ffffffffffff16620186a06122a4565b60e08c015191906129e1565b905061287789610100015165ffffffffffff168a610160015165ffffffffffff16836129e19092919063ffffffff16565b60058701556101208901516001860180547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff9283161790556101408a015160009116156128d1578961014001516128d3565b425b86547fffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000065ffffffffffff8316021787556101608b015190915061292d9082613575565b865479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff9283160217875560208b8101518c516101208e01516040519416845273ffffffffffffffffffffffffffffffffffffffff918216939116918b917f9cc08aa705173351ee44462d57949faf65814067be71f3271ec1f5636f9efa2d910160405180910390a4509598975050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612a385760008411612a2d57600080fd5b5082900490506113b6565b808411612a4457600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b22919061359f565b905060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b95919061359f565b905060068260ff161080612bac575060128260ff16115b15612be3576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff161080612bf8575060128160ff16115b15612c2f576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff89161580612c67575073ffffffffffffffffffffffffffffffffffffffff89163b155b15612c9e576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5538adb7000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff898116602483015288811660448301528a1690635538adb790606401600060405180830381600087803b158015612d1657600080fd5b505af1158015612d2a573d6000803e3d6000fd5b50506040517f7a3c4c17000000000000000000000000000000000000000000000000000000008152600481018d90526000925073ffffffffffffffffffffffffffffffffffffffff8c169150637a3c4c1790602401602060405180830381865afa158015612d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc0919061334c565b905080600003612dfc576040517fe67b3f4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f3f47e662000000000000000000000000000000000000000000000000000000008152600481018c905260009073ffffffffffffffffffffffffffffffffffffffff8c1690633f47e66290602401602060405180830381865afa158015612e6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8e919061359f565b905060068160ff161080612ea5575060128160ff16115b15612edc576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612f0a612f04612ef18b620186a06133d1565b859065ffffffffffff16620186a06122a4565b83612feb565b9050612f15816135c2565b60000b8260000b131580612f2c575060188160000b135b15612f63576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082612f71600284613600565b612f7c906024613674565b612f869190613674565b612f9190600a6137f6565b90506000612fa0600284613600565b86612fac896024613805565b612fb69190613674565b612fc09190613674565b612fcb90600a6137f6565b9050612fd78286613394565b9f919e509c509a5050505050505050505050565b6000805b600a841061301657613002600a85613866565b93508061300e8161387a565b915050612fef565b610dfe8382613674565b60006020828403121561303257600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461062d57600080fd5b803561306681613039565b919050565b60006020828403121561307d57600080fd5b81356113b681613039565b65ffffffffffff8116811461062d57600080fd5b803561306681613088565b6000602082840312156130b957600080fd5b81356113b681613088565b600080602083850312156130d757600080fd5b823567ffffffffffffffff808211156130ef57600080fd5b818501915085601f83011261310357600080fd5b81358181111561311257600080fd5b86602082850101111561312457600080fd5b60209290920196919550909350505050565b801515811461062d57600080fd5b803561306681613136565b60006020828403121561316157600080fd5b81356113b681613136565b6000806080838503121561317f57600080fd5b823591508360808401111561319357600080fd5b50926020919091019150565b600080604083850312156131b257600080fd5b82356131bd81613039565b915060208301356131cd81613136565b809150509250929050565b600080604083850312156131eb57600080fd5b8235915060208301356131cd81613039565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715613250576132506131fd565b60405290565b600060c0828403121561326857600080fd5b82601f83011261327757600080fd5b60405160c0810181811067ffffffffffffffff8211171561329a5761329a6131fd565b6040528060c08401858111156132af57600080fd5b845b818110156132dc57803563ffffffff811681146132ce5760008081fd5b8352602092830192016132b1565b509195945050505050565b6000806000606084860312156132fc57600080fd5b8335925060208401359150604084013561331581613039565b809150509250925092565b60008060006060848603121561333557600080fd5b505081359360208301359350604090920135919050565b60006020828403121561335e57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133cc576133cc613365565b500290565b600065ffffffffffff838116908316818110156133f0576133f0613365565b039392505050565b6000610180828403121561340b57600080fd5b61341361322c565b61341c8361305b565b815261342a6020840161305b565b602082015261343b6040840161305b565b604082015261344c6060840161305b565b606082015261345d6080840161309c565b608082015261346e60a0840161309c565b60a082015261347f60c08401613144565b60c082015260e083013560e082015261010061349c81850161309c565b908201526101206134ae84820161309c565b908201526101406134c084820161309c565b908201526101606134d284820161309c565b908201529392505050565b6000602082840312156134ef57600080fd5b81516113b681613136565b60006020828403121561350c57600080fd5b81516113b681613088565b60008282101561352957613529613365565b500390565b6000821982111561354157613541613365565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80831681851680830382111561359657613596613365565b01949350505050565b6000602082840312156135b157600080fd5b815160ff811681146113b657600080fd5b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8081036135f7576135f7613365565b60000392915050565b60008160000b8360000b8061361757613617613546565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808314161561366b5761366b613365565b90059392505050565b60008160000b8360000b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018312811516156136b7576136b7613365565b81607f0183138116156136cc576136cc613365565b5090039392505050565b600181815b8085111561372f57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561371557613715613365565b8085161561372257918102915b93841c93908002906136db565b509250929050565b60008261374657506001610a48565b8161375357506000610a48565b816001811461376957600281146137735761378f565b6001915050610a48565b60ff84111561378457613784613365565b50506001821b610a48565b5060208310610133831016604e8410600b84101617156137b2575081810a610a48565b6137bc83836136d6565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156137ee576137ee613365565b029392505050565b60006113b660ff841683613737565b60008160000b8360000b6000821282607f0382138115161561382957613829613365565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003821281161561385d5761385d613365565b50019392505050565b60008261387557613875613546565b500490565b60008160000b607f810361389057613890613365565b6001019291505056fea26469706673582212206cfa9cef381b14d32f611fe7e64780ba70654c6f35197dac340e28b6d12b73d664736f6c634300080f0033",
    "sourceMap": "1648:928:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12434:183:42;;;;;;:::i;:::-;;:::i;:::-;;1936:147:22;;;;;;:::i;:::-;;:::i;22805:124:42:-;;;;;;:::i;:::-;22875:7;22901:12;;;:7;:12;;;;;:21;;;;22805:124;;;;895:25:124;;;883:2;868:18;22805:124:42;;;;;;;;22079:239;;;;;;:::i;:::-;;:::i;:::-;;;1096:14:124;;1089:22;1071:41;;1059:2;1044:18;22079:239:42;931:187:124;22654:109:42;22745:11;22654:109;;;1324:42:124;1312:55;;;1294:74;;1282:2;1267:18;22654:109:42;1123:251:124;18203:819:42;;;;;;:::i;:::-;;:::i;12653:365::-;;;;;;:::i;:::-;;:::i;2030:544:36:-;;;;;;:::i;:::-;;:::i;19912:589:42:-;;;;;;:::i;:::-;;:::i;3627:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13761:161;;;;;;:::i;:::-;;:::i;22360:113::-;;;;;;:::i;:::-;22422:7;22448:12;;;:7;:12;;;;;:18;;;;22360:113;3038:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13517:86;;;;;;:::i;:::-;;;;1496:434:22;;;;;;:::i;:::-;;:::i;21833:204:42:-;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;;;;;19064:115:42;;;;;;:::i;:::-;19130:7;19156:10;;;:5;:10;;;;;;;;:16;;;19064:115;22515:97;22598:7;22515:97;;17606:555;;;;;;:::i;:::-;;:::i;:::-;;;;4398:42:124;4467:15;;;4449:34;;4519:15;;;4514:2;4499:18;;4492:43;4571:15;;;4551:18;;;4544:43;;;;4623:15;;4618:2;4603:18;;4596:43;4688:14;4676:27;;;4670:3;4655:19;;4648:56;4735:3;4720:19;;4713:35;;;;4375:3;4360:19;17606:555:42;4073:681:124;14201:267:42;;;;;;:::i;:::-;;:::i;3258:27::-;;;;;;;;;2757:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5164:42:124;5233:15;;;5215:34;;5285:15;;;5280:2;5265:18;;5258:43;5337:15;;;5317:18;;;5310:43;;;;5389:15;;;;5384:2;5369:18;;5362:43;5449:14;;5442:22;5436:3;5421:19;;5414:51;5496:3;5481:19;;5474:35;5540:3;5525:19;;5518:35;5584:3;5569:19;;5562:35;;;;5628:3;5613:19;;5606:35;;;;5141:3;5126:19;2757:45:42;4759:888:124;13964:195:42;;;;;;:::i;:::-;;:::i;12193:199::-;;;;;;:::i;:::-;;:::i;13650:69::-;;;;;;:::i;:::-;;;19221:655;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;;;;;2879:42:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8764::124;8752:55;;;8734:74;;8827:14;8877:15;;;8872:2;8857:18;;8850:43;8929:15;;;8909:18;;;8902:43;;;;8981:15;;;8976:2;8961:18;;8954:43;9034:15;;9028:3;9013:19;;9006:44;9081:3;9066:19;;9059:35;;;;9125:3;9110:19;;9103:35;;;;9169:3;9154:19;;9147:35;8721:3;8706:19;2879:42:42;8378:810:124;20543:1248:42;;;;;;:::i;:::-;;:::i;3409:32::-;;;;;;;;;;;;;;;9367:14:124;9355:27;;;9337:46;;9325:2;9310:18;3409:32:42;9193:196:124;3499:31:42;;;;;;;;;;;;14560:2152;;;;;;:::i;:::-;;:::i;13054:416::-;;;;;;:::i;:::-;;:::i;12434:183::-;12516:14;;;;:9;:14;;;;;;;;12502:10;:28;12498:67;;12539:26;;;;;;;;;;;;;;12498:67;12596:14;;;;:9;:14;;;;;;;;;12575:7;:12;;;;;;:35;;;;12596:14;;;;12575:35;;;;;;12434:183::o;1936:147:22:-;875:33;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9917:2:124;867:58:22;;;9899:21:124;9956:2;9936:18;;;9929:30;9995:14;9975:18;;;9968:42;10027:18;;867:58:22;;;;;;;;;2010:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;22079:239:42:-;22138:4;22162:12;;;:7;:12;;;;;:21;;;:26;;;;:89;;-1:-1:-1;22204:10:42;;;;:5;:10;;;;;:21;:47;22235:15;22204:47;;:21;;;;;:47;22162:89;:148;;;;-1:-1:-1;22267:10:42;;;;:5;:10;;;;;:16;:43;22294:15;22267:43;;:16;;;;;:43;;22162:148;22154:157;22079:239;-1:-1:-1;;22079:239:42:o;18203:819::-;18267:7;18359:10;;;:5;:10;;;;;;;;18335:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18401:29;;;;;;;;895:25:124;;;18267:7:42;;18335:34;18401:24;;868:18:124;;18401:29:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18379:51;;18477:11;18492:1;18477:16;18473:57;;18502:28;;;;;;;;;;;;;;18473:57;18629:13;18659:4;:21;;;18645:11;:35;;;;:::i;:::-;18629:51;;18727:23;18753:111;18803:4;:18;;;3882:3;18781:40;;;;:::i;:::-;18753:5;;:111;;3882:3;18753:14;:111::i;:::-;18727:137;;18968:4;:13;;;18950:15;:31;:65;;19000:15;18950:65;;;18984:4;:13;;;18950:65;18943:72;18203:819;-1:-1:-1;;;;;;18203:819:42:o;12653:365::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9917:2:124;867:58:22;;;9899:21:124;9956:2;9936:18;;;9929:30;9995:14;9975:18;;;9968:42;10027:18;;867:58:22;9715:336:124;867:58:22;12896:18:42::1;::::0;::::1;;::::0;;::::1;::::0;::::1;12884:30:::0;;::::1;;::::0;:52:::1;;;12930:6;12918:9;:18;;;12884:52;12880:91;;;12945:26;;;;;;;;;;;;;;12880:91;12982:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;12653:365::o;2030:544:36:-;2103:7;;2225:35;;;;2236:7;2225:35;:::i;:::-;2196:64;;2352:6;:14;;;:19;;2370:1;2352:19;;:83;;;;;2393:6;2376;:14;;;:23;;;:58;;;;3816:13:42;2403:31:36;;:6;:14;;;:31;;;2376:58;2348:134;;;2456:26;;;;;;;;;;;;;;2348:134;2546:21;2560:6;2546:13;:21::i;:::-;2539:28;2030:544;-1:-1:-1;;;;2030:544:36:o;19912:589:42:-;19974:7;20022:13;20038:16;20050:3;20038:11;:16::i;:::-;20022:32;;20065:24;20092:7;:12;20100:3;20092:12;;;;;;;;;;;20065:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20114:21;20138:5;:10;20144:3;20138:10;;;;;;;;;;;20114:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20240:16;20259:6;:22;;;:108;;20352:6;:15;;;20259:108;;;20319:10;;;;20296:15;;;;:41;;20331:5;20296:22;:41::i;:::-;20240:127;;20456:8;20437:6;:16;;;:27;:57;;20478:6;:16;;;20437:57;;;20467:8;20430:64;-1:-1:-1;;;;;19912:589:42:o;13761:161::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9917:2:124;867:58:22;;;9899:21:124;9956:2;9936:18;;;9929:30;9995:14;9975:18;;;9968:42;10027:18;;867:58:22;9715:336:124;867:58:22;13890:15:42::1;:25:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;13761:161::o;1496:434:22:-;1767:5;;;;1753:10;:19;;:76;;-1:-1:-1;1776:9:22;;:53;;;;;1794:10;1776:53;;;12311:34:124;1814:4:22;12361:18:124;;;12354:43;1776:9:22;1821:7;;;12413:18:124;;;12406:107;1776:9:22;;;;;:17;;12223:18:124;;1776:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;;;;;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:22;1496:434;:::o;21833:204:42:-;21890:4;21924:10;;;:5;:10;;;;;:18;;;;;3816:13;21960:25;;;21959:71;;22015:15;22004:7;:26;;21959:71;;;21989:12;;21959:71;21952:78;21833:204;-1:-1:-1;;;21833:204:42:o;17606:555::-;17713:13;17933:12;;;:7;:12;;;;;;;;17906:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18098:10;;;;;;;;;;:18;;;;17713:13;;;;;;;;;;17906:39;;;;18098:18;;18130:14;17933:12;18130:9;:14::i;:::-;17955:199;;;;-1:-1:-1;17955:199:42;;-1:-1:-1;17955:199:42;-1:-1:-1;17955:199:42;-1:-1:-1;17955:199:42;;-1:-1:-1;17606:555:42;-1:-1:-1;;;17606:555:42:o;14201:267::-;14281:12;;;;:7;:12;;;;;:18;;;14267:10;:32;14263:73;;14308:28;;;;;;;;;;;;;;14263:73;14346:10;;;;:5;:10;;;;;;;;:47;;;;;14377:15;14346:47;;;;;;14403:7;:12;;;;;;:21;;:25;;;14444:17;14346:10;;14444:17;;;14201:267;:::o;13964:195::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9917:2:124;867:58:22;;;9899:21:124;9956:2;9936:18;;;9929:30;9995:14;9975:18;;;9968:42;10027:18;;867:58:22;9715:336:124;867:58:22;14114:28:42::1;::::0;;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:38;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;13964:195::o;12193:199::-;12294:12;;;;:7;:12;;;;;:18;;;12280:10;:32;12276:73;;12321:28;;;;;;;;;;;;;;12276:73;12359:14;;;;:9;:14;;;;;;:26;;;;;;;;;;;;;;12193:199::o;19221:655::-;19460:25;;;;;:14;1312:55:124;;;19460:25:42;;;1294:74:124;-1:-1:-1;;;;19445:62:42;;19460:7;:14;;;;;;1267:18:124;;19460:25:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19445:7;;:62;;3882:3;19445:14;:62::i;:::-;19517:14;19557:10;;;:5;:10;;;;;;;:16;;19431:76;;-1:-1:-1;19517:14:42;19534:58;;19575:16;19563:3;19575:11;:16::i;:::-;19535:13;19545:3;19535:7;:13;:::i;:::-;19534:22;:58;:22;:58::i;:::-;19517:75;;19748:14;19758:3;19748:9;:14::i;:::-;19739:6;:23;19735:135;;;19785:30;;;;;;;;;;;;;;19735:135;19853:6;-1:-1:-1;19846:13:42;;-1:-1:-1;19846:13:42;20543:1248;20625:7;20818:24;20845:7;:12;20853:3;20845:12;;;;;;;;;;;20818:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20867:21;20891:5;:10;20897:3;20891:10;;;;;;;;;;;20867:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20911:13;20927:16;20939:3;20927:11;:16::i;:::-;20911:32;;20953:21;20977:6;:22;;;:108;;21074:10;;;;21044:15;;;;:41;;21067:5;;21044:22;:41::i;:::-;20977:108;;;21014:6;:15;;;20977:108;20953:132;;21095:16;21114:42;21138:5;21145:4;:10;;;21114:6;:16;;;:23;;:42;;;;;:::i;:::-;21095:61;;21166:22;21207:8;21191:13;:24;:51;;21234:8;21191:51;;;21218:13;21191:51;21669:25;;;;;:14;1312:55:124;;;21669:25:42;;;1294:74:124;21166:76:42;;-1:-1:-1;;;21634:103:42;;21669:7;:14;;;;;;1267:18:124;;21669:25:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21634:14;;:103;;3882:3;21634:21;:103::i;:::-;21611:126;-1:-1:-1;21755:29:42;21611:126;21755:14;:29;:::i;:::-;21748:36;20543:1248;-1:-1:-1;;;;;;;;;;20543:1248:42:o;14560:2152::-;14692:14;14722:10;:30;14744:7;14722:30;;14718:69;;14761:26;;;;;;;;;;;;;;14718:69;14798:25;14826:12;;;:7;:12;;;;;;;;14872:5;:10;;;;;;;14848:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14981:19;;;;14826:12;;14848:34;;14981:19;:33;;;;:70;;-1:-1:-1;15038:12:42;;;;15019:32;;;;:18;:32;;;;;;;;15018:33;14981:70;14977:121;;;15072:26;;;;;;;;;;;;;;14977:121;15164:11;15171:3;15164:6;:11::i;:::-;15159:53;;15184:28;;;;;;;;;;;;;;15159:53;15272:13;15288:16;15300:3;15288:11;:16::i;:::-;15586:10;;;;15272:32;;-1:-1:-1;15571:33:42;;:7;;15272:32;15571:14;:33::i;:::-;15562:42;;15689:13;15680:6;:22;15676:69;;;15711:34;;;;;;;;;;;;;;15676:69;15829:6;:16;;;15820:6;:25;15816:68;;;15854:30;;;;;;;;;;;;;;15816:68;16244:22;;;;;;;;;:77;;16306:6;:15;;;16297:6;:24;16244:77;;;16279:6;:15;;;16269:7;:25;16244:77;16240:132;;;16342:30;;;;;;;;;;;;;;16240:132;16466:22;;;;;;;;;:41;;16501:6;16466:41;;;16491:7;16466:41;16447:6;:15;;;:60;;;;;;;:::i;:::-;;;;;;;;16667:7;16647:6;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;16699:6;16684;:11;;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;14560:2152:42;;;-1:-1:-1;;;;;;;14560:2152:42:o;13054:416::-;875:33:22;888:10;900:7;;;;875:12;:33::i;:::-;867:58;;;;;;;9917:2:124;867:58:22;;;9899:21:124;9956:2;9936:18;;;9929:30;9995:14;9975:18;;;9968:42;10027:18;;867:58:22;9715:336:124;867:58:22;13321:17:42::1;::::0;::::1;::::0;;;::::1;::::0;::::1;13302:36:::0;;::::1;;::::0;:66:::1;;;13361:7;13342:16;:26;;;13302:66;13298:117;;;13389:26;;;;;;;;;;;;;;13298:117;13426:18;:37:::0;;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;13054:416::o;950:540:22:-;1070:9;;1037:4;;1070:9;;1388:27;;;;;:77;;-1:-1:-1;1419:46:22;;;;;:12;12329:15:124;;;1419:46:22;;;12311:34:124;1446:4:22;12361:18:124;;;12354:43;12445:66;12433:79;;12413:18;;;12406:107;1419:12:22;;;;;12223:18:124;;1419:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:22;;;1470:13;;;1478:5;;1470:13;1380:103;;;950:540;;;;:::o;5171:353:62:-;5285:14;5320:25;5327:1;5330;5333:11;5320:6;:25::i;:::-;5311:34;;5411:1;5396:11;5383:25;;;;;:::i;:::-;5393:1;5390;5383:25;:29;5379:129;;;5449:17;5440:6;:26;5432:35;;;;;;5485:8;;5171:353;;;;;:::o;4764:3713:42:-;4999:15;;4834:7;;4999:15;;4994:62;;5023:33;;;;;;;;;;;;;;4994:62;5163:10;5144:30;;;;:18;:30;;;;;;;;5143:31;:69;;;;-1:-1:-1;5178:20:42;;;;:34;;;;5143:69;5139:124;;;5237:26;;;;;;;;;;;;;;5139:124;5353:1;5337:7;:13;;;:17;;;:52;;;;;5374:15;5358:7;:13;;;:31;;;5337:52;5333:107;;;5414:26;;;;;;;;;;;;;;5333:107;5568:19;;5589:18;;;;5541:67;;;;;:26;13763:15:124;;;5541:67:42;;;13745:34:124;13815:15;;;13795:18;;;13788:43;5522:16:42;;5541:11;:26;;;;13657:18:124;;5541:67:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5652:25;5680:17;;;:7;:17;;;;;;;;5707:25;;;;;;5722:10;5707:25;;;5762:18;;;;5742:17;;;:38;;5707:25;5742:38;;;;;;;;;5811:19;;5707:25;5790:18;;:40;;;;;;;;;;;;5862:20;;;;5840:19;;;;:42;;5917:23;;;;5892:48;;;;;;;;5840:42;;;;5892:48;;;;;;;;;;5968:16;;;;5950:15;;;:34;6116:15;;;;;;;6158:21;;;;5522:86;;-1:-1:-1;5680:17:42;;3882:3;6158:44;;;;;;;;:114;;;6242:7;:30;;;6218:54;;:7;:21;;;:54;;;6158:114;6141:175;;;6290:26;;;;;;;;;;;;;;6141:175;6347:21;;;;6326:18;;;:42;;;;;;;;;;;;6540:14;;;;6568:18;;;;6600:19;;-1:-1:-1;;;;;;6489:175:42;;6518:8;;6489:15;:175::i;:::-;6688:14;;;;6674:28;;;;;;;;;;;6712:21;;;:40;;;6762:10;;;:18;;;6896:30;;;;6430:234;;-1:-1:-1;6712:40:42;;-1:-1:-1;6762:18:42;-1:-1:-1;3882:3:42;6896:52;;;;;6892:91;;;6957:26;;;;;;;;;;;;;;6892:91;7064:141;7122:7;:30;;;3882:3;7100:52;;;;:::i;:::-;7064:5;;7092:61;;3882:3;7064:14;:141::i;:::-;7048:13;;;:157;7281:17;;7262:16;;;;7281:17;;;;;;;7262:36;;;;:96;;-1:-1:-1;7340:18:42;;;7314:23;;;;7340:18;;;;;;7314:44;;;7262:96;:154;;;;7400:7;:16;;;7374:42;;:7;:23;;;:42;;;7262:154;7245:215;;;7434:26;;;;;;;;;;;;;;7245:215;7534:16;7553:7;:23;;;:303;;7840:7;:16;;;7553:303;;;7591:234;7632:5;7655:156;7721:7;:21;;;3882:3;7699:43;;;;:::i;:::-;7655:5;;7691:52;;3882:3;7655:14;:156::i;:::-;7591:16;;;;;:234;:23;:234::i;:::-;7534:322;;7885:110;7922:7;:23;;;7914:32;;7968:7;:16;;;7960:25;;7885:8;:15;;:110;;;;;:::i;:::-;7866:16;;;:129;8054:15;;;;8039:12;;;:30;;;;;;;;;;;8094:13;;;;-1:-1:-1;;8094:18:42;;:60;;8141:7;:13;;;8094:60;;;8122:15;8094:60;8164:18;;;;;;;;;;;;8218:16;;;;8164:18;;-1:-1:-1;8210:24:42;;8164:18;8210:24;:::i;:::-;8192:42;;;;;;;;;;;;;8386:18;;;;;8344:19;;8419:15;;;;8287:157;;9355:27:124;;9337:46;;8287:157:42;;;;;;;;8314:8;;8287:157;;9310:18:124;8287:157:42;;;;;;;-1:-1:-1;8462:8:42;;4764:3713;-1:-1:-1;;;;;;;;4764:3713:42:o;742:4147:62:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:62;;;;-1:-1:-1;1787:13:62;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;3784:1;2787;2753:31;;:35;;2752:51;;2909:22;;;;3765:1;:15;;3764:21;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;;;2737:12;3321;;;3317:23;;;3313:31;;;2490:20;;;2479:32;;;3380:12;;;;2537:21;;3053:16;;;;3371:21;;;;4834:11;;;-1:-1:-1;;;;742:4147:62:o;8483:3668:42:-;8697:7;8718;8739;8818:25;8846:12;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8818:51;;8879:24;8906:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8879:49;;8965:1;8943:19;:23;;;:51;;;;8992:2;8970:19;:24;;;8943:51;8939:90;;;9003:26;;;;;;;;;;;;;;8939:90;9064:1;9043:18;:22;;;:49;;;;9090:2;9069:18;:23;;;9043:49;9039:88;;;9101:26;;;;;;;;;;;;;;9039:88;9220:30;;;;;:67;;-1:-1:-1;9254:28:42;;;;:33;9220:67;9216:118;;;9308:26;;;;;;;;;;;;;;9216:118;9385:54;;;;;;;;14589:25:124;;;9385:22:42;14711:15:124;;;14691:18;;;14684:43;14763:15;;;14743:18;;;14736:43;9385:22:42;;;;;14562:18:124;;9385:54:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9548:25:42;;;;;;;;895::124;;;9525:20:42;;-1:-1:-1;9548:20:42;;;;-1:-1:-1;9548:20:42;;868:18:124;;9548:25:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9525:48;;9587:12;9603:1;9587:17;9583:58;;9613:28;;;;;;;;;;;;;;9583:58;9764:21;;;;;;;;895:25:124;;;9741:20:42;;9764:16;;;;;;868:18:124;;9764:21:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9741:44;;9816:1;9799:14;:18;;;:41;;;;9838:2;9821:14;:19;;;9799:41;9795:80;;;9849:26;;;;;;;;;;;;;;9795:80;10555:18;10576:213;10607:144;10654:36;10676:14;3882:3;10654:36;:::i;:::-;10607:12;;10646:45;;3882:3;10607:21;:144::i;:::-;10765:14;10576:17;:213::i;:::-;10555:234;-1:-1:-1;11151:14:42;10555:234;11151:14;:::i;:::-;11127:38;;11132:14;11127:38;;;;:60;;;;11185:2;11169:13;:18;;;11127:60;11123:111;;;11208:26;;;;;;;;;;;;;;11123:111;11511:24;11578:14;11553:17;11569:1;11553:13;:17;:::i;:::-;11548:22;;:2;:22;:::i;:::-;:45;;;;:::i;:::-;11538:56;;:2;:56;:::i;:::-;11511:83;-1:-1:-1;11950:13:42;12050:17;12066:1;12050:13;:17;:::i;:::-;12028:18;11990:30;12000:19;11990:2;:30;:::i;:::-;:57;;;;:::i;:::-;:77;;;;:::i;:::-;11966:102;;:2;:102;:::i;:::-;11950:118;-1:-1:-1;12087:31:42;12102:16;12087:12;:31;:::i;:::-;12079:65;12120:16;;-1:-1:-1;12120:16:42;-1:-1:-1;8483:3668:42;-1:-1:-1;;;;;;;;;;;8483:3668:42:o;17023:484::-;17110:4;17126:13;17149:90;17166:2;17156:6;:12;17149:90;;17193:11;17202:2;17193:6;:11;:::i;:::-;17184:20;-1:-1:-1;17218:10:42;;;;:::i;:::-;;;;17149:90;;;17470:30;17486:13;17470:8;:30;:::i;14:180:124:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:124;;14:180;-1:-1:-1;14:180:124:o;199:154::-;285:42;278:5;274:54;267:5;264:65;254:93;;343:1;340;333:12;358:134;426:20;;455:31;426:20;455:31;:::i;:::-;358:134;;;:::o;497:247::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;664:9;651:23;683:31;708:5;683:31;:::i;1379:125::-;1464:14;1457:5;1453:26;1446:5;1443:37;1433:65;;1494:1;1491;1484:12;1509:132;1576:20;;1605:30;1576:20;1605:30;:::i;1646:245::-;1704:6;1757:2;1745:9;1736:7;1732:23;1728:32;1725:52;;;1773:1;1770;1763:12;1725:52;1812:9;1799:23;1831:30;1855:5;1831:30;:::i;1896:591::-;1966:6;1974;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2083:9;2070:23;2112:18;2153:2;2145:6;2142:14;2139:34;;;2169:1;2166;2159:12;2139:34;2207:6;2196:9;2192:22;2182:32;;2252:7;2245:4;2241:2;2237:13;2233:27;2223:55;;2274:1;2271;2264:12;2223:55;2314:2;2301:16;2340:2;2332:6;2329:14;2326:34;;;2356:1;2353;2346:12;2326:34;2401:7;2396:2;2387:6;2383:2;2379:15;2375:24;2372:37;2369:57;;;2422:1;2419;2412:12;2369:57;2453:2;2445:11;;;;;2475:6;;-1:-1:-1;1896:591:124;;-1:-1:-1;;;;1896:591:124:o;2492:118::-;2578:5;2571:13;2564:21;2557:5;2554:32;2544:60;;2600:1;2597;2590:12;2615:128;2680:20;;2709:28;2680:20;2709:28;:::i;2748:241::-;2804:6;2857:2;2845:9;2836:7;2832:23;2828:32;2825:52;;;2873:1;2870;2863:12;2825:52;2912:9;2899:23;2931:28;2953:5;2931:28;:::i;3225:320::-;3317:6;3325;3378:3;3366:9;3357:7;3353:23;3349:33;3346:53;;;3395:1;3392;3385:12;3346:53;3431:9;3418:23;3408:33;;3477:7;3471:3;3460:9;3456:19;3453:32;3450:52;;;3498:1;3495;3488:12;3450:52;-1:-1:-1;3225:320:124;3536:2;3521:18;;;;;-1:-1:-1;3225:320:124:o;5652:382::-;5717:6;5725;5778:2;5766:9;5757:7;5753:23;5749:32;5746:52;;;5794:1;5791;5784:12;5746:52;5833:9;5820:23;5852:31;5877:5;5852:31;:::i;:::-;5902:5;-1:-1:-1;5959:2:124;5944:18;;5931:32;5972:30;5931:32;5972:30;:::i;:::-;6021:7;6011:17;;;5652:382;;;;;:::o;6039:315::-;6107:6;6115;6168:2;6156:9;6147:7;6143:23;6139:32;6136:52;;;6184:1;6181;6174:12;6136:52;6220:9;6207:23;6197:33;;6280:2;6269:9;6265:18;6252:32;6293:31;6318:5;6293:31;:::i;6359:184::-;6411:77;6408:1;6401:88;6508:4;6505:1;6498:15;6532:4;6529:1;6522:15;6548:247;6615:2;6609:9;6657:3;6645:16;;6691:18;6676:34;;6712:22;;;6673:62;6670:88;;;6738:18;;:::i;:::-;6774:2;6767:22;6548:247;:::o;6800:935::-;6881:6;6934:3;6922:9;6913:7;6909:23;6905:33;6902:53;;;6951:1;6948;6941:12;6902:53;7000:7;6993:4;6982:9;6978:20;6974:34;6964:62;;7022:1;7019;7012:12;6964:62;7055:2;7049:9;7097:3;7089:6;7085:16;7167:6;7155:10;7152:22;7131:18;7119:10;7116:34;7113:62;7110:88;;;7178:18;;:::i;:::-;7214:2;7207:22;7249:6;7293:3;7278:19;;7309;;;7306:39;;;7341:1;7338;7331:12;7306:39;7365:9;7383:321;7399:6;7394:3;7391:15;7383:321;;;7481:3;7468:17;7529:10;7522:5;7518:22;7511:5;7508:33;7498:131;;7583:1;7612:2;7608;7601:14;7498:131;7642:18;;7689:4;7680:14;;;;7416;7383:321;;;-1:-1:-1;7723:6:124;;6800:935;-1:-1:-1;;;;;6800:935:124:o;7740:383::-;7817:6;7825;7833;7886:2;7874:9;7865:7;7861:23;7857:32;7854:52;;;7902:1;7899;7892:12;7854:52;7938:9;7925:23;7915:33;;7995:2;7984:9;7980:18;7967:32;7957:42;;8049:2;8038:9;8034:18;8021:32;8062:31;8087:5;8062:31;:::i;:::-;8112:5;8102:15;;;7740:383;;;;;:::o;9394:316::-;9471:6;9479;9487;9540:2;9528:9;9519:7;9515:23;9511:32;9508:52;;;9556:1;9553;9546:12;9508:52;-1:-1:-1;;9579:23:124;;;9649:2;9634:18;;9621:32;;-1:-1:-1;9700:2:124;9685:18;;;9672:32;;9394:316;-1:-1:-1;9394:316:124:o;10056:184::-;10126:6;10179:2;10167:9;10158:7;10154:23;10150:32;10147:52;;;10195:1;10192;10185:12;10147:52;-1:-1:-1;10218:16:124;;10056:184;-1:-1:-1;10056:184:124:o;10245:::-;10297:77;10294:1;10287:88;10394:4;10391:1;10384:15;10418:4;10415:1;10408:15;10434:228;10474:7;10600:1;10532:66;10528:74;10525:1;10522:81;10517:1;10510:9;10503:17;10499:105;10496:131;;;10607:18;;:::i;:::-;-1:-1:-1;10647:9:124;;10434:228::o;10667:225::-;10706:4;10735:14;10799:10;;;;10769;;10821:12;;;10818:38;;;10836:18;;:::i;:::-;10873:13;;10667:225;-1:-1:-1;;;10667:225:124:o;10897:1148::-;10987:6;11040:3;11028:9;11019:7;11015:23;11011:33;11008:53;;;11057:1;11054;11047:12;11008:53;11083:17;;:::i;:::-;11123:29;11142:9;11123:29;:::i;:::-;11116:5;11109:44;11185:38;11219:2;11208:9;11204:18;11185:38;:::i;:::-;11180:2;11173:5;11169:14;11162:62;11256:38;11290:2;11279:9;11275:18;11256:38;:::i;:::-;11251:2;11244:5;11240:14;11233:62;11327:38;11361:2;11350:9;11346:18;11327:38;:::i;:::-;11322:2;11315:5;11311:14;11304:62;11399:38;11432:3;11421:9;11417:19;11399:38;:::i;:::-;11393:3;11386:5;11382:15;11375:63;11471:38;11504:3;11493:9;11489:19;11471:38;:::i;:::-;11465:3;11458:5;11454:15;11447:63;11543:36;11574:3;11563:9;11559:19;11543:36;:::i;:::-;11537:3;11530:5;11526:15;11519:61;11641:3;11630:9;11626:19;11613:33;11607:3;11600:5;11596:15;11589:58;11666:3;11701:37;11734:2;11723:9;11719:18;11701:37;:::i;:::-;11685:14;;;11678:61;11758:3;11793:37;11811:18;;;11793:37;:::i;:::-;11777:14;;;11770:61;11850:3;11885:37;11903:18;;;11885:37;:::i;:::-;11869:14;;;11862:61;11942:3;11977:37;11995:18;;;11977:37;:::i;:::-;11961:14;;;11954:61;11965:5;10897:1148;-1:-1:-1;;;10897:1148:124:o;12524:245::-;12591:6;12644:2;12632:9;12623:7;12619:23;12615:32;12612:52;;;12660:1;12657;12650:12;12612:52;12692:9;12686:16;12711:28;12733:5;12711:28;:::i;12774:249::-;12843:6;12896:2;12884:9;12875:7;12871:23;12867:32;12864:52;;;12912:1;12909;12902:12;12864:52;12944:9;12938:16;12963:30;12987:5;12963:30;:::i;13028:125::-;13068:4;13096:1;13093;13090:8;13087:34;;;13101:18;;:::i;:::-;-1:-1:-1;13138:9:124;;13028:125::o;13158:128::-;13198:3;13229:1;13225:6;13222:1;13219:13;13216:39;;;13235:18;;:::i;:::-;-1:-1:-1;13271:9:124;;13158:128::o;13291:184::-;13343:77;13340:1;13333:88;13440:4;13437:1;13430:15;13464:4;13461:1;13454:15;13842:232;13881:3;13909:14;13950:2;13947:1;13943:10;13980:2;13977:1;13973:10;14011:3;14007:2;14003:12;13998:3;13995:21;13992:47;;;14019:18;;:::i;:::-;14055:13;;13842:232;-1:-1:-1;;;;13842:232:124:o;14079:273::-;14147:6;14200:2;14188:9;14179:7;14175:23;14171:32;14168:52;;;14216:1;14213;14206:12;14168:52;14248:9;14242:16;14298:4;14291:5;14287:16;14280:5;14277:27;14267:55;;14318:1;14315;14308:12;14790:237;14823:3;14870:5;14867:1;14856:20;14900:66;14891:7;14888:79;14885:105;;14970:18;;:::i;:::-;15010:1;15006:15;;14790:237;-1:-1:-1;;14790:237:124:o;15032:388::-;15069:1;15110;15107;15096:16;15146:1;15143;15132:16;15167:3;15157:37;;15174:18;;:::i;:::-;15295:66;15290:3;15287:75;15218:66;15213:3;15210:75;15206:157;15203:183;;;15366:18;;:::i;:::-;15400:14;;;15032:388;-1:-1:-1;;;15032:388:124:o;15425:391::-;15462:4;15506:1;15503;15492:16;15542:1;15539;15528:16;15572:1;15567:3;15563:11;15683:3;15615:66;15611:76;15606:3;15602:86;15597:2;15590:10;15586:103;15583:129;;;15692:18;;:::i;:::-;15751:3;15745:4;15741:14;15736:3;15732:24;15728:2;15724:33;15721:59;;;15760:18;;:::i;:::-;-1:-1:-1;15797:13:124;;;15425:391;-1:-1:-1;;;15425:391:124:o;15821:482::-;15910:1;15953:5;15910:1;15967:330;15988:7;15978:8;15975:21;15967:330;;;16107:4;16039:66;16035:77;16029:4;16026:87;16023:113;;;16116:18;;:::i;:::-;16166:7;16156:8;16152:22;16149:55;;;16186:16;;;;16149:55;16265:22;;;;16225:15;;;;15967:330;;;15971:3;15821:482;;;;;:::o;16308:866::-;16357:5;16387:8;16377:80;;-1:-1:-1;16428:1:124;16442:5;;16377:80;16476:4;16466:76;;-1:-1:-1;16513:1:124;16527:5;;16466:76;16558:4;16576:1;16571:59;;;;16644:1;16639:130;;;;16551:218;;16571:59;16601:1;16592:10;;16615:5;;;16639:130;16676:3;16666:8;16663:17;16660:43;;;16683:18;;:::i;:::-;-1:-1:-1;;16739:1:124;16725:16;;16754:5;;16551:218;;16853:2;16843:8;16840:16;16834:3;16828:4;16825:13;16821:36;16815:2;16805:8;16802:16;16797:2;16791:4;16788:12;16784:35;16781:77;16778:159;;;-1:-1:-1;16890:19:124;;;16922:5;;16778:159;16969:34;16994:8;16988:4;16969:34;:::i;:::-;17099:6;17031:66;17027:79;17018:7;17015:92;17012:118;;;17110:18;;:::i;:::-;17148:20;;16308:866;-1:-1:-1;;;16308:866:124:o;17179:140::-;17237:5;17266:47;17307:4;17297:8;17293:19;17287:4;17266:47;:::i;17324:389::-;17361:3;17404:1;17401;17390:16;17440:1;17437;17426:16;17470:1;17465:3;17461:11;17519:3;17513:4;17509:14;17504:3;17500:24;17495:2;17488:10;17484:41;17481:67;;;17528:18;;:::i;:::-;17649:3;17581:66;17577:76;17572:3;17568:86;17564:2;17560:95;17557:121;;;17658:18;;:::i;:::-;-1:-1:-1;17694:13:124;;17324:389;-1:-1:-1;;;17324:389:124:o;17718:120::-;17758:1;17784;17774:35;;17789:18;;:::i;:::-;-1:-1:-1;17823:9:124;;17718:120::o;17843:178::-;17879:3;17926:5;17923:1;17912:20;17956:4;17947:7;17944:17;17941:43;;17964:18;;:::i;:::-;18013:1;18000:15;;17843:178;-1:-1:-1;;17843:178:124:o",
    "linkReferences": {},
    "immutableReferences": {
      "36521": [
        {
          "start": 686,
          "length": 32
        },
        {
          "start": 9320,
          "length": 32
        }
      ],
      "36524": [
        {
          "start": 1119,
          "length": 32
        },
        {
          "start": 6017,
          "length": 32
        },
        {
          "start": 7235,
          "length": 32
        },
        {
          "start": 7415,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowNewMarkets()": "afa9d3b0",
    "authority()": "bf7e214f",
    "callbackAuthorized(address)": "5dc4d16b",
    "closeMarket(uint256)": "ae418095",
    "createMarket(bytes)": "53c7f8e0",
    "currentCapacity(uint256)": "1c063a6c",
    "getAggregator()": "3ad59dbc",
    "getMarketInfoForPurchase(uint256)": "acc5570c",
    "getTeller()": "9787d107",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "markets(uint256)": "b1283e77",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "maxPayout(uint256)": "57e333ba",
    "minDepositInterval()": "d2040687",
    "minMarketDuration()": "d2bee323",
    "newOwners(uint256)": "6729a41e",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "pullOwnership(uint256)": "10b05317",
    "purchaseBond(uint256,uint256,uint256)": "e007fa97",
    "pushOwnership(uint256,address)": "bcf6cde8",
    "setAllowNewMarkets(bool)": "5f77274e",
    "setAuthority(address)": "7a9e5e4b",
    "setCallbackAuthStatus(address,bool)": "bbbdd95a",
    "setDefaults(uint32[6])": "bd1f3a5e",
    "setIntervals(uint256,uint32[3])": "699e17d9",
    "setMinDepositInterval(uint48)": "f61338f6",
    "setMinMarketDuration(uint48)": "44ee0172",
    "setOwner(address)": "13af4035",
    "terms(uint256)": "c0aa0e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"teller_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auctioneer_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_BadExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MarketNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MaxPayoutExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NewMarketsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotEnoughCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OnlyMarketOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OraclePriceZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowNewMarkets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callbackAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAggregator\",\"outputs\":[{\"internalType\":\"contract IBondAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getMarketInfoForPurchase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"maxPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInterval\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketDuration\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchaseBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setAllowNewMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setCallbackAuthStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[6]\",\"name\":\"defaults_\",\"type\":\"uint32[6]\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint32[3]\",\"name\":\"intervals_\",\"type\":\"uint32[3]\"}],\"name\":\"setIntervals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"depositInterval_\",\"type\":\"uint48\"}],\"name\":\"setMinDepositInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"}],\"name\":\"setMinMarketDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"contract IBondOracle\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"fixedDiscount\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleConversion\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty\",\"details\":\"Bond Protocol is a permissionless system to create bond markets      for any token pair. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.An Auctioneer contract allows users to create and manage bond markets.      All bond pricing logic and market data is stored in the Auctioneer.      An Auctioneer is dependent on a Teller to serve external users and      an Aggregator to register new markets. The Fixed Discount Auctioneer      lets issuers set a Fixed Discount to an oracle price to buy a      target amount of quote tokens or sell a target amount of payout tokens      over the duration of a market.      See IBondOFDA.sol for price format details.The Fixed-Term Fixed Discount Auctioneer is an implementation of the      Bond Bas Fixed Discount Auctioneer contract specific to creating bond markets where      purchases vest in a fixed amount of time after purchased (rounded to the day).\",\"kind\":\"dev\",\"methods\":{\"closeMarket(uint256)\":{\"params\":{\"id_\":\"ID of market to close\"}},\"createMarket(bytes)\":{\"details\":\"See specific auctioneer implementations for details on encoding the parameters.\",\"params\":{\"params_\":\"Configuration data needed for market creation, encoded in a bytes array\"},\"returns\":{\"_0\":\"id              ID of new bond market\"}},\"getMarketInfoForPurchase(uint256)\":{\"params\":{\"id_\":\"Market ID\"},\"returns\":{\"callbackAddr\":\"   Address of the callback contract to get tokens for payouts\",\"maxPayout_\":\"      Maximum amount of payout tokens you can purchase in one transaction\",\"owner\":\"          Address of the market owner (tokens transferred from this address if no callback)\",\"payoutToken\":\"    Payout Token (token paid out) for the Market\",\"quoteToken\":\"     Quote Token (token received) for the Market\",\"vesting\":\"        Timestamp or duration for vesting, implementation-dependent\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"marketPrice(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market in configured decimals\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"maxPayout(uint256)\":{\"details\":\"Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current max payout for the market in payout tokens\"}},\"ownerOf(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"pullOwnership(uint256)\":{\"details\":\"The existing owner must call pushOwnership prior to the newOwner calling this function\",\"params\":{\"id_\":\"Market ID\"}},\"purchaseBond(uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond (after fee has been deducted)\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\"},\"returns\":{\"payout\":\"         Amount of payout token to be received from the bond\"}},\"pushOwnership(uint256,address)\":{\"details\":\"Doesn't change permissions until newOwner calls pullOwnership\",\"params\":{\"id_\":\"Market ID\",\"newOwner_\":\"New address to give ownership to\"}},\"setAllowNewMarkets(bool)\":{\"details\":\"Setting to false and allowing active markets to end will sunset the auctioneer\",\"params\":{\"status_\":\"Allow market creation (true) : Disallow market creation (false)\"}},\"setCallbackAuthStatus(address,bool)\":{\"details\":\"Callback is believed to be safe, but a whitelist is implemented to prevent abuse\",\"params\":{\"creator_\":\"Address of market creator\",\"status_\":\"Allow callback (true) : Disallow callback (false)\"}},\"setDefaults(uint32[6])\":{\"details\":\"The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change\",\"params\":{\"defaults_\":\"Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown\"}},\"setIntervals(uint256,uint32[3])\":{\"details\":\"Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay\",\"params\":{\"id_\":\"Market ID\",\"intervals_\":\"Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely\"}},\"setMinDepositInterval(uint48)\":{\"params\":{\"depositInterval_\":\"Minimum deposit interval in seconds\"}},\"setMinMarketDuration(uint48)\":{\"params\":{\"duration_\":\"Minimum market duration in seconds\"}}},\"title\":\"Bond Fixed-Term Fixed Discount Auctioneer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowNewMarkets()\":{\"notice\":\"Whether or not the auctioneer allows new markets to be created\"},\"callbackAuthorized(address)\":{\"notice\":\"Whether or not the market creator is authorized to use a callback address\"},\"closeMarket(uint256)\":{\"notice\":\"Disable existing bond marketMust be market owner\"},\"createMarket(bytes)\":{\"notice\":\"Creates a new bond market\"},\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"getAggregator()\":{\"notice\":\"Returns the Aggregator that services the Auctioneer\"},\"getMarketInfoForPurchase(uint256)\":{\"notice\":\"Provides information for the Teller to execute purchases on a Market\"},\"getTeller()\":{\"notice\":\"Returns the Teller that services the Auctioneer\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"markets(uint256)\":{\"notice\":\"Information pertaining to bond markets\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"maxPayout(uint256)\":{\"notice\":\"Calculate max payout of the market in payout tokens\"},\"minDepositInterval()\":{\"notice\":\"Minimum deposit interval for a market\"},\"minMarketDuration()\":{\"notice\":\"Minimum market duration in seconds\"},\"newOwners(uint256)\":{\"notice\":\"New address to designate as market owner. They must accept ownership to transfer permissions.\"},\"ownerOf(uint256)\":{\"notice\":\"Returns the address of the market owner\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"pullOwnership(uint256)\":{\"notice\":\"Accept ownership of a marketMust be market newOwner\"},\"purchaseBond(uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified marketMust be teller\"},\"pushOwnership(uint256,address)\":{\"notice\":\"Designate a new owner of a marketMust be market owner\"},\"setAllowNewMarkets(bool)\":{\"notice\":\"Change the status of the auctioneer to allow creation of new markets\"},\"setCallbackAuthStatus(address,bool)\":{\"notice\":\"Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian\"},\"setDefaults(uint32[6])\":{\"notice\":\"Set the auctioneer defaultsMust be policy\"},\"setIntervals(uint256,uint32[3])\":{\"notice\":\"Set market intervals to different values than the defaultsMust be market owner\"},\"setMinDepositInterval(uint48)\":{\"notice\":\"Set the minimum deposit intervalAccess controlled\"},\"setMinMarketDuration(uint48)\":{\"notice\":\"Set the minimum market durationAccess controlled\"},\"terms(uint256)\":{\"notice\":\"Information pertaining to market vesting and duration\"}},\"notice\":\"Bond Fixed-Term Fixed Discount Auctioneer Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondFixedTermOFDA.sol\":\"BondFixedTermOFDA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":clones/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a\",\"dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"src/BondFixedTermOFDA.sol\":{\"keccak256\":\"0x9c079f2fbbab6b997577e4e381213fd1b52632a1e9f938e944122244fff47b54\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9e8425d31ac56911ce5f4f6321053d427a76959e0d918d911e59f4dd0efb8546\",\"dweb:/ipfs/QmbfFhcSmDTYrr8i9KRSS2ZZqugokQBkTERjXFadYbMtAB\"]},\"src/bases/BondBaseOFDA.sol\":{\"keccak256\":\"0xea7fe20c43f00def3f676311ec9886935c59250e68f6e42a78e39ec995b09045\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://29f6a9d3dd9ff4d192244f8fa93663c7e669772dd59ae3cf67d268e0953b5255\",\"dweb:/ipfs/QmQZDcTwq3JYRK1vUCPD9xuzKYDeQk86ZExynut7zwAVn9\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/interfaces/IBondOFDA.sol\":{\"keccak256\":\"0x28dcea17caf38456523961bede9ad3fcac051c8daaff67bb789ecdc2193d48e0\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e3ff270769f73e83b8a7daf3baf89ff96032d7af4e9bf5b55917969f869a18fb\",\"dweb:/ipfs/QmYgzN9XtW71HVsy6B2edWXzVYsH1MQ5YTwEKfzEnBRrUk\"]},\"src/interfaces/IBondOracle.sol\":{\"keccak256\":\"0x7a88cb925d998d049fee844aa714b2b6e8255475f2c5f0b309a5c9213f28d532\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d0777ceee20b5aa166a35b0ecdb394f7abb36bbcbec48b5f885c92269a16ebcd\",\"dweb:/ipfs/QmQpMZEAMmzbo3b1jYfit7s4JHE2KjBd6DQxfaHC9tHNxC\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/lib/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb\",\"dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "teller_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_BadExpiry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MarketNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MaxPayoutExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NewMarketsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotEnoughCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OnlyMarketOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OraclePriceZero"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketClosed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payoutToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowNewMarkets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "callbackAuthorized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "params_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAggregator",
          "outputs": [
            {
              "internalType": "contract IBondAggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfoForPurchase",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPayout",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositInterval",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minMarketDuration",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "newOwners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowNewMarkets"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCallbackAuthStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[6]",
              "name": "defaults_",
              "type": "uint32[6]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaults"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint32[3]",
              "name": "intervals_",
              "type": "uint32[3]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntervals"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "depositInterval_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDepositInterval"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "duration_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinMarketDuration"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "terms",
          "outputs": [
            {
              "internalType": "contract IBondOracle",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "fixedDiscount",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleConversion",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "closeMarket(uint256)": {
            "params": {
              "id_": "ID of market to close"
            }
          },
          "createMarket(bytes)": {
            "details": "See specific auctioneer implementations for details on encoding the parameters.",
            "params": {
              "params_": "Configuration data needed for market creation, encoded in a bytes array"
            },
            "returns": {
              "_0": "id              ID of new bond market"
            }
          },
          "getMarketInfoForPurchase(uint256)": {
            "params": {
              "id_": "Market ID"
            },
            "returns": {
              "callbackAddr": "   Address of the callback contract to get tokens for payouts",
              "maxPayout_": "      Maximum amount of payout tokens you can purchase in one transaction",
              "owner": "          Address of the market owner (tokens transferred from this address if no callback)",
              "payoutToken": "    Payout Token (token paid out) for the Market",
              "quoteToken": "     Quote Token (token received) for the Market",
              "vesting": "        Timestamp or duration for vesting, implementation-dependent"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "marketPrice(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market in configured decimals"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "maxPayout(uint256)": {
            "details": "Returns a dynamically calculated payout or the maximum set by the creator, whichever is less.",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current max payout for the market in payout tokens"
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "pullOwnership(uint256)": {
            "details": "The existing owner must call pushOwnership prior to the newOwner calling this function",
            "params": {
              "id_": "Market ID"
            }
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond (after fee has been deducted)",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning"
            },
            "returns": {
              "payout": "         Amount of payout token to be received from the bond"
            }
          },
          "pushOwnership(uint256,address)": {
            "details": "Doesn't change permissions until newOwner calls pullOwnership",
            "params": {
              "id_": "Market ID",
              "newOwner_": "New address to give ownership to"
            }
          },
          "setAllowNewMarkets(bool)": {
            "details": "Setting to false and allowing active markets to end will sunset the auctioneer",
            "params": {
              "status_": "Allow market creation (true) : Disallow market creation (false)"
            }
          },
          "setCallbackAuthStatus(address,bool)": {
            "details": "Callback is believed to be safe, but a whitelist is implemented to prevent abuse",
            "params": {
              "creator_": "Address of market creator",
              "status_": "Allow callback (true) : Disallow callback (false)"
            }
          },
          "setDefaults(uint32[6])": {
            "details": "The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change",
            "params": {
              "defaults_": "Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown"
            }
          },
          "setIntervals(uint256,uint32[3])": {
            "details": "Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay",
            "params": {
              "id_": "Market ID",
              "intervals_": "Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely"
            }
          },
          "setMinDepositInterval(uint48)": {
            "params": {
              "depositInterval_": "Minimum deposit interval in seconds"
            }
          },
          "setMinMarketDuration(uint48)": {
            "params": {
              "duration_": "Minimum market duration in seconds"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowNewMarkets()": {
            "notice": "Whether or not the auctioneer allows new markets to be created"
          },
          "callbackAuthorized(address)": {
            "notice": "Whether or not the market creator is authorized to use a callback address"
          },
          "closeMarket(uint256)": {
            "notice": "Disable existing bond marketMust be market owner"
          },
          "createMarket(bytes)": {
            "notice": "Creates a new bond market"
          },
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "getAggregator()": {
            "notice": "Returns the Aggregator that services the Auctioneer"
          },
          "getMarketInfoForPurchase(uint256)": {
            "notice": "Provides information for the Teller to execute purchases on a Market"
          },
          "getTeller()": {
            "notice": "Returns the Teller that services the Auctioneer"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "markets(uint256)": {
            "notice": "Information pertaining to bond markets"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "maxPayout(uint256)": {
            "notice": "Calculate max payout of the market in payout tokens"
          },
          "minDepositInterval()": {
            "notice": "Minimum deposit interval for a market"
          },
          "minMarketDuration()": {
            "notice": "Minimum market duration in seconds"
          },
          "newOwners(uint256)": {
            "notice": "New address to designate as market owner. They must accept ownership to transfer permissions."
          },
          "ownerOf(uint256)": {
            "notice": "Returns the address of the market owner"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "pullOwnership(uint256)": {
            "notice": "Accept ownership of a marketMust be market newOwner"
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified marketMust be teller"
          },
          "pushOwnership(uint256,address)": {
            "notice": "Designate a new owner of a marketMust be market owner"
          },
          "setAllowNewMarkets(bool)": {
            "notice": "Change the status of the auctioneer to allow creation of new markets"
          },
          "setCallbackAuthStatus(address,bool)": {
            "notice": "Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian"
          },
          "setDefaults(uint32[6])": {
            "notice": "Set the auctioneer defaultsMust be policy"
          },
          "setIntervals(uint256,uint32[3])": {
            "notice": "Set market intervals to different values than the defaultsMust be market owner"
          },
          "setMinDepositInterval(uint48)": {
            "notice": "Set the minimum deposit intervalAccess controlled"
          },
          "setMinMarketDuration(uint48)": {
            "notice": "Set the minimum market durationAccess controlled"
          },
          "terms(uint256)": {
            "notice": "Information pertaining to market vesting and duration"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "clones/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-code-metrics/=node_modules/solidity-code-metrics/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondFixedTermOFDA.sol": "BondFixedTermOFDA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x45a3dedcffe229eb4393a1ac5233da3d332cddae4cf97fc44602614329c1f70a",
        "urls": [
          "bzz-raw://7c68f29850ecef367a8075517c1cde2e0566793df30fc642cfbb74354681f59a",
          "dweb:/ipfs/QmStrjT3FoSNo8mXfqkPqppxyqbVtru2wQnE1qt9bc1UXE"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/BondFixedTermOFDA.sol": {
        "keccak256": "0x9c079f2fbbab6b997577e4e381213fd1b52632a1e9f938e944122244fff47b54",
        "urls": [
          "bzz-raw://9e8425d31ac56911ce5f4f6321053d427a76959e0d918d911e59f4dd0efb8546",
          "dweb:/ipfs/QmbfFhcSmDTYrr8i9KRSS2ZZqugokQBkTERjXFadYbMtAB"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/bases/BondBaseOFDA.sol": {
        "keccak256": "0xea7fe20c43f00def3f676311ec9886935c59250e68f6e42a78e39ec995b09045",
        "urls": [
          "bzz-raw://29f6a9d3dd9ff4d192244f8fa93663c7e669772dd59ae3cf67d268e0953b5255",
          "dweb:/ipfs/QmQZDcTwq3JYRK1vUCPD9xuzKYDeQk86ZExynut7zwAVn9"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondOFDA.sol": {
        "keccak256": "0x28dcea17caf38456523961bede9ad3fcac051c8daaff67bb789ecdc2193d48e0",
        "urls": [
          "bzz-raw://e3ff270769f73e83b8a7daf3baf89ff96032d7af4e9bf5b55917969f869a18fb",
          "dweb:/ipfs/QmYgzN9XtW71HVsy6B2edWXzVYsH1MQ5YTwEKfzEnBRrUk"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondOracle.sol": {
        "keccak256": "0x7a88cb925d998d049fee844aa714b2b6e8255475f2c5f0b309a5c9213f28d532",
        "urls": [
          "bzz-raw://d0777ceee20b5aa166a35b0ecdb394f7abb36bbcbec48b5f885c92269a16ebcd",
          "dweb:/ipfs/QmQpMZEAMmzbo3b1jYfit7s4JHE2KjBd6DQxfaHC9tHNxC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/lib/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0x865961696dac7409544668120ea9b7720423a3198cb823378c9c244c50398c20",
        "urls": [
          "bzz-raw://728f7439dc495dc64969f047293d36235ba0b72da49f02c11a7816c5ef67a2eb",
          "dweb:/ipfs/QmZDWkHA8hSshRVycoyNw8rhrtmbdqxE1Qb3Bbf6gQDwT4"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondFixedTermOFDA.sol",
    "id": 34448,
    "exportedSymbols": {
      "Authority": [
        29632
      ],
      "BondBaseOFDA": [
        37882
      ],
      "BondFixedTermOFDA": [
        34447
      ],
      "IBondAggregator": [
        42920
      ],
      "IBondTeller": [
        44166
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2531:36",
    "nodes": [
      {
        "id": 34373,
        "nodeType": "PragmaDirective",
        "src": "46:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 34377,
        "nodeType": "ImportDirective",
        "src": "71:82:36",
        "nodes": [],
        "absolutePath": "src/bases/BondBaseOFDA.sol",
        "file": "./bases/BondBaseOFDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34448,
        "sourceUnit": 37883,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34374,
              "name": "BondBaseOFDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37882,
              "src": "79:12:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34375,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42920,
              "src": "93:15:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34376,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29632,
              "src": "110:9:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34379,
        "nodeType": "ImportDirective",
        "src": "154:57:36",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondTeller.sol",
        "file": "./interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34448,
        "sourceUnit": 44167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34378,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44166,
              "src": "162:11:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34447,
        "nodeType": "ContractDefinition",
        "src": "1648:928:36",
        "nodes": [
          {
            "id": 34403,
            "nodeType": "FunctionDefinition",
            "src": "1741:201:36",
            "nodes": [],
            "body": {
              "id": 34402,
              "nodeType": "Block",
              "src": "1940:2:36",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34396,
                    "name": "teller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34385,
                    "src": "1895:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  {
                    "id": 34397,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34388,
                    "src": "1904:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 34398,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34390,
                    "src": "1917:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 34399,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34393,
                    "src": "1928:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 34400,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34395,
                  "name": "BondBaseOFDA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37882,
                  "src": "1882:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1882:57:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34385,
                  "mutability": "mutable",
                  "name": "teller_",
                  "nameLocation": "1774:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34403,
                  "src": "1762:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$44166",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 34384,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34383,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44166,
                      "src": "1762:11:36"
                    },
                    "referencedDeclaration": 44166,
                    "src": "1762:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$44166",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34388,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1807:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34403,
                  "src": "1791:27:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 34387,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34386,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42920,
                      "src": "1791:15:36"
                    },
                    "referencedDeclaration": 42920,
                    "src": "1791:15:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$42920",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34390,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1836:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34403,
                  "src": "1828:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34393,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "1865:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34403,
                  "src": "1855:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$29632",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 34392,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34391,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29632,
                      "src": "1855:9:36"
                    },
                    "referencedDeclaration": 29632,
                    "src": "1855:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$29632",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:129:36"
            },
            "returnParameters": {
              "id": 34401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1940:0:36"
            },
            "scope": 34447,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34446,
            "nodeType": "FunctionDefinition",
            "src": "2030:544:36",
            "nodes": [],
            "body": {
              "id": 34445,
              "nodeType": "Block",
              "src": "2112:462:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34414,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2216:6:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 34445,
                      "src": "2196:26:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                        "typeString": "struct IBondOFDA.MarketParams"
                      },
                      "typeName": {
                        "id": 34413,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34412,
                          "name": "MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43772,
                          "src": "2196:12:36"
                        },
                        "referencedDeclaration": 43772,
                        "src": "2196:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43772_storage_ptr",
                          "typeString": "struct IBondOFDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34421,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34417,
                        "name": "params_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34406,
                        "src": "2236:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 34418,
                            "name": "MarketParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43772,
                            "src": "2246:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MarketParams_$43772_storage_ptr_$",
                              "typeString": "type(struct IBondOFDA.MarketParams storage pointer)"
                            }
                          }
                        ],
                        "id": 34419,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2245:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$43772_storage_ptr_$",
                          "typeString": "type(struct IBondOFDA.MarketParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$43772_storage_ptr_$",
                          "typeString": "type(struct IBondOFDA.MarketParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 34415,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2225:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2225:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 34420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:35:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                      "typeString": "struct IBondOFDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2196:64:36"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 34425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34422,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34414,
                          "src": "2352:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                            "typeString": "struct IBondOFDA.MarketParams memory"
                          }
                        },
                        "id": 34423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43767,
                        "src": "2352:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2370:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2352:19:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 34434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 34429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 34426,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34414,
                                "src": "2376:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                                  "typeString": "struct IBondOFDA.MarketParams memory"
                                }
                              },
                              "id": 34427,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43767,
                              "src": "2376:14:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 34428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2393:6:36",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "2376:23:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 34433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 34430,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34414,
                                "src": "2403:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                                  "typeString": "struct IBondOFDA.MarketParams memory"
                                }
                              },
                              "id": 34431,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43767,
                              "src": "2403:14:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 34432,
                              "name": "MAX_FIXED_TERM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36515,
                              "src": "2420:14:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "2403:31:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2376:58:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 34435,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2375:60:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2352:83:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34440,
                  "nodeType": "IfStatement",
                  "src": "2348:134:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34437,
                        "name": "Auctioneer_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36459,
                        "src": "2456:24:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2456:26:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34439,
                    "nodeType": "RevertStatement",
                    "src": "2449:33:36"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34442,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34414,
                        "src": "2560:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                          "typeString": "struct IBondOFDA.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$43772_memory_ptr",
                          "typeString": "struct IBondOFDA.MarketParams memory"
                        }
                      ],
                      "id": 34441,
                      "name": "_createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36889,
                      "src": "2546:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParams_$43772_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondOFDA.MarketParams memory) returns (uint256)"
                      }
                    },
                    "id": 34443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:21:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34411,
                  "id": 34444,
                  "nodeType": "Return",
                  "src": "2539:28:36"
                }
              ]
            },
            "baseFunctions": [
              36571
            ],
            "documentation": {
              "id": 34404,
              "nodeType": "StructuredDocumentation",
              "src": "1997:28:36",
              "text": "@inheritdoc BondBaseOFDA"
            },
            "functionSelector": "53c7f8e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "2039:12:36",
            "overrides": {
              "id": 34408,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2085:8:36"
            },
            "parameters": {
              "id": 34407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34406,
                  "mutability": "mutable",
                  "name": "params_",
                  "nameLocation": "2067:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34446,
                  "src": "2052:22:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34405,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:24:36"
            },
            "returnParameters": {
              "id": 34411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34410,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34446,
                  "src": "2103:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2102:9:36"
            },
            "scope": 34447,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34381,
              "name": "BondBaseOFDA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37882,
              "src": "1678:12:36"
            },
            "id": 34382,
            "nodeType": "InheritanceSpecifier",
            "src": "1678:12:36"
          }
        ],
        "canonicalName": "BondFixedTermOFDA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34380,
          "nodeType": "StructuredDocumentation",
          "src": "213:1435:36",
          "text": "@title Bond Fixed-Term Fixed Discount Auctioneer\n @notice Bond Fixed-Term Fixed Discount Auctioneer Contract\n @dev Bond Protocol is a permissionless system to create bond markets\n      for any token pair. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev An Auctioneer contract allows users to create and manage bond markets.\n      All bond pricing logic and market data is stored in the Auctioneer.\n      An Auctioneer is dependent on a Teller to serve external users and\n      an Aggregator to register new markets. The Fixed Discount Auctioneer\n      lets issuers set a Fixed Discount to an oracle price to buy a\n      target amount of quote tokens or sell a target amount of payout tokens\n      over the duration of a market.\n      See IBondOFDA.sol for price format details.\n @dev The Fixed-Term Fixed Discount Auctioneer is an implementation of the\n      Bond Bas Fixed Discount Auctioneer contract specific to creating bond markets where\n      purchases vest in a fixed amount of time after purchased (rounded to the day).\n @author Oighty"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34447,
          37882,
          29619,
          43802,
          43105
        ],
        "name": "BondFixedTermOFDA",
        "nameLocation": "1657:17:36",
        "scope": 34448,
        "usedErrors": [
          36445,
          36447,
          36449,
          36451,
          36453,
          36455,
          36457,
          36459,
          36461,
          36463,
          36465
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 36
}