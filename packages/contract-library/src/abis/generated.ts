//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// aggregator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const aggregatorABI = [
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "payout_", internalType: "address", type: "address" },
      { name: "quote_", internalType: "address", type: "address" },
      { name: "amountIn_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
      { name: "maxExpiry_", internalType: "uint256", type: "uint256" },
    ],
    name: "findMarketFor",
    outputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getAuctioneer",
    outputs: [
      { name: "", internalType: "contract IBondAuctioneer", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "firstIndex_", internalType: "uint256", type: "uint256" },
      { name: "lastIndex_", internalType: "uint256", type: "uint256" },
    ],
    name: "liveMarketsBetween",
    outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "firstIndex_", internalType: "uint256", type: "uint256" },
      { name: "lastIndex_", internalType: "uint256", type: "uint256" },
    ],
    name: "liveMarketsBy",
    outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token_", internalType: "address", type: "address" },
      { name: "isPayout_", internalType: "bool", type: "bool" },
    ],
    name: "liveMarketsFor",
    outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "payout_", internalType: "address", type: "address" },
      { name: "quote_", internalType: "address", type: "address" },
    ],
    name: "marketsFor",
    outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "auctioneer_",
        internalType: "contract IBondAuctioneer",
        type: "address",
      },
    ],
    name: "registerAuctioneer",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "payoutToken_", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken_", internalType: "contract ERC20", type: "address" },
    ],
    name: "registerMarket",
    outputs: [{ name: "marketId", internalType: "uint256", type: "uint256" }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// authority
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const authorityABI = [
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "target", internalType: "address", type: "address" },
      { name: "functionSig", internalType: "bytes4", type: "bytes4" },
    ],
    name: "canCall",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baseAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baseAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baseTeller
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baseTellerABI = [
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokens_", internalType: "contract ERC20[]", type: "address[]" },
      { name: "to_", internalType: "address", type: "address" },
    ],
    name: "claimFees",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "referrer_", internalType: "address", type: "address" }],
    name: "getFee",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient_", internalType: "address", type: "address" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchase",
    outputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint48", type: "uint48" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "discount_", internalType: "uint48", type: "uint48" }],
    name: "setCreateFeeDiscount",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "fee_", internalType: "uint48", type: "uint48" }],
    name: "setProtocolFee",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "fee_", internalType: "uint48", type: "uint48" }],
    name: "setReferrerFee",
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// chainlinkOracle
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const chainlinkOracleABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "aggregator_", internalType: "address", type: "address" },
      { name: "auctioneers_", internalType: "address[]", type: "address[]" },
    ],
  },
  {
    type: "error",
    inputs: [{ name: "feed_", internalType: "address", type: "address" }],
    name: "BondOracle_BadFeed",
  },
  { type: "error", inputs: [], name: "BondOracle_InvalidParams" },
  {
    type: "error",
    inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    name: "BondOracle_MarketNotRegistered",
  },
  {
    type: "error",
    inputs: [{ name: "auctioneer", internalType: "address", type: "address" }],
    name: "BondOracle_NotAuctioneer",
  },
  {
    type: "error",
    inputs: [
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
    ],
    name: "BondOracle_PairNotSupported",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "auctioneer",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      { name: "supported", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "AuctioneerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: false },
      {
        name: "quoteToken",
        internalType: "contract ERC20",
        type: "address",
        indexed: false,
      },
      {
        name: "payoutToken",
        internalType: "contract ERC20",
        type: "address",
        indexed: false,
      },
    ],
    name: "MarketRegistered",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "previousOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "quoteToken",
        internalType: "contract ERC20",
        type: "address",
        indexed: false,
      },
      {
        name: "payoutToken",
        internalType: "contract ERC20",
        type: "address",
        indexed: false,
      },
      { name: "supported", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "PairUpdated",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "aggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "quoteToken_", internalType: "contract ERC20", type: "address" },
      { name: "payoutToken_", internalType: "contract ERC20", type: "address" },
    ],
    name: "currentPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "quoteToken_", internalType: "contract ERC20", type: "address" },
      { name: "payoutToken_", internalType: "contract ERC20", type: "address" },
    ],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "isAuctioneer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "markets",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "contract ERC20", type: "address" },
      { name: "", internalType: "contract ERC20", type: "address" },
    ],
    name: "priceFeedParams",
    outputs: [
      {
        name: "numeratorFeed",
        internalType: "contract AggregatorV2V3Interface",
        type: "address",
      },
      {
        name: "numeratorUpdateThreshold",
        internalType: "uint48",
        type: "uint48",
      },
      {
        name: "denominatorFeed",
        internalType: "contract AggregatorV2V3Interface",
        type: "address",
      },
      {
        name: "denominatorUpdateThreshold",
        internalType: "uint48",
        type: "uint48",
      },
      { name: "decimals", internalType: "uint8", type: "uint8" },
      { name: "div", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "quoteToken_", internalType: "contract ERC20", type: "address" },
      { name: "payoutToken_", internalType: "contract ERC20", type: "address" },
    ],
    name: "registerMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "auctioneer_", internalType: "address", type: "address" },
      { name: "supported_", internalType: "bool", type: "bool" },
    ],
    name: "setAuctioneer",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "quoteToken_", internalType: "contract ERC20", type: "address" },
      { name: "payoutToken_", internalType: "contract ERC20", type: "address" },
      { name: "supported_", internalType: "bool", type: "bool" },
      { name: "oracleData_", internalType: "bytes", type: "bytes" },
    ],
    name: "setPair",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "contract ERC20", type: "address" },
      { name: "", internalType: "contract ERC20", type: "address" },
    ],
    name: "supportedPairs",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    constant: true,
    payable: false,
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "guy", type: "address" },
      { name: "wad", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", type: "bool" }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "src", type: "address" },
      { name: "dst", type: "address" },
      { name: "wad", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", type: "bool" }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "wad", type: "uint256" }],
    name: "withdraw",
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", type: "uint8" }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "dst", type: "address" },
      { name: "wad", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", type: "bool" }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: "payable",
    type: "function",
    inputs: [],
    name: "deposit",
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", type: "address" },
      { name: "", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", type: "uint256" }],
  },
  { payable: true, stateMutability: "payable", type: "fallback" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "src", type: "address", indexed: true },
      { name: "guy", type: "address", indexed: true },
      { name: "wad", type: "uint256", indexed: false },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "src", type: "address", indexed: true },
      { name: "dst", type: "address", indexed: true },
      { name: "wad", type: "uint256", indexed: false },
    ],
    name: "Transfer",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "dst", type: "address", indexed: true },
      { name: "wad", type: "uint256", indexed: false },
    ],
    name: "Deposit",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "src", type: "address", indexed: true },
      { name: "wad", type: "uint256", indexed: false },
    ],
    name: "Withdrawal",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryFPAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryFpaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "fixedPrice",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "depositInterval_", internalType: "uint48", type: "uint48" },
    ],
    name: "setMinDepositInterval",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinMarketDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryOFDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryOfdaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  { type: "error", inputs: [], name: "Auctioneer_OraclePriceZero" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "depositInterval_", internalType: "uint48", type: "uint48" },
    ],
    name: "setMinDepositInterval",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinMarketDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "oracle", internalType: "contract IBondOracle", type: "address" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "fixedDiscount", internalType: "uint48", type: "uint48" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
      { name: "oracleConversion", internalType: "uint256", type: "uint256" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryOSDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryOsdaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InitialPriceLessThanMin" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  { type: "error", inputs: [], name: "Auctioneer_OraclePriceZero" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "oldControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Tuned",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "depositInterval_", internalType: "uint48", type: "uint48" },
    ],
    name: "setMinDepositInterval",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinMarketDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "oracle", internalType: "contract IBondOracle", type: "address" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "baseDiscount", internalType: "uint48", type: "uint48" },
      { name: "decaySpeed", internalType: "uint48", type: "uint48" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
      { name: "oracleConversion", internalType: "uint256", type: "uint256" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpirySDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpirySdaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InitialPriceLessThanMin" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "defaultTuneInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "defaultTuneAdjustment",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtDecayInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDepositInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minMarketDuration",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtBuffer",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
    ],
    name: "DefaultsUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "initialPrice",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "oldControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Tuned",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "adjustments",
    outputs: [
      { name: "change", internalType: "uint256", type: "uint256" },
      { name: "lastAdjustment", internalType: "uint48", type: "uint48" },
      { name: "timeToAdjusted", internalType: "uint48", type: "uint48" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentControlVariable",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentDebt",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneAdjustment",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "totalDebt", internalType: "uint256", type: "uint256" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "metadata",
    outputs: [
      { name: "lastTune", internalType: "uint48", type: "uint48" },
      { name: "lastDecay", internalType: "uint48", type: "uint48" },
      { name: "depositInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneAdjustmentDelay", internalType: "uint32", type: "uint32" },
      { name: "debtDecayInterval", internalType: "uint32", type: "uint32" },
      {
        name: "tuneIntervalCapacity",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "tuneBelowCapacity", internalType: "uint256", type: "uint256" },
      { name: "lastTuneDebt", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtBuffer",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtDecayInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "controlVariable", internalType: "uint256", type: "uint256" },
      { name: "maxDebt", internalType: "uint256", type: "uint256" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpirySDAv1_1Auctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpirySdAv1_1AuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InitialPriceLessThanMin" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "defaultTuneInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "defaultTuneAdjustment",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtDecayInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDepositInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minMarketDuration",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtBuffer",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
    ],
    name: "DefaultsUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "initialPrice",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "oldControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Tuned",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "adjustments",
    outputs: [
      { name: "change", internalType: "uint256", type: "uint256" },
      { name: "lastAdjustment", internalType: "uint48", type: "uint48" },
      { name: "timeToAdjusted", internalType: "uint48", type: "uint48" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentControlVariable",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentDebt",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneAdjustment",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "totalDebt", internalType: "uint256", type: "uint256" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "metadata",
    outputs: [
      { name: "lastTune", internalType: "uint48", type: "uint48" },
      { name: "lastDecay", internalType: "uint48", type: "uint48" },
      { name: "depositInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneAdjustmentDelay", internalType: "uint32", type: "uint32" },
      { name: "debtDecayInterval", internalType: "uint32", type: "uint32" },
      {
        name: "tuneIntervalCapacity",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "tuneBelowCapacity", internalType: "uint256", type: "uint256" },
      { name: "lastTuneDebt", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtBuffer",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtDecayInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "controlVariable", internalType: "uint256", type: "uint256" },
      { name: "maxDebt", internalType: "uint256", type: "uint256" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryTeller
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryTellerABI = [
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "underlying_", internalType: "contract ERC20", type: "address" },
      { name: "expiry_", internalType: "uint48", type: "uint48" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "create",
    outputs: [
      { name: "", internalType: "contract ERC20BondToken", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "underlying_", internalType: "contract ERC20", type: "address" },
      { name: "expiry_", internalType: "uint48", type: "uint48" },
    ],
    name: "deploy",
    outputs: [
      { name: "", internalType: "contract ERC20BondToken", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "underlying_", internalType: "contract ERC20", type: "address" },
      { name: "expiry_", internalType: "uint48", type: "uint48" },
    ],
    name: "getBondToken",
    outputs: [
      { name: "", internalType: "contract ERC20BondToken", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getBondTokenForMarket",
    outputs: [
      { name: "", internalType: "contract ERC20BondToken", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "token_",
        internalType: "contract ERC20BondToken",
        type: "address",
      },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "redeem",
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermFPAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermFpaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "fixedPrice",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "depositInterval_", internalType: "uint48", type: "uint48" },
    ],
    name: "setMinDepositInterval",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinMarketDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermOFDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermOfdaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  { type: "error", inputs: [], name: "Auctioneer_OraclePriceZero" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "depositInterval_", internalType: "uint48", type: "uint48" },
    ],
    name: "setMinDepositInterval",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinMarketDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "oracle", internalType: "contract IBondOracle", type: "address" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "fixedDiscount", internalType: "uint48", type: "uint48" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
      { name: "oracleConversion", internalType: "uint256", type: "uint256" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermOSDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermOsdaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InitialPriceLessThanMin" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  { type: "error", inputs: [], name: "Auctioneer_OraclePriceZero" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "oldControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Tuned",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "depositInterval_", internalType: "uint48", type: "uint48" },
    ],
    name: "setMinDepositInterval",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinMarketDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "oracle", internalType: "contract IBondOracle", type: "address" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "baseDiscount", internalType: "uint48", type: "uint48" },
      { name: "decaySpeed", internalType: "uint48", type: "uint48" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
      { name: "oracleConversion", internalType: "uint256", type: "uint256" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermSDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermSdaAuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InitialPriceLessThanMin" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "defaultTuneInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "defaultTuneAdjustment",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtDecayInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDepositInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minMarketDuration",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtBuffer",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
    ],
    name: "DefaultsUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "initialPrice",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "oldControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Tuned",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "adjustments",
    outputs: [
      { name: "change", internalType: "uint256", type: "uint256" },
      { name: "lastAdjustment", internalType: "uint48", type: "uint48" },
      { name: "timeToAdjusted", internalType: "uint48", type: "uint48" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentControlVariable",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentDebt",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneAdjustment",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "totalDebt", internalType: "uint256", type: "uint256" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "metadata",
    outputs: [
      { name: "lastTune", internalType: "uint48", type: "uint48" },
      { name: "lastDecay", internalType: "uint48", type: "uint48" },
      { name: "depositInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneAdjustmentDelay", internalType: "uint32", type: "uint32" },
      { name: "debtDecayInterval", internalType: "uint32", type: "uint32" },
      {
        name: "tuneIntervalCapacity",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "tuneBelowCapacity", internalType: "uint256", type: "uint256" },
      { name: "lastTuneDebt", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtBuffer",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtDecayInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "controlVariable", internalType: "uint256", type: "uint256" },
      { name: "maxDebt", internalType: "uint256", type: "uint256" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermSDAv1_1Auctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermSdAv1_1AuctioneerABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "teller_",
        internalType: "contract IBondTeller",
        type: "address",
      },
      {
        name: "aggregator_",
        internalType: "contract IBondAggregator",
        type: "address",
      },
      { name: "guardian_", internalType: "address", type: "address" },
      {
        name: "authority_",
        internalType: "contract Authority",
        type: "address",
      },
    ],
  },
  { type: "error", inputs: [], name: "Auctioneer_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auctioneer_BadExpiry" },
  { type: "error", inputs: [], name: "Auctioneer_InitialPriceLessThanMin" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidCallback" },
  { type: "error", inputs: [], name: "Auctioneer_InvalidParams" },
  { type: "error", inputs: [], name: "Auctioneer_MarketNotActive" },
  { type: "error", inputs: [], name: "Auctioneer_MaxPayoutExceeded" },
  { type: "error", inputs: [], name: "Auctioneer_NewMarketsNotAllowed" },
  { type: "error", inputs: [], name: "Auctioneer_NotAuthorized" },
  { type: "error", inputs: [], name: "Auctioneer_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auctioneer_OnlyMarketOwner" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorityUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "defaultTuneInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "defaultTuneAdjustment",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtDecayInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDepositInterval",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minMarketDuration",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      {
        name: "minDebtBuffer",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
    ],
    name: "DefaultsUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
    ],
    name: "MarketClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "payoutToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "quoteToken",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "vesting",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "initialPrice",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MarketCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "oldControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newControlVariable",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Tuned",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "adjustments",
    outputs: [
      { name: "change", internalType: "uint256", type: "uint256" },
      { name: "lastAdjustment", internalType: "uint48", type: "uint48" },
      { name: "timeToAdjusted", internalType: "uint48", type: "uint48" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allowNewMarkets",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "authority",
    outputs: [
      { name: "", internalType: "contract Authority", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "callbackAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "closeMarket",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "params_", internalType: "bytes", type: "bytes" }],
    name: "createMarket",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentControlVariable",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "currentDebt",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneAdjustment",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultTuneInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getAggregator",
    outputs: [
      { name: "", internalType: "contract IBondAggregator", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "getMarketInfoForPurchase",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getTeller",
    outputs: [
      { name: "", internalType: "contract IBondTeller", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isInstantSwap",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketPrice",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "marketScale",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "markets",
    outputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "payoutToken", internalType: "contract ERC20", type: "address" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      { name: "callbackAddr", internalType: "address", type: "address" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "totalDebt", internalType: "uint256", type: "uint256" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "maxPayout", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
      { name: "scale", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "metadata",
    outputs: [
      { name: "lastTune", internalType: "uint48", type: "uint48" },
      { name: "lastDecay", internalType: "uint48", type: "uint48" },
      { name: "depositInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneInterval", internalType: "uint32", type: "uint32" },
      { name: "tuneAdjustmentDelay", internalType: "uint32", type: "uint32" },
      { name: "debtDecayInterval", internalType: "uint32", type: "uint32" },
      {
        name: "tuneIntervalCapacity",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "tuneBelowCapacity", internalType: "uint256", type: "uint256" },
      { name: "lastTuneDebt", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtBuffer",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDebtDecayInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minDepositInterval",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minMarketDuration",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "newOwners",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "id_", internalType: "uint256", type: "uint256" }],
    name: "pullOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "minAmountOut_", internalType: "uint256", type: "uint256" },
    ],
    name: "purchaseBond",
    outputs: [{ name: "payout", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "newOwner_", internalType: "address", type: "address" },
    ],
    name: "pushOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "status_", internalType: "bool", type: "bool" }],
    name: "setAllowNewMarkets",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "newAuthority",
        internalType: "contract Authority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "creator_", internalType: "address", type: "address" },
      { name: "status_", internalType: "bool", type: "bool" },
    ],
    name: "setCallbackAuthStatus",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "defaults_", internalType: "uint32[6]", type: "uint32[6]" },
    ],
    name: "setDefaults",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id_", internalType: "uint256", type: "uint256" },
      { name: "intervals_", internalType: "uint32[3]", type: "uint32[3]" },
    ],
    name: "setIntervals",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "terms",
    outputs: [
      { name: "controlVariable", internalType: "uint256", type: "uint256" },
      { name: "maxDebt", internalType: "uint256", type: "uint256" },
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "vesting", internalType: "uint48", type: "uint48" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermTeller
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermTellerABI = [
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenIds_", internalType: "uint256[]", type: "uint256[]" },
      { name: "amounts_", internalType: "uint256[]", type: "uint256[]" },
    ],
    name: "batchRedeem",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "underlying_", internalType: "contract ERC20", type: "address" },
      { name: "expiry_", internalType: "uint48", type: "uint48" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "create",
    outputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "underlying_", internalType: "contract ERC20", type: "address" },
      { name: "expiry_", internalType: "uint48", type: "uint48" },
    ],
    name: "deploy",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "payoutToken_", internalType: "contract ERC20", type: "address" },
      { name: "expiry_", internalType: "uint48", type: "uint48" },
    ],
    name: "getTokenId",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "getTokenNameAndSymbol",
    outputs: [
      { name: "", internalType: "string", type: "string" },
      { name: "", internalType: "string", type: "string" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "redeem",
    outputs: [],
  },
] as const;
