//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// aggregator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const aggregatorABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  {
    type: 'error',
    inputs: [{ name: 'auctioneer_', internalType: 'address', type: 'address' }],
    name: 'Aggregator_AlreadyRegistered',
  },
  { type: 'error', inputs: [], name: 'Aggregator_InvalidParams' },
  { type: 'error', inputs: [], name: 'Aggregator_OnlyAuctioneer' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'auctioneers',
    outputs: [
      { name: '', internalType: 'contract IBondAuctioneer', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'payout_', internalType: 'address', type: 'address' },
      { name: 'quote_', internalType: 'address', type: 'address' },
      { name: 'amountIn_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
      { name: 'maxExpiry_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'findMarketFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getAuctioneer',
    outputs: [
      { name: '', internalType: 'contract IBondAuctioneer', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'firstIndex_', internalType: 'uint256', type: 'uint256' },
      { name: 'lastIndex_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liveMarketsBetween',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner_', internalType: 'address', type: 'address' },
      { name: 'firstIndex_', internalType: 'uint256', type: 'uint256' },
      { name: 'lastIndex_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'liveMarketsBy',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'token_', internalType: 'address', type: 'address' },
      { name: 'isPayout_', internalType: 'bool', type: 'bool' },
    ],
    name: 'liveMarketsFor',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'marketCounter',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'payout_', internalType: 'address', type: 'address' },
      { name: 'quote_', internalType: 'address', type: 'address' },
    ],
    name: 'marketsFor',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'marketsForPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'marketsForQuote',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'marketsToAuctioneers',
    outputs: [
      { name: '', internalType: 'contract IBondAuctioneer', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'auctioneer_',
        internalType: 'contract IBondAuctioneer',
        type: 'address',
      },
    ],
    name: 'registerAuctioneer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'payoutToken_', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken_', internalType: 'contract ERC20', type: 'address' },
    ],
    name: 'registerMarket',
    outputs: [{ name: 'marketId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// authority
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const authorityABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'target', internalType: 'address', type: 'address' },
      { name: 'functionSig', internalType: 'bytes4', type: 'bytes4' },
    ],
    name: 'canCall',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryFPAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryFpaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
      {
        name: 'fixedPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'depositInterval_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'setMinDepositInterval',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'duration_', internalType: 'uint48', type: 'uint48' }],
    name: 'setMinMarketDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryOFDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryOfdaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'depositInterval_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'setMinDepositInterval',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'duration_', internalType: 'uint48', type: 'uint48' }],
    name: 'setMinMarketDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'oracle', internalType: 'contract IBondOracle', type: 'address' },
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'fixedDiscount', internalType: 'uint48', type: 'uint48' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
      { name: 'oracleConversion', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryOSDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryOsdaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InitialPriceLessThanMin' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  { type: 'error', inputs: [], name: 'Auctioneer_OraclePriceZero' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'oldControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Tuned',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'depositInterval_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'setMinDepositInterval',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'duration_', internalType: 'uint48', type: 'uint48' }],
    name: 'setMinMarketDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'oracle', internalType: 'contract IBondOracle', type: 'address' },
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'baseDiscount', internalType: 'uint48', type: 'uint48' },
      { name: 'decaySpeed', internalType: 'uint48', type: 'uint48' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
      { name: 'oracleConversion', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpirySDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpirySdaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InitialPriceLessThanMin' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  {
    type: 'error',
    inputs: [{ name: 'conclusion_', internalType: 'uint256', type: 'uint256' }],
    name: 'Auctioneer_MarketConcluded',
  },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
      {
        name: 'initialPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'oldControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Tuned',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'adjustments',
    outputs: [
      { name: 'change', internalType: 'uint256', type: 'uint256' },
      { name: 'lastAdjustment', internalType: 'uint48', type: 'uint48' },
      { name: 'timeToAdjusted', internalType: 'uint48', type: 'uint48' },
      { name: 'active', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentControlVariable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneAdjustment',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'totalDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'metadata',
    outputs: [
      { name: 'lastTune', internalType: 'uint48', type: 'uint48' },
      { name: 'lastDecay', internalType: 'uint48', type: 'uint48' },
      { name: 'length', internalType: 'uint32', type: 'uint32' },
      { name: 'depositInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneAdjustmentDelay', internalType: 'uint32', type: 'uint32' },
      { name: 'debtDecayInterval', internalType: 'uint32', type: 'uint32' },
      {
        name: 'tuneIntervalCapacity',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'tuneBelowCapacity', internalType: 'uint256', type: 'uint256' },
      { name: 'lastTuneDebt', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtBuffer',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtDecayInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'controlVariable', internalType: 'uint256', type: 'uint256' },
      { name: 'maxDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpirySDAv1_1Auctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpirySdAv1_1AuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InitialPriceLessThanMin' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'defaultTuneInterval',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'defaultTuneAdjustment',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minDebtDecayInterval',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minDepositInterval',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minMarketDuration',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minDebtBuffer',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
    ],
    name: 'DefaultsUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
      {
        name: 'initialPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'oldControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Tuned',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'adjustments',
    outputs: [
      { name: 'change', internalType: 'uint256', type: 'uint256' },
      { name: 'lastAdjustment', internalType: 'uint48', type: 'uint48' },
      { name: 'timeToAdjusted', internalType: 'uint48', type: 'uint48' },
      { name: 'active', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentControlVariable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneAdjustment',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'totalDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'metadata',
    outputs: [
      { name: 'lastTune', internalType: 'uint48', type: 'uint48' },
      { name: 'lastDecay', internalType: 'uint48', type: 'uint48' },
      { name: 'depositInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneAdjustmentDelay', internalType: 'uint32', type: 'uint32' },
      { name: 'debtDecayInterval', internalType: 'uint32', type: 'uint32' },
      {
        name: 'tuneIntervalCapacity',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'tuneBelowCapacity', internalType: 'uint256', type: 'uint256' },
      { name: 'lastTuneDebt', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtBuffer',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtDecayInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'controlVariable', internalType: 'uint256', type: 'uint256' },
      { name: 'maxDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedExpiryTeller
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedExpiryTellerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'protocol_', internalType: 'address', type: 'address' },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'CreateFail' },
  { type: 'error', inputs: [], name: 'Teller_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Teller_InvalidParams' },
  { type: 'error', inputs: [], name: 'Teller_NotAuthorized' },
  {
    type: 'error',
    inputs: [
      { name: 'underlying', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'Teller_TokenDoesNotExist',
  },
  {
    type: 'error',
    inputs: [{ name: 'maturesOn', internalType: 'uint48', type: 'uint48' }],
    name: 'Teller_TokenNotMatured',
  },
  { type: 'error', inputs: [], name: 'Teller_UnsupportedToken' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'referrer',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'payout',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Bonded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'bondToken',
        internalType: 'contract ERC20BondToken',
        type: 'address',
        indexed: false,
      },
      {
        name: 'underlying',
        internalType: 'contract ERC20',
        type: 'address',
        indexed: true,
      },
      { name: 'expiry', internalType: 'uint48', type: 'uint48', indexed: true },
    ],
    name: 'ERC20BondTokenCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'FEE_DECIMALS',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'bondTokenImplementation',
    outputs: [
      { name: '', internalType: 'contract ERC20BondToken', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'contract ERC20', type: 'address' },
      { name: '', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'bondTokens',
    outputs: [
      { name: '', internalType: 'contract ERC20BondToken', type: 'address' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokens_', internalType: 'contract ERC20[]', type: 'address[]' },
      { name: 'to_', internalType: 'address', type: 'address' },
    ],
    name: 'claimFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'underlying_', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry_', internalType: 'uint48', type: 'uint48' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'create',
    outputs: [
      { name: '', internalType: 'contract ERC20BondToken', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'createFeeDiscount',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'underlying_', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'deploy',
    outputs: [
      { name: '', internalType: 'contract ERC20BondToken', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getBondTokenForMarket',
    outputs: [
      { name: '', internalType: 'contract ERC20BondToken', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'referrer_', internalType: 'address', type: 'address' }],
    name: 'getFee',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'protocolFee',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient_', internalType: 'address', type: 'address' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchase',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'token_',
        internalType: 'contract ERC20BondToken',
        type: 'address',
      },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'redeem',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'referrerFees',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'contract ERC20', type: 'address' },
    ],
    name: 'rewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'fee_', internalType: 'uint48', type: 'uint48' }],
    name: 'setProtocolFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'fee_', internalType: 'uint48', type: 'uint48' }],
    name: 'setReferrerFee',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermFPAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermFpaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
      {
        name: 'fixedPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'depositInterval_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'setMinDepositInterval',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'duration_', internalType: 'uint48', type: 'uint48' }],
    name: 'setMinMarketDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermOFDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermOfdaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'depositInterval_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'setMinDepositInterval',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'duration_', internalType: 'uint48', type: 'uint48' }],
    name: 'setMinMarketDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'oracle', internalType: 'contract IBondOracle', type: 'address' },
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'fixedDiscount', internalType: 'uint48', type: 'uint48' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
      { name: 'oracleConversion', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermOSDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermOsdaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InitialPriceLessThanMin' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  { type: 'error', inputs: [], name: 'Auctioneer_OraclePriceZero' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'oldControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Tuned',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'depositInterval_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'setMinDepositInterval',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'duration_', internalType: 'uint48', type: 'uint48' }],
    name: 'setMinMarketDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'oracle', internalType: 'contract IBondOracle', type: 'address' },
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'baseDiscount', internalType: 'uint48', type: 'uint48' },
      { name: 'decaySpeed', internalType: 'uint48', type: 'uint48' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
      { name: 'oracleConversion', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermSDAAuctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermSdaAuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InitialPriceLessThanMin' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  {
    type: 'error',
    inputs: [{ name: 'conclusion_', internalType: 'uint256', type: 'uint256' }],
    name: 'Auctioneer_MarketConcluded',
  },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
      {
        name: 'initialPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'oldControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Tuned',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'adjustments',
    outputs: [
      { name: 'change', internalType: 'uint256', type: 'uint256' },
      { name: 'lastAdjustment', internalType: 'uint48', type: 'uint48' },
      { name: 'timeToAdjusted', internalType: 'uint48', type: 'uint48' },
      { name: 'active', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentControlVariable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneAdjustment',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'totalDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'metadata',
    outputs: [
      { name: 'lastTune', internalType: 'uint48', type: 'uint48' },
      { name: 'lastDecay', internalType: 'uint48', type: 'uint48' },
      { name: 'length', internalType: 'uint32', type: 'uint32' },
      { name: 'depositInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneAdjustmentDelay', internalType: 'uint32', type: 'uint32' },
      { name: 'debtDecayInterval', internalType: 'uint32', type: 'uint32' },
      {
        name: 'tuneIntervalCapacity',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'tuneBelowCapacity', internalType: 'uint256', type: 'uint256' },
      { name: 'lastTuneDebt', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtBuffer',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtDecayInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'controlVariable', internalType: 'uint256', type: 'uint256' },
      { name: 'maxDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermSDAv1_1Auctioneer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermSdAv1_1AuctioneerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: 'teller_',
        internalType: 'contract IBondTeller',
        type: 'address',
      },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Auctioneer_AmountLessThanMinimum' },
  { type: 'error', inputs: [], name: 'Auctioneer_BadExpiry' },
  { type: 'error', inputs: [], name: 'Auctioneer_InitialPriceLessThanMin' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Auctioneer_InvalidParams' },
  { type: 'error', inputs: [], name: 'Auctioneer_MarketNotActive' },
  { type: 'error', inputs: [], name: 'Auctioneer_MaxPayoutExceeded' },
  { type: 'error', inputs: [], name: 'Auctioneer_NewMarketsNotAllowed' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotAuthorized' },
  { type: 'error', inputs: [], name: 'Auctioneer_NotEnoughCapacity' },
  { type: 'error', inputs: [], name: 'Auctioneer_OnlyMarketOwner' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'defaultTuneInterval',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'defaultTuneAdjustment',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minDebtDecayInterval',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minDepositInterval',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minMarketDuration',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'minDebtBuffer',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
    ],
    name: 'DefaultsUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'MarketClosed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'payoutToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'quoteToken',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'vesting',
        internalType: 'uint48',
        type: 'uint48',
        indexed: false,
      },
      {
        name: 'initialPrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MarketCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'oldControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newControlVariable',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Tuned',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'adjustments',
    outputs: [
      { name: 'change', internalType: 'uint256', type: 'uint256' },
      { name: 'lastAdjustment', internalType: 'uint48', type: 'uint48' },
      { name: 'timeToAdjusted', internalType: 'uint48', type: 'uint48' },
      { name: 'active', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'allowNewMarkets',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'callbackAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'closeMarket',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'params_', internalType: 'bytes', type: 'bytes' }],
    name: 'createMarket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentCapacity',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentControlVariable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'currentDebt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneAdjustment',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'defaultTuneInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAggregator',
    outputs: [
      { name: '', internalType: 'contract IBondAggregator', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'getMarketInfoForPurchase',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTeller',
    outputs: [
      { name: '', internalType: 'contract IBondTeller', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isInstantSwap',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'isLive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'marketScale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'markets',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'quoteToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'callbackAddr', internalType: 'address', type: 'address' },
      { name: 'capacityInQuote', internalType: 'bool', type: 'bool' },
      { name: 'capacity', internalType: 'uint256', type: 'uint256' },
      { name: 'totalDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'minPrice', internalType: 'uint256', type: 'uint256' },
      { name: 'maxPayout', internalType: 'uint256', type: 'uint256' },
      { name: 'sold', internalType: 'uint256', type: 'uint256' },
      { name: 'purchased', internalType: 'uint256', type: 'uint256' },
      { name: 'scale', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'maxAmountAccepted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'maxPayout',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'metadata',
    outputs: [
      { name: 'lastTune', internalType: 'uint48', type: 'uint48' },
      { name: 'lastDecay', internalType: 'uint48', type: 'uint48' },
      { name: 'depositInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneInterval', internalType: 'uint32', type: 'uint32' },
      { name: 'tuneAdjustmentDelay', internalType: 'uint32', type: 'uint32' },
      { name: 'debtDecayInterval', internalType: 'uint32', type: 'uint32' },
      {
        name: 'tuneIntervalCapacity',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: 'tuneBelowCapacity', internalType: 'uint256', type: 'uint256' },
      { name: 'lastTuneDebt', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtBuffer',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDebtDecayInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDepositInterval',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minMarketDuration',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'newOwners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
    ],
    name: 'payoutFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id_', internalType: 'uint256', type: 'uint256' }],
    name: 'pullOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchaseBond',
    outputs: [{ name: 'payout', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'newOwner_', internalType: 'address', type: 'address' },
    ],
    name: 'pushOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'status_', internalType: 'bool', type: 'bool' }],
    name: 'setAllowNewMarkets',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'creator_', internalType: 'address', type: 'address' },
      { name: 'status_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setCallbackAuthStatus',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'defaults_', internalType: 'uint32[6]', type: 'uint32[6]' },
    ],
    name: 'setDefaults',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'intervals_', internalType: 'uint32[3]', type: 'uint32[3]' },
    ],
    name: 'setIntervals',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'terms',
    outputs: [
      { name: 'controlVariable', internalType: 'uint256', type: 'uint256' },
      { name: 'maxDebt', internalType: 'uint256', type: 'uint256' },
      { name: 'start', internalType: 'uint48', type: 'uint48' },
      { name: 'conclusion', internalType: 'uint48', type: 'uint48' },
      { name: 'vesting', internalType: 'uint48', type: 'uint48' },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedTermTeller
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedTermTellerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'protocol_', internalType: 'address', type: 'address' },
      {
        name: 'aggregator_',
        internalType: 'contract IBondAggregator',
        type: 'address',
      },
      { name: 'guardian_', internalType: 'address', type: 'address' },
      {
        name: 'authority_',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
  },
  { type: 'error', inputs: [], name: 'Teller_InvalidCallback' },
  { type: 'error', inputs: [], name: 'Teller_InvalidParams' },
  { type: 'error', inputs: [], name: 'Teller_NotAuthorized' },
  {
    type: 'error',
    inputs: [
      { name: 'underlying', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'Teller_TokenDoesNotExist',
  },
  {
    type: 'error',
    inputs: [{ name: 'maturesOn', internalType: 'uint48', type: 'uint48' }],
    name: 'Teller_TokenNotMatured',
  },
  { type: 'error', inputs: [], name: 'Teller_UnsupportedToken' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'AuthorityUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'referrer',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'payout',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Bonded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'payoutToken',
        internalType: 'contract ERC20',
        type: 'address',
        indexed: true,
      },
      { name: 'expiry', internalType: 'uint48', type: 'uint48', indexed: true },
    ],
    name: 'ERC1155BondTokenCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'ids',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'amounts',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'TransferSingle',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'FEE_DECIMALS',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'authority',
    outputs: [
      { name: '', internalType: 'contract Authority', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owners', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [
      { name: 'balances', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenIds_', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts_', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'batchRedeem',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokens_', internalType: 'contract ERC20[]', type: 'address[]' },
      { name: 'to_', internalType: 'address', type: 'address' },
    ],
    name: 'claimFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'underlying_', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry_', internalType: 'uint48', type: 'uint48' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'create',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'createFeeDiscount',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'underlying_', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'deploy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'referrer_', internalType: 'address', type: 'address' }],
    name: 'getFee',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'underlying_', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry_', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'getTokenId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId_', internalType: 'uint256', type: 'uint256' }],
    name: 'getTokenNameAndSymbol',
    outputs: [
      { name: '', internalType: 'string', type: 'string' },
      { name: '', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'protocolFee',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient_', internalType: 'address', type: 'address' },
      { name: 'referrer_', internalType: 'address', type: 'address' },
      { name: 'id_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'purchase',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId_', internalType: 'uint256', type: 'uint256' },
      { name: 'amount_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'redeem',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'referrerFees',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'contract ERC20', type: 'address' },
    ],
    name: 'rewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newAuthority',
        internalType: 'contract Authority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'fee_', internalType: 'uint48', type: 'uint48' }],
    name: 'setProtocolFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'fee_', internalType: 'uint48', type: 'uint48' }],
    name: 'setReferrerFee',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenMetadata',
    outputs: [
      { name: 'active', internalType: 'bool', type: 'bool' },
      { name: 'payoutToken', internalType: 'contract ERC20', type: 'address' },
      { name: 'expiry', internalType: 'uint48', type: 'uint48' },
      { name: 'supply', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const;
