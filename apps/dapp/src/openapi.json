{"openapi":"3.1.0","info":{"version":"0.0.1","title":"Order Services Public API"},"servers":[{"description":"Local environment","url":"http://localhost:8080"}],"paths":{"/auth/nonce":{"get":{"summary":"Get a nonce for a sign in request.","operationId":"getNonce","responses":{"200":{"description":"Nonce has been created.","content":{"application/json":{"schema":{"type":"string"}}}},"500":{"description":"Error creating a nonce."}}}},"/auth/sign_in":{"post":{"summary":"Signs the user in, creating and returning a JWT.","operationId":"signIn","requestBody":{"description":"The Sign in With Ethereum message and signature.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SigninData"}}}},"responses":{"200":{"description":"Successfully signed in.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JWTPair"}}}},"400":{"description":"Bad Request - nonce is invalid or does not match nonce in signature."},"500":{"description":"Error creating a nonce."}}}},"/auth/refresh":{"post":{"summary":"Checks a provided refresh token, returns a new access token and refresh token.","operationId":"refreshAuth","requestBody":{"description":"The user's current refresh token.","required":true,"content":{"application/json":{"schema":{"type":"string"}}}},"responses":{"200":{"description":"Successfully refreshed tokens.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JWTPair"}}}},"400":{"description":"Bad Request - refresh token provided is not valid."},"500":{"description":"Error refreshing tokens."}}}},"/auth/test":{"get":{"summary":"Tests whether signed in user can view address provided in params.","operationId":"testAuth","responses":{"200":{"description":"User is authorized to view the address.","content":{"application/json":{"schema":{"type":"string"}}}},"401":{"description":"Unauthorized."}}}},"/fees/estimate":{"get":{"summary":"Estimates fees for an Order","operationId":"estimateFee","parameters":[{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"}],"requestBody":{"description":"An Order object.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"responses":{"200":{"description":"The estimated fees for the Order","content":{"application/json":{"schema":{"type":"integer"}}}},"400":{"description":"Bad Request - Cannot estimate gas for specified chain."},"500":{"description":"Error estimating fees."}}}},"/orders/new":{"post":{"summary":"Submit a new order.","operationId":"createOrder","parameters":[{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"}],"requestBody":{"description":"A signed OrderRequest.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderRequest"}}}},"responses":{"200":{"description":"Successfully submitted OrderRequest.","content":{"application/json":{"schema":{"type":"string"}}}},"400":{"description":"Bad Request - OrderRequest is not valid."},"500":{"description":"Error processing OrderRequest."}}}},"/orders/address/{account_address}":{"get":{"summary":"Get Orders for user address.","operationId":"getOrdersByAddress","parameters":[{"name":"Authorization","description":"JWT Bearer Token","in":"header","schema":{"type":"string"}},{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"},{"in":"path","description":"The address of the Account being queried","name":"account_address","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"An array of Orders for the specified address.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Order"}}}}},"500":{"description":"Error finding Orders."}}}},"/orders/address/{account_address}/active":{"get":{"summary":"Get active Orders for user address.","operationId":"getActiveOrdersByAddress","parameters":[{"name":"Authorization","description":"JWT Bearer Token","in":"header","schema":{"type":"string"}},{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"},{"in":"path","description":"The address of the Account being queried","name":"account_address","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"An array of active Orders for the specified address.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Order"}}}}},"500":{"description":"Error finding Orders."}}}},"/permissions/executors":{"get":{"summary":"Get addresses with executor permissions.","operationId":"getQuoteTokens","parameters":[{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"}],"responses":{"200":{"description":"An array of addresses with executor permissions.","content":{"application/json":{"schema":{"type":"array","items":{"description":"Addresses with executor permissions","type":"string"}}}}},"500":{"description":"Error finding executors."}}}},"/quote_tokens":{"get":{"summary":"Returns all quote tokens on the chain specified in the X-Chain_Id header","parameters":[{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"}],"responses":{"200":{"description":"A list of quote token addresses.","content":{"application/json":{"schema":{"type":"array"}}}},"500":{"description":"Failed to get quote tokens or failed to serialize response."}}}},"/quote_tokens/{address}":{"get":{"summary":"Checks whether the specified quote token is approved.","parameters":[{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"},{"in":"path","description":"The address being queried","name":"address","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"Whether or not the quote token is approved.","content":{"application/json":{"schema":{"type":"boolean"}}}},"500":{"description":"Failed to get approval status or failed to serialize response."}}}}},"components":{"schemas":{"JWTPair":{"description":"A JSON object containing two string fields, access_token and refresh_token.","type":"string"},"SigninData":{"description":"A JSON object containing two string fields, a Sign in With Ethereum message and signature. The nonce found in the decoded signature should match the nonce in the message."},"OrderRequest":{"description":"Parameters for an order, including a signature.","type":"object","properties":{"market_id":{"description":"The id of the market an order is being placed for.","type":"string"},"recipient":{"description":"The address which will receive the purchased tokens.","type":"string"},"referrer":{"description":"The address which will receive the referral fee.","type":"string"},"amount":{"description":"The amount of tokens to purchase.","type":"string"},"min_amount_out":{"description":"The minimum number of tokens the recipient is willing to receive.","type":"string"},"max_fee":{"description":"The maximum fee the recipient will pay.","type":"string"},"submitted":{"description":"Timestamp at which the order was submitted.","type":"string"},"deadline":{"description":"Timestamp at which the order expires.","type":"string"},"user":{"description":"Address of the user who submitted the order.","type":"string"},"signature":{"description":"Signature for a tx containing the same order data.","type":"string"}}},"Order":{"description":"Details of an existing order.","type":"object","properties":{"market_id":{"description":"The id of the market an order is being placed for.","type":"string"},"recipient":{"description":"The address which will receive the purchased tokens.","type":"string"},"referrer":{"description":"The address which will receive the referral fee.","type":"string"},"amount":{"description":"The amount of tokens to purchase.","type":"string"},"min_amount_out":{"description":"The minimum number of tokens the recipient is willing to receive.","type":"string"},"max_fee":{"description":"The maximum fee the recipient will pay.","type":"string"},"submitted":{"description":"Timestamp at which the order was submitted.","type":"string"},"deadline":{"description":"Timestamp at which the order expires.","type":"string"},"user":{"description":"Address of the user who submitted the order.","type":"string"}}}},"securitySchemes":{"AuthorizationHeader":{"name":"Authorization","description":"JWT Bearer Token","in":"header","schema":{"type":"string"}}},"headers":{"X-Chain-Id":{"description":"The chain id to check","schema":{"type":"integer"},"name":"X-Chain-Id","in":"header"},"X-Aggregator":{"description":"The address of the aggregator contract","schema":{"type":"string"},"name":"X-Aggregator","in":"header"},"X-Settlement":{"description":"The address of the settlement contract","schema":{"type":"string"},"name":"X-Settlement","in":"header"}},"parameters":{"AccountAddressParameter":{"in":"path","description":"The address of the Account being queried","name":"account_address","schema":{"type":"string"},"required":true},"AddressParameter":{"in":"path","description":"The address being queried","name":"address","schema":{"type":"string"},"required":true},"ChainIdParameter":{"in":"path","description":"The ID of a chain","name":"chain_id","schema":{"type":"integer"},"required":true}}}}