{
  "name": "dapp",
  "private": true,
  "version": "0.2.2",
  "engines": {
    "node": ">=14.19.1",
    "npm": ">=6.4.0"
  },
  "scripts": {
    "clean": "rm -rf ./dist",
    "dev": "vite",
    "build": "tsc && vite build --emptyOutDir",
    "preview": "vite preview",
    "lint": "eslint --ext .ts,.tsx src",
    "lint-staged": "lint-staged",
    "format": "prettier --write './**/*.{ts,tsx,json}'",
    "codegen": "graphql-codegen --config codegen.ts",
    "storybook": "storybook dev -p 6007 --no-open --quiet",
    "build-storybook": "storybook build",
    "openapi:codegen": "npx openapi-client-axios-typegen ./src/openapi.json > src/types/openapi.d.ts && echo 'export type Order = Components.Schemas.Order;' >> src/types/openapi.d.ts",
    "openapi:make-file": "node ./scripts/make-openapi-config.js",
    "openapi": "pnpm openapi:make-file && pnpm openapi:codegen",
    "postinstall": "node scripts/postinstall.js",
    "local-rpc": "./scripts/local-rpc.sh",
    "env:testing": "dotenvx run -f .env.testing",
    "test:scaffold": "tsx ./cypress/support/scaffold-tests.ts",
    "test:open": "pnpm env:testing -- cypress open",
    "test:run": "pnpm env:testing -- cypress run --browser chrome",
    "test:run:envless": "cypress run --browser chrome",
    "test": "pnpm env:testing -- concurrently --names 'local-rpc,app-server,test-suite' --prefix-colors 'cyan,green,magenta' --kill-others --kill-others-on-fail --success first 'pnpm local-rpc -s' 'pnpm dev --logLevel error' \"sleep 8 && pnpm test:run:envless\""
  },
  "dependencies": {
    "@axis-finance/auto-signer-provider": "^0.0.1",
    "@bond-protocol/contract-library": "workspace:*",
    "@bond-protocol/types": "workspace:*",
    "@esbuild-plugins/node-globals-polyfill": "^0.1.1",
    "@graphql-codegen/client-preset": "^4.1.0",
    "@mui/base": "5.0.0-alpha.88",
    "@rainbow-me/rainbowkit": "1.1.3",
    "@tanstack/react-query": "^5.8.9",
    "@wagmi/chains": "^1.8.0",
    "@wagmi/core": "^1.4.12",
    "axios": "^1.7.4",
    "buffer": "^6.0.3",
    "cypress": "^14.1.0",
    "date-fns": "2.30",
    "dotenv": "^16.0.3",
    "formatters": "workspace:*",
    "graphql": "16.5.0",
    "graphql-request": "^4.3.0",
    "msw": "^2.7.3",
    "openapi-axios-client": "^5.2.4",
    "openapi-client-axios": "^7.3.3",
    "react": "^18.2.0",
    "react-charts": "^3.0.0-beta.50",
    "react-day-picker": "^8.1.4",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.33.1",
    "react-responsive": "^9.0.2",
    "react-router-dom": "^6.3.0",
    "recharts": "^2.1.15",
    "rollup-plugin-polyfill-node": "^0.10.2",
    "tailwindconfig": "workspace:*",
    "tailwindcss": "^3.3.2",
    "ui": "workspace:*",
    "use-deep-compare-effect": "^1.8.1",
    "viem": "1.17.2",
    "viteconfig": "workspace:*",
    "wagmi": "1.4.5"
  },
  "devDependencies": {
    "@babel/core": "^7.18.10",
    "@bond-protocol/eslint-config-custom": "workspace:*",
    "@bond-protocol/tsconfig": "workspace:*",
    "@dotenvx/dotenvx": "^1.39.0",
    "@graphql-codegen/cli": "5.0.0",
    "@graphql-codegen/typescript": "2.6.0",
    "@graphql-codegen/typescript-operations": "2.4.3",
    "@graphql-codegen/typescript-react-query": "^6.0.0",
    "@storybook/addon-essentials": "^7.0.26",
    "@storybook/addon-interactions": "^7.0.26",
    "@storybook/addon-links": "^7.0.26",
    "@storybook/blocks": "^7.0.26",
    "@storybook/react": "^7.0.26",
    "@storybook/react-vite": "^7.0.26",
    "@storybook/testing-library": "^0.0.14-next.2",
    "@types/node": "^16.11.5",
    "@types/react": "^18.2.45",
    "@types/react-dom": "^18.2.18",
    "@typescript-eslint/parser": "^5.28.0",
    "@vitejs/plugin-react": "^1.3.0",
    "autoprefixer": "^10.4.7",
    "babel-loader": "^8.2.5",
    "concurrently": "^7.6.0",
    "husky": "^8.0.0",
    "js-yaml": "^4.1.0",
    "lint-staged": "^13.0.1",
    "postcss": "^8.4.31",
    "prettier": "^2.7.0",
    "prettier-plugin-tailwindcss": "^0.1.13",
    "prop-types": "^15.8.1",
    "storybook": "^7.2.1",
    "tsx": "^4.19.3",
    "typescript": "^5.2.2",
    "vite": "^3.2.7",
    "vite-plugin-svgr": "^4.2.0"
  },
  "msw": {
    "workerDirectory": [
      "src/public"
    ]
  }
}
